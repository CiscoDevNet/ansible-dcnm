---
- debug: msg="Starting dcnm_fabric spine_leaf_replaced test"
- debug: msg="Role Path {{ role_path }}"

- name: Include VRF List Items
  include_vars: ./exec_vars/vrfs.yaml

- name: Cleanup - Delete Networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ fabric_name }}"
    state: deleted

- name: Cleanup - Delete Tenant VRFs
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ fabric_name }}"
    state: deleted

- block:

  - name: Add Tenant VRF Objects
    cisco.dcnm.dcnm_vrf: &add_vrfs
      fabric: "{{ fabric_name }}"
      state: replaced
      config: "{{ vrfs }}"
    register: result

  - assert:
      that:
      - 'result.changed == true'
      - 'result.response|length == 3'

  - name: Add Tenant VRF Objects - Idempotence
    cisco.dcnm.dcnm_vrf: *add_vrfs
    register: result

  - assert:
      that:
      - 'result.changed == false'

  - name: Query VRF State
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: query
    register: result

  - assert: &vrf_created_no_attach_deploy
      that:
      - 'result.response[0].parent.vrfName == "green_red"'
      - 'result.response[0].parent.vrfId == 470000'
      - 'result.response[0].parent.vrfStatus == "NA"'
      - 'result.response[0].attach|length == 4'
      - 'result.response[0].attach[0].switchDetailsList[0].islanAttached == false'
      - 'result.response[0].attach[1].switchDetailsList[0].islanAttached == false'
      - 'result.response[0].attach[2].switchDetailsList[0].islanAttached == false'
      - 'result.response[0].attach[3].switchDetailsList[0].islanAttached == false'
      - 'result.response[1].parent.vrfName == "engineering"'
      - 'result.response[1].parent.vrfId == 480000'
      - 'result.response[1].parent.vrfStatus == "NA"'
      - 'result.response[1].attach|length == 4'
      - 'result.response[1].attach[0].switchDetailsList[0].islanAttached == false'
      - 'result.response[1].attach[1].switchDetailsList[0].islanAttached == false'
      - 'result.response[1].attach[2].switchDetailsList[0].islanAttached == false'
      - 'result.response[1].attach[3].switchDetailsList[0].islanAttached == false'
      - 'result.response[2].parent.vrfName == "sales"'
      - 'result.response[2].parent.vrfId == 550000'
      - 'result.response[2].parent.vrfStatus == "NA"'
      - 'result.response[2].attach|length == 4'
      - 'result.response[2].attach[0].switchDetailsList[0].islanAttached == false'
      - 'result.response[2].attach[1].switchDetailsList[0].islanAttached == false'
      - 'result.response[2].attach[2].switchDetailsList[0].islanAttached == false'
      - 'result.response[2].attach[3].switchDetailsList[0].islanAttached == false'

  - name: Specify attachments to switches with global deploy flag set to false
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: replaced
      config:
        - vrf_name: green_red
          vrf_id: 470000
          vlan_id: 201
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: false
        - vrf_name: engineering
          vrf_id: 480000
          vlan_id: 401
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: false
        - vrf_name: sales
          vrf_id: 550000
          vlan_id: 501
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: false
    register: result

  - name: Query VRF State
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: query
    register: result

  - assert: *vrf_created_no_attach_deploy

  - name: Specify attachments to switches with global deploy flag set to true
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: replaced
      config:
        - vrf_name: green_red
          vrf_id: 470000
          vlan_id: 201
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: true
        - vrf_name: engineering
          vrf_id: 480000
          vlan_id: 401
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: true
        - vrf_name: sales
          vrf_id: 550000
          vlan_id: 501
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: true
    register: result

  - assert:
      that:
      - 'result.changed == true'

  - name: Query fabric state until vrfStatus transitions to DEPLOYED state
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: query
    register: result
    until:
      - "result.response[0].parent.vrfStatus is search('DEPLOYED')"
      - "result.response[1].parent.vrfStatus is search('DEPLOYED')"
      - "result.response[2].parent.vrfStatus is search('DEPLOYED')"
    retries: 20
    delay: 5

  - name: Query VRF State
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: query
    register: result

  - assert:
      that:
      - 'result.response[0].parent.vrfName == "green_red"'
      - 'result.response[0].parent.vrfId == 470000'
      - "result.response[0].parent.vrfStatus is search('DEPLOYED')"
      - 'result.response[0].attach|length == 4'
      - 'result.response[0].attach[0].switchDetailsList[0].islanAttached == true'
      - 'result.response[0].attach[1].switchDetailsList[0].islanAttached == true'
      - 'result.response[0].attach[2].switchDetailsList[0].islanAttached == true'
      - 'result.response[0].attach[3].switchDetailsList[0].islanAttached == true'
      - 'result.response[1].parent.vrfName == "engineering"'
      - 'result.response[1].parent.vrfId == 480000'
      - "result.response[1].parent.vrfStatus is search('DEPLOYED')"
      - 'result.response[1].attach|length == 4'
      - 'result.response[1].attach[0].switchDetailsList[0].islanAttached == true'
      - 'result.response[1].attach[1].switchDetailsList[0].islanAttached == true'
      - 'result.response[1].attach[2].switchDetailsList[0].islanAttached == true'
      - 'result.response[1].attach[3].switchDetailsList[0].islanAttached == true'
      - 'result.response[2].parent.vrfName == "sales"'
      - 'result.response[2].parent.vrfId == 550000'
      - "result.response[2].parent.vrfStatus is search('DEPLOYED')"
      - 'result.response[2].attach|length == 4'
      - 'result.response[2].attach[0].switchDetailsList[0].islanAttached == true'
      - 'result.response[2].attach[1].switchDetailsList[0].islanAttached == true'
      - 'result.response[2].attach[2].switchDetailsList[0].islanAttached == true'
      - 'result.response[2].attach[3].switchDetailsList[0].islanAttached == true'

  - name: Cleanup - Delete Tenant VRFs
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: deleted

  - name: Add vrfs with global and per attach deploy override
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: replaced
      config:
        - vrf_name: green_red
          vrf_id: 470000
          vlan_id: 201
          attach:
            - ip_address: "{{ leaf1 }}"
              deploy: true
            - ip_address: "{{ leaf2 }}"
              deploy: true
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: false
          # vrf green_red should be deployed on leaf1, leaf2
          # vrf green_red should not be deployed on leaf3, leaf4
        - vrf_name: engineering
          vrf_id: 480000
          vlan_id: 401
          attach:
            - ip_address: "{{ leaf1 }}"
              deploy: false
            - ip_address: "{{ leaf2 }}"
              deploy: false
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: true
          # vrf engineering should be deployed on leaf3, leaf4
          # vrf engineering should not be deployed on leaf1, leaf2

  - name: Query fabric state until vrfStatus transitions to DEPLOYED state
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: query
    register: result
    until:
      - "result.response[0].parent.vrfStatus is search('DEPLOYED')"
      - "result.response[1].parent.vrfStatus is search('DEPLOYED')"
    retries: 20
    delay: 5

  - name: Query VRF State
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: query
    register: result

  - assert:
      that:
      - 'result.response[0].parent.vrfName == "green_red"'
      - 'result.response[0].parent.vrfId == 470000'
      - "result.response[0].parent.vrfStatus is search('DEPLOYED')"
      - 'result.response[1].parent.vrfName == "engineering"'
      - 'result.response[1].parent.vrfId == 480000'
      - "result.response[1].parent.vrfStatus is search('DEPLOYED')"

  - name: Cleanup - Delete Tenant VRFs
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: deleted

  - name: Add VRFs with vrf_id and vlan_id autoselection by DCNM
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: replaced
      config:
        - vrf_name: green_red
          # vrf_id: 470000
          # vlan_id: 201
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: true
        - vrf_name: engineering
          # vrf_id: 480000
          # vlan_id: 401
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: true
        - vrf_name: sales
          # vrf_id: 550000
          # vlan_id: 501
          attach:
            - ip_address: "{{ leaf1 }}"
            - ip_address: "{{ leaf2 }}"
            - ip_address: "{{ leaf3 }}"
            - ip_address: "{{ leaf4 }}"
          deploy: true
    register: result

  - name: Query fabric state until vrfStatus transitions to DEPLOYED state
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: query
    register: result
    until:
      - "result.response[0].parent.vrfStatus is search('DEPLOYED')"
      - "result.response[1].parent.vrfStatus is search('DEPLOYED')"
      - "result.response[2].parent.vrfStatus is search('DEPLOYED')"
    retries: 20
    delay: 5

  - name: Query VRF State
    cisco.dcnm.dcnm_vrf:
      fabric: "{{ fabric_name }}"
      state: query
    register: result

  - assert:
      that:
      - 'result.response[0].parent.vrfName == "green_red"'
      - "result.response[0].parent.vrfStatus is search('DEPLOYED')"
      - 'result.response[0].attach|length == 4'
      - 'result.response[0].attach[0].switchDetailsList[0].islanAttached == true'
      - 'result.response[0].attach[1].switchDetailsList[0].islanAttached == true'
      - 'result.response[0].attach[2].switchDetailsList[0].islanAttached == true'
      - 'result.response[0].attach[3].switchDetailsList[0].islanAttached == true'
      - 'result.response[1].parent.vrfName == "engineering"'
      - "result.response[1].parent.vrfStatus is search('DEPLOYED')"
      - 'result.response[1].attach|length == 4'
      - 'result.response[1].attach[0].switchDetailsList[0].islanAttached == true'
      - 'result.response[1].attach[1].switchDetailsList[0].islanAttached == true'
      - 'result.response[1].attach[2].switchDetailsList[0].islanAttached == true'
      - 'result.response[1].attach[3].switchDetailsList[0].islanAttached == true'
      - 'result.response[2].parent.vrfName == "sales"'
      - "result.response[2].parent.vrfStatus is search('DEPLOYED')"
      - 'result.response[2].attach|length == 4'
      - 'result.response[2].attach[0].switchDetailsList[0].islanAttached == true'
      - 'result.response[2].attach[1].switchDetailsList[0].islanAttached == true'
      - 'result.response[2].attach[2].switchDetailsList[0].islanAttached == true'
      - 'result.response[2].attach[3].switchDetailsList[0].islanAttached == true'

  always:
    - debug: msg="End dcnm_fabric spine_leaf_replaced test"
