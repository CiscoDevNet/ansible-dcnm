##############################################
##                 SETUP                    ##
##############################################

- name: DELETED - Verify if fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: /rest/control/fabrics/{{ ansible_it_fabric }}
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: DELETED - Verify if service fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: /rest/control/fabrics/{{ ansible_ext_fabric }}
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: DELETED - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted

- name: DELETED - sleep for 40 seconds for DCNM to completely update the state
  wait_for:
    timeout: 40

- name: DELETED - Create Service Node with 2 switches and vPC Interface with type firewall
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: vPC1
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "vPC1"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'

- name: DELETED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

###############################################
###                 DELETED                  ##
###############################################

- name: DELETED - Create Service Node with 2 switches and vPC Interface with type firewall
  cisco.dcnm.dcnm_service_node: &conf
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: vPC1
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == ""'

- name: DELETED - sleep for 40 seconds for DCNM to completely update the state
  wait_for:
    timeout: 40

- name: DELETED - conf - Idempotence
  cisco.dcnm.dcnm_service_node: *conf
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - sleep for 10 seconds for DCNM to completely update the state
  wait_for:
    timeout: 10

- name: DELETED - Create Service Node with single switch
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: Ethernet1/1
      switches:
      - "{{ ansible_switch1 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "Ethernet1/1"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'

- name: DELETED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: DELETED - Delete Service Node with single switch
  cisco.dcnm.dcnm_service_node: &conf1
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: Ethernet1/1
      switches:
      - "{{ ansible_switch1 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == ""'


- name: DELETED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: DELETED - conf1 - Idempotence
  cisco.dcnm.dcnm_service_node: *conf1
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - sleep for 10 seconds for DCNM to completely update the state
  wait_for:
    timeout: 10

- name: DELETED - Create Service Node with 2 switches and vPC Interface
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: vPC1
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "vPC1"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'

- name: DELETED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: DELETED - Delete Service Node - WITHOUT ANY CONFIG ELEMENT
  cisco.dcnm.dcnm_service_node: &conf2
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == ""'


- name: DELETED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: DELETED - conf2 - Idempotence
  cisco.dcnm.dcnm_service_node: *conf2
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - sleep for 10 seconds for DCNM to completely update the state
  wait_for:
    timeout: 10

- name: DELETED - Create Service Node with single switch
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: Ethernet1/1
      switches:
      - "{{ ansible_switch1 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "Ethernet1/1"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'

- name: DELETED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: DELETED - Delete Service Node - WITHOUT ANY CONFIG ELEMENT
  cisco.dcnm.dcnm_service_node: &conf3
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == ""'

- name: DELETED - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: DELETED - conf3 - Idempotence
  cisco.dcnm.dcnm_service_node: *conf3
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'


################################################
####                 CLEAN-UP                 ##
################################################

- name: DELETED - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted
