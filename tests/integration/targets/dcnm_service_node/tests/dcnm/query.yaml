##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/rest/control/fabrics/{{ ansible_it_fabric }}"
    rest_ext_path: "/rest/control/fabrics/{{ ansible_ext_fabric }}"
  when: controller_version == "11"

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ ansible_it_fabric }}"
    rest_ext_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ ansible_ext_fabric }}"
  when: controller_version >= "12"

- name: QUERY - Verify if fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: QUERY - Verify if service fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_ext_path }}"
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: QUERY - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted

- name: QUERY -  Query fabric state before proceeding
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
  register: result

  until:
    - 'result.response|length == 0'
  retries: 10
  delay: 5

- name: QUERY - Create Service Node with 2 switches and vPC Interface with type firewall
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: "{{ ansible_vpc1 }}"
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'

- name: QUERY - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

###############################################
###                QUERY                     ##
###############################################

- name: QUERY - Query the Service Node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: "{{ ansible_vpc1 }}"
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response[0].attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[0].fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].formFactor == "Virtual"'
    - 'result.response[0].interfaceName == "svc1"'
    - 'result.response[0].linkTemplateName == "service_link_trunk"'
    - 'result.response[0].type == "Firewall"'
    - 'result.response[0].name == "SN-11"'

- name: QUERY - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: QUERY - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'

- assert:
    that:
    - 'result.response[0].MESSAGE == ""'
  when: controller_version == "11"

- assert:
    that:
    - 'result.response[0].MESSAGE == "OK"'
  when: controller_version >= "12"

- name: QUERY -  Query fabric state before proceeding
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
  register: result

  until:
    - 'result.response|length == 0'
  retries: 10
  delay: 5

- name: QUERY - Create Service Node with single switch
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: "{{ ansible_int1 }}"
      switches:
      - "{{ ansible_switch1 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "{{ ansible_int1 }}"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'

- name: QUERY - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: QUERY - Query the - Create Service Node with single switch
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: "{{ ansible_int1 }}"
      switches:
      - "{{ ansible_switch1 }}"
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response[0].attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].attachedSwitchInterfaceName == "{{ ansible_int1 }}"'
    - 'result.response[0].fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].formFactor == "Virtual"'
    - 'result.response[0].interfaceName == "svc1"'
    - 'result.response[0].linkTemplateName == "service_link_trunk"'
    - 'result.response[0].type == "Firewall"'
    - 'result.response[0].name == "SN-11"'

- name: QUERY - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: QUERY - Query without the config element
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query

- assert:
    that:
    - 'result.changed == false'
    - 'result.response[0].attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].attachedSwitchInterfaceName == "{{ ansible_int1 }}"'
    - 'result.response[0].fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].formFactor == "Virtual"'
    - 'result.response[0].interfaceName == "svc1"'
    - 'result.response[0].linkTemplateName == "service_link_trunk"'
    - 'result.response[0].type == "Firewall"'
    - 'result.response[0].name == "SN-11"'

- name: QUERY - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: QUERY - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted

- name: QUERY -  Query fabric state before proceeding
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
  register: result

  until:
    - 'result.response|length == 0'
  retries: 10
  delay: 5

- name: QUERY - Create Service Node with single/mutiple switch - 2 tasks
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: merged
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: "{{ ansible_int1 }}"
      switches:
      - "{{ ansible_switch1 }}"
    - name: SN-12
      type: firewall
      form_factor: virtual
      svc_int_name: svc2
      attach_interface: "{{ ansible_vpc1 }}"
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].DATA.attachedSwitchInterfaceName == "{{ ansible_int1 }}"'
    - 'result.response[0].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].DATA.formFactor == "Virtual"'
    - 'result.response[0].DATA.interfaceName == "svc1"'
    - 'result.response[0].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[0].DATA.type == "Firewall"'
    - 'result.response[0].DATA.name == "SN-11"'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[1].DATA.attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[1].DATA.attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[1].DATA.fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[1].DATA.formFactor == "Virtual"'
    - 'result.response[1].DATA.interfaceName == "svc2"'
    - 'result.response[1].DATA.linkTemplateName == "service_link_trunk"'
    - 'result.response[1].DATA.type == "Firewall"'
    - 'result.response[1].DATA.name == "SN-12"'

- name: QUERY - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: QUERY - Query the - Create Service Node with single/mutiple switch - 2 tasks
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
    config:
    - name: SN-11
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: Ethernet1/1
      switches:
      - "{{ ansible_switch1 }}"
    - name: SN-12
      type: firewall
      form_factor: virtual
      svc_int_name: svc2
      attach_interface: "{{ ansible_vpc1 }}"
      switches:
      - "{{ ansible_switch4 }}"
      - "{{ ansible_switch5 }}"
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response[0].attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].attachedSwitchInterfaceName == "{{ ansible_int1 }}"'
    - 'result.response[0].fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].formFactor == "Virtual"'
    - 'result.response[0].interfaceName == "svc1"'
    - 'result.response[0].linkTemplateName == "service_link_trunk"'
    - 'result.response[0].type == "Firewall"'
    - 'result.response[0].name == "SN-11"'
    - 'result.response[1].attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[1].attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[1].fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[1].formFactor == "Virtual"'
    - 'result.response[1].interfaceName == "svc2"'
    - 'result.response[1].linkTemplateName == "service_link_trunk"'
    - 'result.response[1].type == "Firewall"'
    - 'result.response[1].name == "SN-12"'

- name: QUERY - sleep for 20 seconds for DCNM to completely update the state
  wait_for:
    timeout: 20

- name: QUERY - Query without the config element - 2 tasks
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query

- assert:
    that:
    - 'result.changed == false'
    - 'result.response[0].attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[0].attachedSwitchInterfaceName == "{{ ansible_int1 }}"'
    - 'result.response[0].fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[0].formFactor == "Virtual"'
    - 'result.response[0].interfaceName == "svc1"'
    - 'result.response[0].linkTemplateName == "service_link_trunk"'
    - 'result.response[0].type == "Firewall"'
    - 'result.response[0].name == "SN-11"'
    - 'result.response[1].attachedFabricName == "{{ ansible_it_fabric }}"'
    - 'result.response[1].attachedSwitchInterfaceName == "{{ ansible_vpc1 }}"'
    - 'result.response[1].fabricName == "{{ ansible_ext_fabric }}"'
    - 'result.response[1].formFactor == "Virtual"'
    - 'result.response[1].interfaceName == "svc2"'
    - 'result.response[1].linkTemplateName == "service_link_trunk"'
    - 'result.response[1].type == "Firewall"'
    - 'result.response[1].name == "SN-12"'

- name: QUERY - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted

- name: QUERY - Query the non available Service Node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: query
    config:
    - name: SN-11111111
      type: firewall
      form_factor: virtual
      svc_int_name: svc1
      attach_interface: "{{ ansible_int1 }}"
      switches:
      - "{{ ansible_switch1 }}"
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'

###############################################
###                 CLEAN-UP                 ##
###############################################

- name: QUERY - Clean up any existing service node
  cisco.dcnm.dcnm_service_node:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_ext_fabric }}"
    state: deleted
