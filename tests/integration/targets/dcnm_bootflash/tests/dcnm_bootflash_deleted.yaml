################################################################################
# RUNTIME
################################################################################

# Recent run times (MM:SS.ms):
# 00:18.960
# 00:19.240
# 00:18.836
################################################################################
# STEPS
################################################################################

# SETUP
# 1. Two switches are required for this test spine1 and spine2
# 2. Files must be created on bootflash manually as NDFC does not
#    provide a quick way to create files on bootflash. To create
#    the files manually, do the following directly on the switches:
#    - On spine1, create a file named foo.txt
#      switch# echo foo > foo.txt
#    - On spine2, create a file named bar.txt
#      switch# echo bar > bar.txt
# TEST
# 3. Run the playbook
# CLEANUP
# 4. No cleanup required
#
################################################################################
# REQUIREMENTS
################################################################################

# 1. Two switches are required for this test
#    - spine1
#    - spine2
# 3. Fabric name and type does not matter.
# Example vars for dcnm_bootflash integration tests
# Add to cisco/dcnm/playbooks/dcnm_tests.yaml)
#
# vars:
#   # This testcase field can run any test in the tests directory for the role
#   testcase: dcnm_bootflash_deleted
#   username: admin
#   password: "foobar"
#   switch_username: admin
#   switch_password: "foobar"
#   spine1: 172.22.150.114
#   spine2: 172.22.150.115
#
################################################################################
# SETUP
################################################################################
# For now, we will assume that the files are already created on the switches.
# The easiest/quickest way to do this is as follows:
# On spine1
# switch# echo foo > foo.txt
# On spine2
# switch# echo bar > bar.txt
#################################################################################
# DELETED - TEST - Delete files
################################################################################
# Expected result
# TODO - Add expected result here
################################################################################
# DELETED - TEST - Delete files
################################################################################
# Expected result
# TODO - Add expected result here
- name: DELETED - TEST - Delete files
  cisco.dcnm.dcnm_bootflash: &delete_files
      state: deleted
      config:
        targets:
          - filepath: bootflash:/foo.txt
            supervisor: active
        switches:
          - ip_address: "{{ spine1 }}"
          - ip_address: "{{ spine2 }}"
            targets:
            - filepath: bootflash:/bar.txt
              supervisor: active
  register: result

- debug:
    var: result

- assert:
    that:
    - result.changed == true
    - result.failed == false
    - (result.diff | length) == 1
    - (result.response | length) == 1
    - result.response[0].MESSAGE == "OK"
    - result.response[0].METHOD == "DELETE"
    - result.response[0].RETURN_CODE == 200
    - (result.metadata | length) == 1
    - result.metadata[0].action == "bootflash_delete"
    - result.metadata[0].check_mode == False
    - result.metadata[0].sequence_number == 1
    - result.metadata[0].state == "deleted"
    - (result.result | length) == 1
    - result.result[0].changed == true
    - result.result[0].sequence_number == 1
    - result.result[0].success == true

- name: DELETED - TEST - Delete files. Idempotence
  cisco.dcnm.dcnm_bootflash: *delete_files
  register: result

- debug:
    var: result

- assert:
    that:
    - result.changed == false
    - result.failed == false
