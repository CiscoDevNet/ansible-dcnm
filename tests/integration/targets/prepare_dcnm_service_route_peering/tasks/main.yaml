##############################################
##               SETUP                      ##
##############################################

- name: Initialize - Delete route peerings
  cisco.dcnm.dcnm_service_route_peering:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_it_service_fabric }}"
    state: deleted
  register: result
  tags: sanity

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'
  loop: '{{ result.response }}'
  tags: sanity

- name: Initialize the setup - Delete Service Nodes
  cisco.dcnm.dcnm_service_node: &conf
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_it_service_fabric }}"
    state: deleted
    config:
    - name: "{{ ansible_snode_1 }}"
      type: firewall
      form_factor: physical
      svc_int_name: svc1
      attach_interface: "{{ ansible_att_intf1 }}"
      switches:
        - "{{ ansible_switch1 }}"
    - name: "{{ ansible_snode_2 }}"
      type: load_balancer
      form_factor: physical
      svc_int_name: svc2
      attach_interface: "{{ ansible_att_intf2 }}"
      switches:
        - "{{ ansible_switch1 }}"
  register: result
  tags: sanity

- assert:
    that:
    - 'item["RETURN_CODE"] == 200'
  loop: '{{ result.response }}'
  tags: sanity

- name: Initialize the setup - Delete VRFs
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ ansible_it_fabric }}"
    state: deleted
    config:
      - vrf_name: "{{ ansible_vrf_11 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_12 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_21 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_22 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_31 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_32 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_41 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_42 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_51 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_52 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_61 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_62 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_71 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
      - vrf_name: "{{ ansible_vrf_72 }}"
        attach:
            - ip_address: "{{ ansible_switch1 }}"
            - ip_address: "{{ ansible_switch2 }}"
  register: result
  tags: sanity

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'
  loop: '{{ result.response }}'
  tags: sanity

- name: Initialize the setup - sleep for 10 seconds for DCNM to completely update the state
  wait_for:
    timeout: 10
  tags: sanity

- tags: sanity
  block:

##############################################
##           MERGE VRFs                     ##
##############################################

    - name: Initialize the setup - Create all VRFs
      cisco.dcnm.dcnm_vrf:
        fabric: "{{ ansible_it_fabric }}"
        state: merged
        config:
          - vrf_name: "{{ ansible_vrf_11 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_12 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_21 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_22 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_31 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_32 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_41 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_42 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_51 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_52 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_61 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_62 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_71 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
          - vrf_name: "{{ ansible_vrf_72 }}"
            attach:
                - ip_address: "{{ ansible_switch1 }}"
                - ip_address: "{{ ansible_switch2 }}"
      register: result

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##           MERGE SERVICE NODES            ##
##############################################

    - name: Initialize the setup - Create all Service Nodes
      cisco.dcnm.dcnm_service_node:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        state: merged
        config:
          - name: "{{ ansible_snode_1 }}"
            type: firewall
            form_factor: physical
            svc_int_name: svc1
            attach_interface: "{{ ansible_att_intf1 }}"
            switches:
              - "{{ ansible_switch1 }}"
          - name: "{{ ansible_snode_2 }}"
            type: load_balancer
            form_factor: physical
            svc_int_name: svc2
            attach_interface: "{{ ansible_att_intf2 }}"
            switches:
              - "{{ ansible_switch1 }}"
      register: result

    - assert:
        that:
        - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

- name: Initialize the setup - sleep for 180 seconds for DCNM to completely update the state
  wait_for:
    timeout: 180
