##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ test_fabric }}"

- name: MERGED - Verify if fabric - Fabric1 is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: MERGED - setup - Clean up any existing protocols
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: deleted

##############################################
##                MERGED                    ##
##############################################

- name: MERGED - Create one protocol
  cisco.dcnm.dcnm_protocols: &conf
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - protocol_name: test
      description: test
      match:
      - type: ip
        protocol_options: "udp"
        source_port_range: 10
      - type: ipv4
        protocol_options: "tcp"
        destination_port_range: 20
        dscp: 10
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[0].DATA.successList[0].name == "test"'

- name: MERGED - conf - Idempotence
  cisco.dcnm.dcnm_protocols: *conf
  register: result

- assert:
    that:
    - 'result.changed == false'

- name: MERGED - setup - Clean up any existing protocols
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: deleted

- name: MERGED - Create multiple protocols
  cisco.dcnm.dcnm_protocols: &conf1
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - protocol_name: test
      description: test
      match:
      - type: ip
        protocol_options: "udp"
        source_port_range: 10
      - type: ipv4
        protocol_options: "tcp"
        destination_port_range: 20
        dscp: 10
    - protocol_name: test1
      description: test1
      match:
      - type: ipv6
        protocol_options: "icmpv6"
        dscp: 10
    - protocol_name: test2
      description: test2
      match_all: True
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[0].DATA.successList[0].name == "test"'
    - 'result.response[0].DATA.successList[1].name == "test1"'
    - 'result.response[0].DATA.successList[2].name == "test2"'

- name: MERGED - conf - Idempotence
  cisco.dcnm.dcnm_protocols: *conf1
  register: result

- assert:
    that:
    - 'result.changed == false'

- name: MERGED - setup - Clean up any existing protocols
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: deleted

- name: MERGED - Create one protocol
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - protocol_name: test
      description: test
      match:
      - type: ip
        protocol_options: "udp"
        source_port_range: 10
      - type: ipv4
        protocol_options: "tcp"
        destination_port_range: 20
        dscp: 10
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[0].DATA.successList[0].name == "test"'

- name: MERGED - Create another protocol with existing one
  cisco.dcnm.dcnm_protocols: &conf2
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - protocol_name: test1
      description: test1
      match:
      - type: ip
        protocol_options: "udp"
        source_port_range: 10
      - type: ipv4
        protocol_options: "tcp"
        destination_port_range: 20
        dscp: 10
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[0].DATA.successList[0].name == "test1"'

- name: MERGED - conf - Idempotence
  cisco.dcnm.dcnm_protocols: *conf2
  register: result

- assert:
    that:
    - 'result.changed == false'

- name: MERGED - setup - Clean up any existing protocols
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: deleted

- name: MERGED - Create one protocol
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - protocol_name: test
      description: test
      match:
      - type: ip
        protocol_options: "udp"
        source_port_range: 10
      - type: ipv4
        protocol_options: "tcp"
        destination_port_range: 20
        dscp: 10
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[0].DATA.successList[0].name == "test"'

- name: MERGED - Add a new match to existing protocol
  cisco.dcnm.dcnm_protocols: &conf3
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - protocol_name: test
      description: test
      match:
      - type: ip
        protocol_options: "icmp"
        dscp: 40
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[0].METHOD == "PUT"'
    - 'result.response[0].DATA.name == "test"'

- name: MERGED - conf - Idempotence
  cisco.dcnm.dcnm_protocols: *conf3
  register: result

- assert:
    that:
    - 'result.changed == false'

- name: MERGED - setup - Clean up any existing protocols
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: deleted

- name: MERGED - Create a protocol without mandatory fields
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - protocol_name: test1
      description: test1
      match:
      - protocol_options: "udp"
        source_port_range: 10
      - type: ipv4
        protocol_options: "tcp"
        destination_port_range: 20
        dscp: 10
  register: result
  ignore_errors: yes

- assert:
    that:
    - 'result.changed == false'
    - '"type : Required parameter not found" in result.msg'

##############################################
##                 CLEAN-UP                 ##
##############################################

- name: MERGED - setup - Clean up any existing protocols
  cisco.dcnm.dcnm_protocols:
    fabric: "{{ test_fabric }}"
    state: deleted