##############################################
##               SETUP                      ##
##############################################

- name: Initialize the setup
  cisco.dcnm.dcnm_template:
    state: deleted       # only choose form [merged, deleted, query]
    config:
      - name: template_101
      - name: template_102
      - name: template_103
      - name: template_104

  register: result

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'
  loop: '{{ result.response }}'

- block:

##############################################
##                MERGE                     ##
##############################################

    - name: Create templates
      cisco.dcnm.dcnm_template: &temp_merge
        state: merged        # only choose form [merged, deleted, query]
        config:
          - name: template_101
            description: "Template_101"
            tags: "internal policy 101"
            content: |
              telemetry
                certificate /bootflash/telegraf.crt telegraf
                destination-profile
                  use-vrf management
                destination-group 1
                  ip address 10.195.225.176 port 57000 protocol gRPC encoding GPB
                sensor-group 1
                  data-source DME
                  path sys/ch depth unbounded
                subscription 1
                  dst-grp 1
                  snsr-grp 1 sample-interval 10000

          - name: template_102
            description: "Template_102"
            tags: "internal policy 102"
            content: |
              telemetry
                certificate /bootflash/telegraf.crt telegraf
                destination-profile
                  use-vrf management
                destination-group 2
                  ip address 10.195.224.176 port 52000 protocol gRPC encoding GPB
                sensor-group 2
                  data-source DME
                  path sys/ch depth unbounded
                subscription 2
                  dst-grp 2
                  snsr-grp 2 sample-interval 20000

          - name: template_103
            description: "Template_103"
            tags: "internal policy 103"
            content: |
              telemetry
                certificate /bootflash/telegraf.crt telegraf
                destination-profile
                  use-vrf management
                destination-group 3
                  ip address 10.195.225.176 port 53000 protocol gRPC encoding GPB
                sensor-group 3
                  data-source DME
                  path sys/ch depth unbounded
                subscription 3
                  dst-grp 3
                  snsr-grp 2 sample-interval 30000

          - name: template_104
            description: "Template_104"
            tags: "internal policy 104"
            content: |
              telemetry
                certificate /bootflash/telegraf.crt telegraf
                destination-profile
                  use-vrf management
                destination-group 4
                  ip address 10.195.224.176 port 54000 protocol gRPC encoding GPB
                sensor-group 4
                  data-source DME
                  path sys/ch depth unbounded
                subscription 4
                  dst-grp 4
                  snsr-grp 4 sample-interval 40000
      register: result
    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 4'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
          - '"Template Created" in item["DATA"]["status"]'
      loop: '{{ result.response }}'

    - name: Create templates again - Idempotence
      cisco.dcnm.dcnm_template: *temp_merge
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'

    # This task will generate an error and return code 500 since the template
    # is in use.  We ignore the error for the task to continue running the
    # playbook but still check the error data returned by the module.
    - name: Modify existing template which is in use
      cisco.dcnm.dcnm_template:
        config:
          - name: template_inuse_1
            description: "Template_installed"
            tags: "internal policy installed"
            content: |
              telemetry
                certificate /bootflash/telegraf.crt telegraf
                destination-profile
                  use-vrf management
                destination-group 1
                  ip address 10.195.225.176 port 57000 protocol gRPC encoding GPB
                sensor-group 1
                  data-source DME
                  path sys/ch depth unbounded
                subscription 1
                  dst-grp 1
                  snsr-grp 1 sample-interval 10000
      register: result
      ignore_errors: yes

#   - assert:
#       that:
#         - 'result.changed == false'
#         - 'result.msg["RETURN_CODE"] == 500'
#         - '"Template is already in use" in result.msg["DATA"]'

    - name: Create templates without mentioning state
      cisco.dcnm.dcnm_template:
        config:
          - name: template_105
            description: "Template_105"
            tags: "internal policy 105"
            content: |
              telemetry
                certificate /bootflash/telegraf.crt telegraf
                destination-profile
                  use-vrf management
                destination-group 105
                  ip address 10.195.225.176 port 57105 protocol gRPC encoding GPB
                sensor-group 105
                  data-source DME
                  path sys/ch depth unbounded
                subscription 105
                  dst-grp 105
                  snsr-grp 105 sample-interval 10105
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 1'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
          - '"Template Created" in item["DATA"]["status"]'
      loop: '{{ result.response }}'

##############################################
##             CLEANUP                      ##
##############################################

  always:

    - name: Delete all templates created
      cisco.dcnm.dcnm_template:
        state: deleted       # only choose form [merged, deleted, query]
        config:
          - name: template_101

          - name: template_102

          - name: template_103

          - name: template_104

          - name: template_105

      register: result

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
          - '"Template deletion successful" in item["DATA"]'
      loop: '{{ result.response }}'

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 5'
          - '(result["diff"][0]["query"] | length) == 0'