---

- name: Import DCNM Inventory Base Tasks
  import_tasks: ../base_tasks.yaml
  tags: sanity

# ----------------------------------------------
# Run Test Cases
# ----------------------------------------------

# ---------------------------------------------- #
#                  Merged                        # 
# ---------------------------------------------- #

# TC - 1
- name: Sanity TC1 - Merged - Prepare Switches in Fabric - GreenField Deployment
  cisco.dcnm.dcnm_inventory: &conf
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_base_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: create_result
  tags: sanity

- name: Sanity TC1 - Merged - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: sanity

- name: Sanity TC1 - Merged - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_base_conf }}"
    changed: "{{ create_result.changed }}"
  register: result
  tags: sanity

# TC - 2
- name: Sanity TC2 - Merged - Idempotence
  cisco.dcnm.dcnm_inventory: *conf
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is already part of the fabric and cannot be created again"'
  tags: sanity  

# ---------------------------------------------- #
#                  Query                         # 
# ---------------------------------------------- #

# TC - 3
- name: Sanity TC3 - Query - Prepare Conf
  ansible.builtin.set_fact:
    ndfc_fabric_sanity_conf:
      - seed_ip: "{{ test_data.sw1 }}"
        role: leaf
  delegate_to: localhost
  tags: sanity

- name: Sanity TC3 - Query - Query a Switch - Hostname and Role must match
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: query
    config: "{{ ndfc_fabric_sanity_conf }}"
  register: query_result
  tags: sanity

- name: Sanity TC3 - Query - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_sanity_conf }}"
    changed: "{{ create_result.changed }}"
  register: result
  tags: sanity

# ---------------------------------------------- #
#                  Overridden                    # 
# ---------------------------------------------- #

# TC - 4
- name: Sanity TC4 - Overridden - Prepare Conf
  ansible.builtin.set_fact:
    switch_conf:
      - seed_ip: "{{ test_data.sw2 }}"
        max_hops: 0
        role: leaf
        preserve_config: false
  delegate_to: localhost
  tags: sanity

- name: Import Configuration Prepare Tasks
  vars:
    file: sanity
  import_tasks: ../conf_prep_tasks.yaml
  tags: sanity

- name: Sanity TC4 - Overridden - Update a New Switch using GreenField Deployment - Delete and Create - default role
  cisco.dcnm.dcnm_inventory: &conf_over
    fabric: "{{ test_data.test_fabric }}"
    state: overridden
    config: "{{ ndfc_fabric_sanity_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: result
  tags: sanity

- name: Sanity TC4 - Overridden - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: sanity

- name: Sanity TC4 - Overridden - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_sanity_conf }}"
    changed: "{{ create_result.changed }}"
  register: result
  tags: sanity

# TC - 5
- name: Sanity TC5 - Overridden - Idempotence
  cisco.dcnm.dcnm_inventory: *conf_over
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is already part of the fabric and there is no more device to delete in the fabric"'
  tags: sanity

# ---------------------------------------------- #
#                  Clean-up                      # 
# ---------------------------------------------- #

# TC - 6
- name: Sanity TC6 - Deleted - Clean up Existing devices
  cisco.dcnm.dcnm_inventory: &clean
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
    config: "{{ ndfc_fabric_sanity_conf }}"
  register: deleted_result
  tags: sanity

- name: Sanity TC6 - Reset - Prepare Conf
  ansible.builtin.set_fact:
    ndfc_fabric_sanity_conf:
  delegate_to: localhost
  tags: sanity

- name: Sanity TC6 - Deleted - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: sanity

- name: Sanity TC6 - Deleted - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_sanity_conf }}"
    changed: "{{ deleted_result.changed }}"
  register: result
  tags: sanity

# TC - 7
- name: Sanity TC7 - Deleted - Idempotence
  cisco.dcnm.dcnm_inventory: *clean
  register: result
  tags: sanity

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is not part of the fabric and cannot be deleted"'

# ---------------------------------------------- #
#                  Reset Fabric                  # 
# ---------------------------------------------- #

# TC - 8
- name: Sanity TC8 - Reset - Prepare Conf
  ansible.builtin.set_fact:
    switch_conf:
    - seed_ip: "{{ test_data.sw1 }}"
      max_hops: 0
      preserve_config: false
    - seed_ip: "{{ test_data.sw2 }}"
      max_hops: 0
      preserve_config: false
  delegate_to: localhost
  tags: sanity

- name: Import Configuration Prepare Tasks
  vars:
    file: sanity
  import_tasks: ../conf_prep_tasks.yaml
  tags: sanity

- name: Sanity TC8 - Reset - Setup Switches in Fabric
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    config: "{{ ndfc_fabric_sanity_conf }}"
  register: result
  tags: sanity
  