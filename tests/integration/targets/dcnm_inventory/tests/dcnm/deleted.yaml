---

- name: Import DCNM Inventory Base Tasks
  import_tasks: ../base_tasks.yml
  tags: deleted

# ----------------------------------------------
# Run Test Cases
# ----------------------------------------------
# TC - 1
- name: Deleted TC1 - Prepare Switches in Fabric - GreenField Deployment
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_base_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  tags: deleted

- name: Deleted TC1 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: deleted

- name: Deleted TC1 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_base_conf }}"
    changed: "{{merged_result.changed}}"
  register: result
  tags: deleted

# TC - 2
- name: Deleted TC2 - Delete a Switch from the Fabric
  cisco.dcnm.dcnm_inventory: &conf_del
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
    config:
    - seed_ip: "{{ test_data.sw1 }}"
  register: delete_result
  tags: deleted

- name: Deleted TC2 - Prepare Test Data
  ansible.builtin.set_fact:
    ndfc_fabric_delete_conf: "{{ ndfc_fabric_base_conf | rejectattr('seed_ip', 'equalto', test_data.sw1) | list }}"
  delegate_to: localhost
  tags: deleted

- name: Deleted TC2 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: deleted

- name: Deleted TC2 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_delete_conf }}"
    changed: "{{ delete_result.changed }}"
  register: result
  tags: deleted

# TC - 3
- name: Deleted TC3 - Removing a previously Deleted Switch - Idempotence
  cisco.dcnm.dcnm_inventory: *conf_del
  register: result
  tags: deleted

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is not part of the fabric and cannot be deleted"'
  tags: deleted

# TC - 4
- name: Deleted TC4 - Delete all Switches from Fabric
  cisco.dcnm.dcnm_inventory: &conf_del_all
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
  register: delete_result
  tags: deleted

- name: Deleted TC4 - Prepare Test Data
  ansible.builtin.set_fact:
    ndfc_fabric_delete_conf: 
  delegate_to: localhost
  tags: deleted

- name: Deleted TC4 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: deleted

- name: Deleted TC4 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_delete_conf }}"
    changed: "{{ delete_result.changed }}"
  register: result
  tags: deleted

# TC - 5
- name: Deleted TC5 - Prepare Config
  ansible.builtin.set_fact:
    switch_conf:
      - seed_ip: "{{ test_data.sw2 }}"
        max_hops: 0
        role: leaf
        preserve_config: true
  delegate_to: localhost
  tags: deleted

- name: Import Configuration Prepare Tasks
  vars:
    file: delete
  import_tasks: ../conf_prep_tasks.yml
  tags: deleted

- name: Deleted TC5 - Merge a Switch using BrownField Deployment
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_delete_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  tags: deleted

- name: Deleted TC5 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: deleted

- name: Deleted TC5 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_delete_conf }}"
    changed: "{{ merged_result.changed }}"
  register: result
  tags: deleted

# TC - 6
- name: Deleted TC6 - Delete a Switch without seed_ip
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
    config:
    - seed_ip:
  register: result
  ignore_errors: yes
  tags: deleted

- assert:
    that:
    - 'result.changed == false'
    - '"Invalid parameters in playbook: seed_ip : Required parameter not found" in result.msg'
  tags: deleted

# TC - 7
- name: Deleted TC7 - Prepare Config
  ansible.builtin.set_fact:
    ndfc_fabric_delete_conf:
  delegate_to: localhost
  tags: deleted

- name: Deleted TC7 - Delete all Switches from Fabric
  cisco.dcnm.dcnm_inventory: *conf_del_all
  register: delete_result
  tags: deleted

- name: Deleted TC7 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: deleted

- name: Deleted TC7 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_delete_conf }}"
    changed: "{{ delete_result.changed }}"
  register: result
  tags: deleted

# TC - 8
- name: Deleted TC8 - Delete all Switches from Fabric - Idempotence
  cisco.dcnm.dcnm_inventory: *conf_del_all
  register: result
  tags: deleted

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is not part of the fabric and cannot be deleted"'
  tags: deleted
