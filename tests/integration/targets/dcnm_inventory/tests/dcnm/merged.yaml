---

- name: Import DCNM Inventory Base Tasks
  import_tasks: ../base_tasks.yml
  tags: merged

# ----------------------------------------------
# Run Test Cases
# ----------------------------------------------
# TC - 1
- name: Merged TC1 - Merge a Switch using GreenField Deployment
  cisco.dcnm.dcnm_inventory: &conf
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_base_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  tags: merged

- name: Merged TC1 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: merged

- name: Merged TC1 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_base_conf }}"
    changed: "{{ merged_result.changed }}"
  register: result
  tags: merged

# TC - 2
- name: Merged TC2 - Idempotence
  cisco.dcnm.dcnm_inventory: *conf
  register: result
  tags: merged

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is already part of the fabric and cannot be created again"'
  tags: merged

# TC - 3
- name: Merged TC3 - Clean up Existing Switches
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    deploy: "{{ test_data.deploy }}"
    state: deleted
  register: delete_result
  tags: merged

- name: Merged TC3 - Prepare Test Data
  ansible.builtin.set_fact:
    ndfc_fabric_delete_conf: 
  delegate_to: localhost
  tags: merged

- name: Merged TC3 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: merged

- name: Merged TC3 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_delete_conf }}"
    changed: "{{ delete_result.changed }}"
  register: result
  tags: merged

# TC - 4
- name: Merged TC4 - Prepare Config
  ansible.builtin.set_fact:
    switch_conf:
      - seed_ip: "{{ test_data.sw1 }}"
        max_hops: 0
        role: leaf
        auth_proto: MD5
        preserve_config: true
  delegate_to: localhost
  tags: merged

- name: Import Configuration Prepare Tasks
  vars:
    file: merge
  import_tasks: ../conf_prep_tasks.yml
  tags: merged

- name: Merged TC4 - Merge a Switch using BrownField Deployment
  cisco.dcnm.dcnm_inventory: &conf_bf
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_merge_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  tags: merged

- name: Merged TC4 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: merged

- name: Merged TC4 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_merge_conf }}"
    changed: "{{ merged_result.changed }}"
  register: result
  tags: merged

# TC - 5
- name: Merged TC5 - Verify Idempotence
  cisco.dcnm.dcnm_inventory: *conf_bf
  register: result
  tags: merged

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is already part of the fabric and cannot be created again"'
  tags: merged

# TC - 6
- name: Merged TC6 - Clean up Existing Switches
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
    deploy : "{{ test_data.deploy }}"
  register: deleted_result
  tags: merged

- name: Merged TC6 - Prepare Config
  ansible.builtin.set_fact:
    switch_conf:
      - seed_ip: "{{ test_data.sw1 }}"
        max_hops: 0
  delegate_to: localhost
  tags: merged

- name: Import Configuration Prepare Tasks
  vars:
    file: merge
  import_tasks: ../conf_prep_tasks.yml
  tags: merged

- name: Merged TC6 - Merge a Switch using GreenField Deployment - Using default role/auth_proto
  cisco.dcnm.dcnm_inventory: &conf_def
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_merge_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  tags: merged

- name: Merged TC6 - Prepare Config
  ansible.builtin.set_fact:
    ndfc_fabric_mergev_conf:
      - seed_ip: "{{ test_data.sw1 }}"
        role: leaf # default role in NDFC
  delegate_to: localhost
  tags: merged

- name: Merged TC6 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: merged

- name: Merged TC6 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_mergev_conf }}"
    changed: "{{ merged_result.changed }}"
  register: result
  tags: merged

# TC - 7
- name: Merged TC7 - Verify Idempotence
  cisco.dcnm.dcnm_inventory: *conf_def
  register: result
  tags: merged

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is already part of the fabric and cannot be created again"'
  tags: merged

# TC - 8
- name: Merged TC8 - Clean up Existing Switches
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
    deploy: "{{ test_data.deploy }}"
  register: deleted_result
  tags: merged

- name: Merged TC8 - Prepare Config
  ansible.builtin.set_fact:
    switch_conf:
      - seed_ip: "{{ test_data.sw1 }}"
        max_hops: 0
        role: border_gateway
        auth_proto: MD5
      - seed_ip: "{{ test_data.sw2 }}"
        max_hops: 0
        role: border_gateway
        auth_proto: MD5
  delegate_to: localhost
  tags: merged

- name: Import Configuration Prepare Tasks
  vars:
    file: merge
  import_tasks: ../conf_prep_tasks.yml
  tags: merged

- name: Merged TC8 - Add Switch with Border Gateways and MD5 to Fabric
  cisco.dcnm.dcnm_inventory: &conf_role
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_merge_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  tags: merged

- name: Merged TC8 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: merged

- name: Merged TC8 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_merge_conf }}"
    changed: "{{ merged_result.changed }}"
  register: result
  tags: merged

# TC - 9
- name: Merged TC9 - Verify Idempotence
  cisco.dcnm.dcnm_inventory: *conf_role
  register: result
  tags: merged

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is already part of the fabric and cannot be created again"'
  tags: merged

# TC - 10
- name: Merged TC10 - Clean up Existing Switches
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
    deploy: "{{ test_data.deploy }}"
  register: deleted_result
  tags: merged

- name: Merged TC10 - Prepare Config
  ansible.builtin.set_fact:
    switch_conf:
      - seed_ip: "{{ test_data.sw1 }}"
        max_hops: 2
        role: leaf
        auth_proto: MD5
  delegate_to: localhost
  tags: merged

- name: Import Configuration Prepare Tasks
  vars:
    file: merge
  import_tasks: ../conf_prep_tasks.yml
  tags: merged

- name: Merged TC10 - Merge a Switch using GreenField Deployment - Non-Zero Max Hop Config
  cisco.dcnm.dcnm_inventory: &conf_mh
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_merge_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  tags: merged

- name: Merged TC10 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: merged

- name: Merged TC10 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_merge_conf }}"
    changed: "{{ merged_result.changed }}"
  register: result
  tags: merged

# TC - 11
- name: Merged TC11 - Merge a Switch using GreenField Deployment - Idempotence
  cisco.dcnm.dcnm_inventory: *conf_mh
  register: merged_result
  tags: merged

- assert:
    that:
    - 'merged_result.changed == false'
    - 'merged_result.response == "The switch provided is already part of the fabric and cannot be created again"'
  tags: merged

# TC - 12
- name: Merged TC12 - Clean up Existing Switches
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
    deploy: "{{ test_data.deploy }}"
  register: deleted_result
  tags: merged

# TC - 13
- name: Merged TC13 - Prepare Config
  ansible.builtin.set_fact:
    switch_conf:
    - seed_ip:
      max_hops: 0
      role: leaf
      auth_proto: MD5
  delegate_to: localhost
  tags: merged

- name: Import Configuration Prepare Tasks
  vars:
    file: merge
  import_tasks: ../conf_prep_tasks.yml
  tags: merged

- name: Merged TC13 - Merge a Switch without seed_ip
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_merge_conf }}"
    deploy: "{{ test_data.deploy }}"
  ignore_errors: yes
  register: merged_result
  tags: merged

- assert:
    that:
    - 'merged_result.changed == false'
    - '"Invalid parameters in playbook: seed_ip : Required parameter not found" in merged_result.msg'
  tags: merged

# TC - 14
- name: Merged TC14 - Prepare Config
  ansible.builtin.set_fact:
    switch_conf:
    - seed_ip: "{{ test_data.sw1 }}"
      auth_proto: MD5
      max_hops: 0
      role: invalid
  delegate_to: localhost
  tags: merged

- name: Import Configuration Prepare Tasks
  vars:
    file: merge
  import_tasks: ../conf_prep_tasks.yml
  tags: merged

- name: Merged TC14 - Merge a Switch with Invalid Role
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_merge_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  ignore_errors: yes
  tags: merged

- assert:
    that:
    - 'merged_result.changed == false'
    - '"Invalid choice " in merged_result.msg'
  tags: merged

# TC - 15
- name: Merged TC15 - Prepare Config
  ansible.builtin.set_fact:
    switch_conf:
    - seed_ip: "{{ test_data.sw1 }}"
      auth_proto: MD55DM
      max_hops: 0
      role: leaf
  delegate_to: localhost
  tags: merged

- name: Import Configuration Prepare Tasks
  vars:
    file: merge
  import_tasks: ../conf_prep_tasks.yml
  tags: merged

- name: Merged TC15 - Merge a Switch with invalid auth choice
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: merged
    config: "{{ ndfc_fabric_merge_conf }}"
    deploy: "{{ test_data.deploy }}"
  register: merged_result
  ignore_errors: yes
  tags: merged

- assert:
    that:
    - 'merged_result.changed == false'
    - '"Invalid choice " in merged_result.msg'
  tags: merged

# TC - 16
- name: Merged TC16 - Merge a Switch without a config
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: merged
  register: merged_result
  ignore_errors: yes
  tags: merged

- assert:
    that:
    - 'merged_result.changed == false'
    - '"config: element is mandatory for this state merged" in merged_result.msg'
  tags: merged

# ----------------------------------------------
# Cleanup Fabric Switches
# ----------------------------------------------

- name: Merged - Clean Up Switches from Fabric
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
    deploy: "{{ test_data.deploy }}"
  register: result
  tags: merged

