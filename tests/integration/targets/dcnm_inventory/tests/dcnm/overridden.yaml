##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/rest/control/fabrics/{{ ansible_it_fabric }}"
  when: controller_version == "11"

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ ansible_it_fabric }}"
  when: controller_version >= "12"

- name: OVERRIDDEN - Verify if fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: OVERRIDDEN - setup - Clean up any existing devices
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ ansible_it_fabric }}"
    state: deleted

- name: OVERRIDDEN - Merge a Switch using GreenField Deployment
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ ansible_it_fabric }}"
    state: merged
    config:
    - seed_ip:  "{{ ansible_switch1 }}"
      auth_proto: MD5 # choose from [MD5, SHA, MD5_DES, MD5_AES, SHA_DES, SHA_AES]
      user_name: "{{ switch_username }}"
      password: "{{ switch_password }}"
      max_hops: 0
      role: leaf # default is Leaf - choose from [Leaf, Spine, Border, Border Spine, Border Gateway, Border Gateway Spine
                       # Super Spine, Border Super Spine, Border Gateway Super Spine]
      preserve_config: False # boolean, default is  true
  register: result

- assert:
    that:
    - 'result.changed == true'

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'
  loop: '{{ result.response }}'

##############################################
##                OVERRIDDEN                ##
##############################################

- name: OVERRIDDEN - Update a New Switch using GreenField Deployment - Delete and Create - default role
  cisco.dcnm.dcnm_inventory: &conf_over
    fabric: "{{ ansible_it_fabric }}"
    state: overridden
    config:
    - seed_ip: "{{ ansible_switch2 }}"
      auth_proto: MD5 # choose from [MD5, SHA, MD5_DES, MD5_AES, SHA_DES, SHA_AES]
      user_name: "{{ switch_username }}"
      password: "{{ switch_password }}"
      max_hops: 0
      preserve_config: False # boolean, default is  true
  register: result

- assert:
    that:
    - 'result.changed == true'

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'
  loop: '{{ result.response }}'

- name: OVERRIDDEN - conf1 - OV - Idempotence
  cisco.dcnm.dcnm_inventory: *conf_over
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response == "The switch provided is already part of the fabric and there is no more device to delete in the fabric"'

##############################################
##                 CLEAN-UP                 ##
##############################################

- name: OVERRIDDEN - setup - Clean up any existing devices
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ ansible_it_fabric }}"
    state: deleted