---
- name: Test Entry Point - [dcnm_inventory - RMA]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+     Executing RMA Tests - [dcnm_inventory]                  +"
      - "----------------------------------------------------------------"
  tags: rma

- name: RMA - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    test_data:
      test_fabric: "{{ ansible_it_fabric }}"
      sw1: "{{ ansible_switch1 }}"
      sw1_serial: "1ABC23DEFGH"
      sw1_rma_serial: "1ABC23DERMA"
      rma_model: "SW1-K1234v"
      rma_version: "12.3(4)"
      rma_hostname: "RMA-SW"
      rma_modulesModel: "['SW1-K1234v']"
      rma_gateway: "192.168.2.1/24"
      deploy: "{{ deploy }}"
      rma_enabled: False
      rma_switch_present: False
      found_fabric: False
  delegate_to: localhost
  tags: rma

# - name: RMA - Setup Rest Variables
#   ansible.builtin.set_fact:
# - set_fact:
#     mode_maintenance: "/rest/control/fabrics/{{ test_data.test_fabric }}/switches/{{ ansible_switch1_serial }}/maintenance-mode"
#     mode_deploy: "/rest/control/fabrics/{{ test_data.test_fabric }}/switches/{{ ansible_switch1_serial }}/deploy-maintenance-mode"  
#   when: controller_version == "11"
#   tags: rma

- name: RMA - Setup Rest Variables
  ansible.builtin.set_fact:
    mode_maintenance: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ test_data.test_fabric }}/switches/{{ test_data.sw1_serial }}/maintenance-mode"
    mode_deploy: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ test_data.test_fabric }}/switches/{{ test_data.sw1_serial }}/deploy-maintenance-mode" 
  tags: rma 
#  when: controller_version >= "12"

# ----------------------------------------------
# Run Test Cases
# ----------------------------------------------
# Base Tests
- name: RMA Base Task - Query Fabric Existence
  cisco.dcnm.dcnm_fabric:
    state: query
    config:
      - FABRIC_NAME: "{{ test_data.test_fabric }}"
  register: query_result
  tags: rma

- name: RMA Base Task - Check Fabric
  ansible.builtin.set_fact:
    found_fabric: True
    fabric_data: "{{ item }}"
  when: item['fabricName'] ==  "{{ test_data.test_fabric }}"
  loop: "{{ query_result.response[0].DATA }}"
  tags: rma

- name: RMA Base Task - Assert Fabric Existence
  assert:
    that:
      - found_fabric == true
    fail_msg: "Fabric '{{ test_data.test_fabric }}' not found."
  tags: rma

- name: RMA Base Task - Set Variable
  ansible.builtin.set_fact:
    rma_enabled: True
  when: fabric_data.nvPairs["BOOTSTRAP_ENABLE"] == "true"
  tags: rma

# TC1
- name: RMA TC1 - Prepare Validate Config
  ansible.builtin.set_fact:
    ndfc_fabric_delete_conf:
  delegate_to: localhost
  tags: rma

- name: RMA TC1 - Clean Up Existing Switches
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
  register: deleted_result
  tags: rma

- name: RMA TC1 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  register: query_result
  tags: rma

- name: RMA TC1 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_delete_conf }}"
  register: result
  tags: rma

# Tasks to add a switch to fabric and to configure and deploy
# the switch in maintenance mode.
# Please note that the switch should be shutdown after configuring it
# in maintenance mode

# TC2
- name: RMA TC2 - Prepare Configuration
  ansible.builtin.set_fact:
    switch_conf:
      - seed_ip: "{{ test_data.sw1 }}"
        auth_proto: MD5
        max_hops: 0
  when: rma_enabled == True
  delegate_to: localhost
  tags: rma

- name: Import Configuration Prepare Tasks
  vars:
    file: rma
  import_tasks: ../conf_prep_tasks.yml
  when: rma_enabled == True
  tags: rma

- name: RMA TC2 - Add Switch to the Fabric
  cisco.dcnm.dcnm_inventory:
   fabric: "{{ test_data.test_fabric }}"
   state: merged
   config: "{{ ndfc_fabric_rma_conf }}"
   deploy: "{{ test_data.deploy }}"
  when: rma_enabled == True
  register: merged_result
  tags: rma

- name: RMA TC2 - Query Inventory State in Fabric 
  cisco.dcnm.dcnm_inventory:
    state: query
    fabric: "{{ test_data.test_fabric }}"
  when: rma_enabled == True
  register: query_result
  tags: rma

- name: RMA TC2 - Validate NDFC Data
  cisco.dcnm.tests.integration.ndfc_inventory_validate:
    ndfc_data: "{{ query_result }}"
    test_data: "{{ ndfc_fabric_rma_conf }}"
    mode: "ip"
  register: result
  when: rma_enabled == True
  tags: rma

- name: RMA TC2 - Query for POAP enabled swicthes
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    query_poap: True
    state: query
  when: rma_enabled == True
  register: query_result
  tags: rma

- assert:
    that:
    - 'query_result.response != None'
  when: rma_enabled == True
  tags: rma

- name: RMA TC2 - Check Query for POAP enabled swicthes
  set_fact:
    rma_switch_present: True
  when: (rma_enabled == True and (item['serialNumber'] == "{{ test_data.sw1_serial }}"))
  loop: "{{ query_result.response }}"
  ignore_errors: yes
  tags: rma

- name: RMA TC2 - Configure Maintenance Mode in Switch
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "{{ mode_maintenance }}"
  when: (rma_enabled == True and rma_switch_present == True)
  register: result
  tags: rma

- name: RMA TC2 - Configure Deploy Mode in Switch
  cisco.dcnm.dcnm_rest:
    method: POST
    path: "{{ mode_deploy }}"
  when: (rma_enabled == True and rma_switch_present == True)
  register: result
  tags: rma

- name: RMA TC2 - sleep for 1 minute
  wait_for:
    timeout: 60
  tags: rma

# TC3
- block:
    - name: RMA TC3 - RMA the Existing Switch
      cisco.dcnm.dcnm_inventory:
        fabric: '{{ test_data.test_fabric }}'
        state: merged
        config:
          - seed_ip: '{{ test_data.sw1 }}'
            user_name: '{{ switch_username }}'
            password: '{{ switch_password }}'
            rma:
              - serial_number: '{{ test_data.sw1_rma_serial }}'
                old_serial: '{{ test_data.sw1_serial }}'
                model: '{{ test_data.rma_model }}'
                version: '{{ test_data.rma_model }}'
                hostname: '{{ test_data.rma_hostname }}'
                config_data:
                  modulesModel: '{{ test_data.rma_modulesModel }}'
                  gateway: '{{ test_data.rma_gateway }}'
      register: result

    - assert:
        that:
        - 'result.changed == true'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'
  when: (rma_enabled == True and rma_switch_present == True)
  tags: rma

# ----------------------------------------------
# Cleanup Fabric Switches
# ----------------------------------------------

- name: RMA - Clean Up - Remove Existing Switches
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ test_data.test_fabric }}"
    state: deleted
  register: result
  tags: rma