##############################################
##            REQUIRED VARS                 ##
##############################################
# fabric_1
#
# - A VXLAN_EVPN fabric
#
##############################################

##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/rest/control/fabrics/{{ fabric_1 }}"
  when: controller_version == "11"

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ fabric_1 }}"
  when: controller_version >= "12"

- name: SETUP.0 - SCALE - [with_items] print vars
  ansible.builtin.debug:
    var: item
  with_items:
     - "fabric_1 : {{ fabric_1 }}"

- name: SETUP.1 - SCALE - Verify if fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: setup_result_1

- assert:
    that:
    - 'setup_result_1.response.DATA != None'

- name: SETUP.2 - SCALE - [deleted] Delete all VRFs
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ fabric_1 }}"
    state: deleted
  register: setup_result_2
  tags: sanity

- name: SETUP.3 - SCALE - [wait_for] Wait 60 seconds for controller and switch to sync
  wait_for:
    timeout: 60
  when: setup_result_2.changed == false
  tags: sanity

- name: SETUP.4 - SCALE - [set_fact] Dummy set fact for leaf_attach_list
  set_fact:
    leaf_vrf_attach: []

- name: SETUP.5 - SCALE - [set_fact] Build list of VRFs to be deployed
  set_fact:
    vrfs_list: "{{ vrfs_list|default([]) + [{ 'vrf_name': 'TEST_VRF%03d' | format(item), 'deploy': 'no', 'vrf_id': (item | int + 50000) | int, 'vlan_id': (item | int + 2000) | int, 'attach': leaf_vrf_attach }] }}"
  loop: '{{ range(0, 800) | list }}'

- name: TEST.1 - SCALE - [merged] Push all VRFs to the controller
  cisco.dcnm.dcnm_vrf:
    fabric: '{{ fabric_1 }}'
    state: merged
    config: '{{ vrfs_list }}'
  register: result

- name: TEST.1a - SCALE - [wait_for] Wait 60 seconds
  wait_for:
    timeout: 60
  tags: sanity

- name: TEST.2 - SCALE - [deleted] Delete all VRFs
  cisco.dcnm.dcnm_vrf: &conf2
    fabric: "{{ fabric_1 }}"
    state: deleted
  register: result_2

- name: TEST.2a - SCALE - [debug] print result_2
  ansible.builtin.debug:
    var: result_2

- assert:
    that:
    - 'result_2.changed == true'

- name: TEST.2b - SCALE - [deleted] conf2 - Idempotence
  cisco.dcnm.dcnm_vrf: *conf2
  register: result_2b

- name: TEST.2c - SCALE - [debug] print result_2b
  ansible.builtin.debug:
    var: result_2b

- assert:
    that:
    - 'result_2b.changed == false'
    - 'result_2b.response|length == 0'
    - 'result_2b.diff|length == 0'

################################################
####                 CLEAN-UP                 ##
################################################
# No CLEANUP required
