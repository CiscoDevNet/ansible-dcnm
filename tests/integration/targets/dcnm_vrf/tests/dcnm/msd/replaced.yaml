##############################################
##            REQUIRED VARS                 ##
##############################################
# parent_fabric
# A Parent MSD VXLAN_EVPN fabric
#
# child_fabric
# A Child MSD VXLAN_EVPN fabric associated with parent_fabric
#
# child_switch_1
# - A switch in the child MSD fabric
# - VRF-lite capable switch
#
# child_switch_2  
# - A switch in the child MSD fabric
# - VRF-lite capable switch
#
# interface_2a
# - Ethernet interface on child_switch_2
# - Used to test VRF LITE configuration in MSD environment
##############################################

##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/rest/control/fabrics/{{ parent_fabric }}"
  when: controller_version == "11"

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ parent_fabric }}"
  when: controller_version >= "12"

- name: SETUP.0 - MSD REPLACED - [with_items] print vars
  ansible.builtin.debug:
    var: item
  with_items:
     - "parent_fabric : {{ parent_fabric }}"
     - "child_fabric : {{ child_fabric }}"
     - "child_switch_1 : {{ child_switch_1 }}"
     - "child_switch_2 : {{ child_switch_2 }}"
     - "interface_2a : {{ interface_2a }}"

- name: SETUP.1 - MSD REPLACED - [dcnm_rest.GET] Verify parent fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: result

- assert:
    that:
    - result.response.DATA != None

- name: SETUP.2 - MSD REPLACED - [deleted] Delete all VRFs from Parent MSD fabric
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: deleted
  register: result_setup_2

- name: SETUP.2a - MSD REPLACED - [wait_for] Wait 60 seconds for controller and switch to sync
  wait_for:
    timeout: 60
  when: result_setup_2.changed == true

- name: SETUP.3 - MSD REPLACED - [merged] Create initial VRFs for replacement testing
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config:
    - vrf_name: ansible-msd-replace-1
      vrf_id: 9008021
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2021
      vrf_description: "Initial VRF for replacement test"
      vrf_int_mtu: 9000
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_1 }}"
      deploy: true
    - vrf_name: ansible-msd-replace-2
      vrf_id: 9008022
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2022
      vrf_description: "Second VRF for replacement test"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: false
        adv_host_routes: true
        static_default_route: false
        l3vni_wo_vlan: true
      attach:
      - ip_address: "{{ child_switch_1 }}"
      - ip_address: "{{ child_switch_2 }}"
      deploy: true
  register: result_setup_3

- name: SETUP.3a - MSD REPLACED - [debug] print setup result
  ansible.builtin.debug:
    var: result_setup_3

###############################################
###           MSD REPLACED TESTS            ##
###############################################

- name: TEST.1 - MSD REPLACED - [replaced] Replace VRF properties and Child config
  cisco.dcnm.dcnm_vrf: &conf1
    fabric: "{{ parent_fabric }}"
    state: replaced
    config:
    - vrf_name: ansible-msd-replace-1
      vrf_id: 9008021
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2021
      vrf_description: "Updated VRF description after replacement"
      vrf_int_mtu: 9216  # Changed from 9000
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: false  # Changed from true
        adv_host_routes: true     # Changed from false
        static_default_route: false # Changed from true
        l3vni_wo_vlan: true       # New parameter
        netflow_enable: false     # New parameter
      attach:
      - ip_address: "{{ child_switch_1 }}"
      - ip_address: "{{ child_switch_2 }}"  # Added new attachment
      deploy: true
  register: result_1

- name: TEST.1a - MSD REPLACED - [debug] print result_1
  ansible.builtin.debug:
    var: result_1

- assert:
    that:
    - result_1.changed == true
    - result_1.workflow == "Multisite Parent with Child Fabric Processing"
    - result_1.parent_fabric.fabric == parent_fabric
    - result_1.parent_fabric.changed == true
    - result_1.child_fabrics|length == 1
    - result_1.child_fabrics[0].fabric == child_fabric
    - result_1.child_fabrics[0].failed == false
    # Verify the replacement occurred
    - result_1.parent_fabric.diff[0].vrf_name == "ansible-msd-replace-1"
    - result_1.parent_fabric.diff[0].vrf_int_mtu == 9216

- name: TEST.1b - MSD REPLACED - [replaced] conf1 - Idempotence
  cisco.dcnm.dcnm_vrf: *conf1
  register: result_1b

- assert:
    that:
    - result_1b.changed == false

- name: MSD REPLACED - [wait_for] Wait 15 seconds for vrf ready
  wait_for:
    timeout: 15

- name: TEST.2 - MSD REPLACED - [replaced] Replace VRF by removing Child config
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: replaced
    config:
    - vrf_name: ansible-msd-replace-2
      vrf_id: 9008022
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2022
      vrf_description: "VRF with removed Child config"
      # child_fabric_config removed - should reset to defaults
      attach:
      - ip_address: "{{ child_switch_1 }}"
      # Removed child_switch_2 attachment
      deploy: true
  register: result_2

- name: TEST.2a - MSD REPLACED - [debug] print result_2
  ansible.builtin.debug:
    var: result_2

- assert:
    that:
    - result_2.changed == true
    - result_2.workflow == "Multisite Parent without Child Fabric Processing"
    # Verify child config was removed (no child_fabrics section)
    - "'child_fabrics' not in result_2 or result_2.child_fabrics|length == 0"

- name: MSD REPLACED - [wait_for] Wait 15 seconds for vrf ready
  wait_for:
    timeout: 15

- name: TEST.3 - MSD REPLACED - [replaced] Replace VRF with new Child fabric config
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: replaced
    config:
    - vrf_name: ansible-msd-replace-2
      vrf_id: 9008022
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2022
      vrf_description: "VRF with new Child config"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_1 }}"
      - ip_address: "{{ child_switch_2 }}"
      deploy: true
  register: result_3

- name: TEST.3a - MSD REPLACED - [debug] print result_3
  ansible.builtin.debug:
    var: result_3

- assert:
    that:
    - result_3.changed == true
    - result_3.workflow == "Multisite Parent with Child Fabric Processing"
    - result_3.child_fabrics|length == 1
    - result_3.child_fabrics[0].fabric == child_fabric
    - result_3.child_fabrics[0].failed == false

- name: MSD REPLACED - [wait_for] Wait 15 seconds for vrf ready
  wait_for:
    timeout: 15

- name: TEST.4 - MSD REPLACED - [replaced] Replace VRF with VRF-Lite configuration
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: replaced
    config:
    - vrf_name: ansible-msd-replace-1
      vrf_id: 9008021
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2021
      vrf_description: "VRF with VRF-Lite after replacement"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_1 }}"
      - ip_address: "{{ child_switch_2 }}"
        vrf_lite:
        - interface: "{{ interface_2a }}"
          ipv4_addr: 10.10.1.2/30
          neighbor_ipv4: 10.10.1.1
          peer_vrf: external_replace_vrf
          dot1q: 200
      deploy: true
  register: result_4

- name: TEST.4a - MSD REPLACED - [debug] print result_4
  ansible.builtin.debug:
    var: result_4

- assert:
    that:
    - result_4.changed == true
    - result_4.workflow == "Multisite Parent with Child Fabric Processing"
    - result_4.parent_fabric.changed == true
    - result_4.child_fabrics|length == 1

- name: MSD REPLACED - [wait_for] Wait 15 seconds for vrf ready
  wait_for:
    timeout: 15

- name: TEST.5 - MSD REPLACED - [replaced] Replace multiple VRFs simultaneously
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: replaced
    config:
    - vrf_name: ansible-msd-replace-1
      vrf_id: 9008021
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2021
      vrf_description: "Multi-replace VRF 1"
      vrf_int_mtu: 9000
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: false
        adv_host_routes: true
        static_default_route: false
      attach:
      - ip_address: "{{ child_switch_1 }}"
      deploy: true
    - vrf_name: ansible-msd-replace-2
      vrf_id: 9008022
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2022
      vrf_description: "Multi-replace VRF 2"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: false
        adv_host_routes: true
        static_default_route: false
        l3vni_wo_vlan: false
      attach:
      - ip_address: "{{ child_switch_2 }}"
      deploy: true
  register: result_5

- name: TEST.5a - MSD REPLACED - [debug] print result_5
  ansible.builtin.debug:
    var: result_5

- assert:
    that:
    - result_5.changed == true
    - result_5.workflow == "Multisite Parent with Child Fabric Processing"
    - result_5.child_fabrics[0].fabric == child_fabric
    - result_5.child_fabrics[0].failed == false

###############################################
###              CLEANUP                    ##
###############################################

- name: CLEANUP.1 - MSD REPLACED - [deleted] Delete all VRFs from Parent MSD fabric
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: deleted
  register: result_cleanup_1

- name: CLEANUP.1a - MSD REPLACED - [debug] print cleanup result
  ansible.builtin.debug:
    var: result_cleanup_1

- assert:
    that:
    - result_cleanup_1.changed in [true, false]

- name: CLEANUP.2 - MSD REPLACED - [wait_for] Wait 60 seconds for cleanup to complete
  wait_for:
    timeout: 60
  when: result_cleanup_1.changed == true