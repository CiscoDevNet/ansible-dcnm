##############################################
##            REQUIRED VARS                 ##
##############################################
# parent_fabric
# A Parent MSD VXLAN_EVPN fabric
#
# child_fabric
# A Child MSD VXLAN_EVPN fabric associated with parent_fabric
#
# child_switch_1
# - A switch in the child MSD fabric
# - VRF-lite capable switch
#
# child_switch_2  
# - A switch in the child MSD fabric
# - VRF-lite capable switch
#
# interface_2a
# - Ethernet interface on child_switch_2
# - Used to test VRF LITE configuration in MSD environment
##############################################

##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/rest/control/fabrics/{{ parent_fabric }}"
  when: controller_version == "11"

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ parent_fabric }}"
  when: controller_version >= "12"

- name: SETUP.0 - MSD MERGED - [with_items] print vars
  ansible.builtin.debug:
    var: item
  with_items:
     - "parent_fabric : {{ parent_fabric }}"
     - "child_fabric : {{ child_fabric }}"
     - "child_switch_1 : {{ child_switch_1 }}"
     - "child_switch_2 : {{ child_switch_2 }}"
     - "interface_2a : {{ interface_2a }}"

- name: SETUP.1 - MSD MERGED - [dcnm_rest.GET] Verify parent fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: result

- assert:
    that:
    - result.response.DATA != None

- name: SETUP.2 - MSD MERGED - [deleted] Clean slate - delete all VRFs
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: deleted
  register: result_setup_2

- name: SETUP.2a - MSD MERGED - [wait_for] Wait 60 seconds for controller and switch to sync
  wait_for:
    timeout: 60
  when: result_setup_2.changed == true

# ###############################################
# ###            MSD MERGED TESTS             ##
# ###############################################

- name: TEST.1 - MSD MERGED - [merged] Basic VRF creation without Child config
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config: &conf1
    - vrf_name: ansible-msd-merged-basic
      vrf_id: 9008401
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2401
      vrf_description: "Basic MSD merged test VRF"
      attach:
      - ip_address: "{{ child_switch_1 }}"
      deploy: true
  register: result_1

- name: TEST.1a - MSD MERGED - [debug] print result_1
  ansible.builtin.debug:
    var: result_1

- assert:
    that:
    - result_1.changed == true
    - result_1.workflow == "Multisite Parent without Child Fabric Processing"
    - result_1.diff[0].vrf_name == "ansible-msd-merged-basic"
    - result_1.diff[0].vrf_id == 9008401
    - result_1.diff[0].vlan_id == 2401
    - result_1.diff[0].attach | length >= 1
    - result_1.diff[0].attach[0].ip_address == "{{ child_switch_1 }}"
    - result_1.diff[0].attach[0].deploy == true
    - result_1.response[0].RETURN_CODE == 200

- name: TEST.1b - MSD MERGED - [query] Verify VRF creation
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
    config: *conf1
  register: result_1b
  until:
    - "result_1b.response[0].parent.vrfStatus is search('DEPLOYED')"
  retries: 20
  delay: 3  

- name: TEST.1c - MSD MERGED - [debug] print result_1b
  ansible.builtin.debug:
    var: result_1b

- assert:
    that:
    - result_1b.response | length == 1
    - result_1b.response[0].parent.vrfName == "ansible-msd-merged-basic"
    - result_1b.response[0].parent.vrfId == 9008401
    - (result_1b.response[0].parent.vrfTemplateConfig | from_json).vrfVlanId == "2401"

- name: TEST.1d - MSD MERGED - [merged] Basic VRF creation - Idempotence
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config: *conf1
  register: result_1d

- name: TEST.1e - MSD MERGED - [debug] print result_1d
  ansible.builtin.debug:
    var: result_1d

- assert:
    that:
    - result_1d.changed == false
    - result_1d.workflow == "Multisite Parent without Child Fabric Processing"
    - result_1d.diff | length == 0
    - result_1d.response | length == 0

- name: TEST.2 - MSD MERGED - [merged] VRF creation with Child fabric config
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config: &conf2
    - vrf_name: ansible-msd-merged-child
      vrf_id: 9008402
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2402
      vrf_description: "MSD merged test VRF with Child config"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_1 }}"
      deploy: true
  register: result_2

- name: TEST.2a - MSD MERGED - [debug] print result_2
  ansible.builtin.debug:
    var: result_2

- assert:
    that:
    - result_2.changed == true
    - result_2.workflow == "Multisite Parent with Child Fabric Processing"
    - result_2.parent_fabric.changed == true
    - result_2.parent_fabric.diff[0].vrf_name == "ansible-msd-merged-child"
    - result_2.parent_fabric.diff[0].vrf_id == 9008402
    - result_2.parent_fabric.diff[0].vlan_id == 2402
    - result_2.parent_fabric.diff[0].attach | length >= 1
    - result_2.parent_fabric.diff[0].attach[0].ip_address == "{{ child_switch_1 }}"
    - result_2.parent_fabric.diff[0].attach[0].deploy == true
    - result_2.child_fabrics | length == 1
    - result_2.child_fabrics[0].fabric == "{{ child_fabric }}"
    - result_2.child_fabrics[0].diff[0].vrf_name == "ansible-msd-merged-child"
    - result_2.parent_fabric.response[0].RETURN_CODE == 200

- name: TEST.2b - MSD MERGED - [query] Verify VRF with child config creation
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
    config: *conf2
  register: result_2b
  until:
    - "result_2b.parent_fabric.response[0].parent.vrfStatus is search('DEPLOYED')"
    - "result_2b.child_fabrics[0].response[0].parent.vrfStatus is search('DEPLOYED')"
  retries: 20
  delay: 3

- name: TEST.2c - MSD MERGED - [debug] print result_2b
  ansible.builtin.debug:
    var: result_2b

- assert:
    that:
    - result_2b.parent_fabric.response | length == 1
    - result_2b.parent_fabric.response[0].parent.vrfName == "ansible-msd-merged-child"
    - result_2b.parent_fabric.response[0].parent.vrfId == 9008402
    - (result_2b.parent_fabric.response[0].parent.vrfTemplateConfig | from_json).vrfVlanId == "2402"
    - result_2b.child_fabrics | length == 1
    - result_2b.child_fabrics[0].response | length >= 1
    - result_2b.child_fabrics[0].response[0].parent.vrfName == "ansible-msd-merged-child"
    - (result_2b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).advertiseDefaultRouteFlag == "true"
    - (result_2b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).advertiseHostRouteFlag == "false"
    - (result_2b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).configureStaticDefaultRouteFlag == "true"

- name: TEST.2d - MSD MERGED - [merged] VRF with child config - Idempotence
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config: *conf2
  register: result_2d

- name: TEST.2e - MSD MERGED - [debug] print result_2d
  ansible.builtin.debug:
    var: result_2d

- assert:
    that:
    - result_2d.changed == false
    - result_2d.parent_fabric.diff | length == 0
    - result_2d.parent_fabric.response | length == 0
    - result_2d.child_fabrics | length == 1
    - result_2d.child_fabrics[0].diff | length == 0
    - result_2d.child_fabrics[0].response | length == 0

- name: TEST.3 - MSD MERGED - [merged] VRF creation with VRF-Lite configuration
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config: &conf3
    - vrf_name: ansible-msd-merged-lite
      vrf_id: 9008403
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2403
      vrf_description: "MSD merged test VRF with VRF-Lite"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_2 }}"
        vrf_lite:
        - interface: "{{ interface_2a }}"
          ipv4_addr: 10.10.1.2/30
          neighbor_ipv4: 10.10.1.1
          peer_vrf: external_merged_vrf
          dot1q: 800
      deploy: true
  register: result_3

- name: TEST.3a - MSD MERGED - [debug] print result_3
  ansible.builtin.debug:
    var: result_3

- assert:
    that:
    - result_3.changed == true
    - result_3.workflow == "Multisite Parent with Child Fabric Processing"
    - result_3.parent_fabric.changed == true
    - result_3.parent_fabric.diff[0].vrf_name == "ansible-msd-merged-lite"
    - result_3.parent_fabric.diff[0].vrf_id == 9008403
    - result_3.parent_fabric.diff[0].vlan_id == 2403
    - result_3.parent_fabric.diff[0].attach | length >= 1
    - result_3.parent_fabric.diff[0].attach[0].ip_address == "{{ child_switch_2 }}"
    - result_3.parent_fabric.diff[0].attach[0].deploy == true
    - result_3.child_fabrics | length == 1
    - result_3.child_fabrics[0].fabric == "{{ child_fabric }}"
    - result_3.child_fabrics[0].diff[0].vrf_name == "ansible-msd-merged-lite"
    - result_3.parent_fabric.response[0].RETURN_CODE == 200


- name: TEST.3b - MSD MERGED - [query] Verify VRF-Lite VRF creation
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
    config: *conf3
  register: result_3b
  until:
    - "result_3b.parent_fabric.response[0].parent.vrfStatus is search('DEPLOYED')"
    - "result_3b.child_fabrics[0].response[0].parent.vrfStatus is search('DEPLOYED')"
  retries: 20
  delay: 3  

- name: TEST.3c - MSD MERGED - [debug] print result_3b
  ansible.builtin.debug:
    var: result_3b

- assert:
    that:
    - result_3b.parent_fabric.response | length == 1
    - result_3b.parent_fabric.response[0].parent.vrfName == "ansible-msd-merged-lite"
    - result_3b.parent_fabric.response[0].parent.vrfId == 9008403
    - (result_3b.parent_fabric.response[0].parent.vrfTemplateConfig | from_json).vrfVlanId == "2403"
    - result_3b.child_fabrics | length == 1
    - result_3b.child_fabrics[0].response | length >= 1
    - result_3b.child_fabrics[0].response[0].parent.vrfName == "ansible-msd-merged-lite"
    - (result_3b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).advertiseDefaultRouteFlag == "true"
    - (result_3b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).advertiseHostRouteFlag == "false"
    - (result_3b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).configureStaticDefaultRouteFlag == "true"

- name: TEST.3d - MSD MERGED - [merged] VRF with VRF-Lite - Idempotence
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config: *conf3
  register: result_3d

- name: TEST.3e - MSD MERGED - [debug] print result_3d
  ansible.builtin.debug:
    var: result_3d

- assert:
    that:
    - result_3d.changed == false
    - result_3d.parent_fabric.diff | length == 0
    - result_3d.parent_fabric.response | length == 0
    - result_3d.child_fabrics | length == 1
    - result_3d.child_fabrics[0].diff | length == 0
    - result_3d.child_fabrics[0].response | length == 0

- name: TEST.4 - MSD MERGED - [merged] Multiple VRFs creation
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config: &conf4
    - vrf_name: ansible-msd-merged-bulk1
      vrf_id: 9008421
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2421
      vrf_description: "Bulk merged test VRF 1"
      attach:
      - ip_address: "{{ child_switch_1 }}"
      deploy: true
    - vrf_name: ansible-msd-merged-bulk2
      vrf_id: 9008422
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2422
      vrf_description: "Bulk merged test VRF 2"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_2 }}"
      deploy: true
  register: result_4

- name: TEST.4a - MSD MERGED - [debug] print result_4
  ansible.builtin.debug:
    var: result_4

- assert:
    that:
    - result_4.changed == true
    - result_4.workflow == "Multisite Parent with Child Fabric Processing"
    - result_4.parent_fabric.changed == true
    - result_4.parent_fabric.diff | length == 2
    - result_4.parent_fabric.diff[0].vrf_name == "ansible-msd-merged-bulk1"
    - result_4.parent_fabric.diff[1].vrf_name == "ansible-msd-merged-bulk2"
    - result_4.parent_fabric.diff[0].attach[0].deploy == true
    - result_4.parent_fabric.diff[1].attach[0].deploy == true
    - result_4.child_fabrics | length == 1
    - result_4.child_fabrics[0].fabric == "{{ child_fabric }}"
    - result_4.child_fabrics[0].diff[0].vrf_name == "ansible-msd-merged-bulk2"
    - result_4.parent_fabric.response[0].RETURN_CODE == 200

- name: TEST.4b - MSD MERGED - [query] Verify multiple VRFs creation
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
    config: *conf4
  register: result_4b
  until:
    - "result_4b.parent_fabric.response[0].parent.vrfStatus is search('DEPLOYED')"
    - "result_4b.parent_fabric.response[1].parent.vrfStatus is search('DEPLOYED')"
  retries: 20
  delay: 3  

- name: TEST.4c - MSD MERGED - [debug] print result_4b
  ansible.builtin.debug:
    var: result_4b

- assert:
    that:
    - result_4b.parent_fabric.response | length == 2
    - result_4b.parent_fabric.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-merged-bulk1') | list | length == 1
    - result_4b.parent_fabric.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-merged-bulk2') | list | length == 1
    - result_4b.child_fabrics | length == 1
    - result_4b.child_fabrics[0].response | length >= 1
    - result_4b.child_fabrics[0].response[0].parent.vrfName == "ansible-msd-merged-bulk2"
    - (result_4b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).advertiseDefaultRouteFlag == "true"
    - (result_4b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).advertiseHostRouteFlag == "false"
    - (result_4b.child_fabrics[0].response[0].parent.vrfTemplateConfig | from_json).configureStaticDefaultRouteFlag == "true"

- name: TEST.4d - MSD MERGED - [merged] Multiple VRFs creation - Idempotence
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config: *conf4
  register: result_4d

- name: TEST.4e - MSD MERGED - [debug] print result_4d
  ansible.builtin.debug:
    var: result_4d

- assert:
    that:
    - result_4d.changed == false
    - result_4d.parent_fabric.diff | length == 0
    - result_4d.parent_fabric.response | length == 0
    - result_4d.child_fabrics | length == 1
    - result_4d.child_fabrics[0].diff | length == 0
    - result_4d.child_fabrics[0].response | length == 0

###############################################
###              FINAL CLEANUP             ##
###############################################

- name: CLEANUP.1 - MSD MERGED - [deleted] Delete all VRFs for cleanup
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: deleted
  register: result_cleanup_1

- name: CLEANUP.2 - MSD MERGED - [wait_for] Wait 60 seconds for cleanup to complete
  wait_for:
    timeout: 60
  when: result_cleanup_1.changed == true

###############################################
###              FINAL NOTES               ##
###############################################

- name: FINAL - MSD MERGED - Summary of tests completed
  ansible.builtin.debug:
    msg:
    - "MSD Merged tests completed successfully!"
    - "Tests covered:"
    - "  1. Basic VRF creation (Parent-only)"
    - "  2. VRF creation with Child fabric config"
    - "  3. VRF-Lite configuration creation"
    - "  4. Multiple VRF creation"
    - "  6. Comprehensive query validation"
    - "  7. Idempotence verification for all scenarios"
    - "All MSD fabric merged workflows validated successfully!"