##############################################
##            REQUIRED VARS                 ##
##############################################
# parent_fabric
# A Parent MSD VXLAN_EVPN fabric
#
# child_fabric
# A Child MSD VXLAN_EVPN fabric associated with parent_fabric
#
# child_switch_1
# - A switch in the child MSD fabric
# - VRF-lite capable switch
#
##############################################
##            REQUIRED VARS                 ##
##############################################
# parent_fabric
# A Parent MSD VXLAN_EVPN fabric
#
# child_fabric
# A Child MSD VXLAN_EVPN fabric associated with parent_fabric
#
# child_switch_1
# - A switch in the child MSD fabric
# - VRF-lite capable switch
#
# child_switch_2  
# - A switch in the child MSD fabric
# - VRF-lite capable switch
#
# interface_2a
# - Ethernet interface on child_switch_2
# - Used to test VRF LITE configuration in MSD environment
##############################################

##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/rest/control/fabrics/{{ parent_fabric }}"
  when: controller_version == "11"

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ parent_fabric }}"
  when: controller_version >= "12"

- name: SETUP.0 - MSD QUERY - [with_items] print vars
  ansible.builtin.debug:
    var: item
  with_items:
     - "parent_fabric : {{ parent_fabric }}"
     - "child_fabric : {{ child_fabric }}"
     - "child_switch_1 : {{ child_switch_1 }}"
     - "child_switch_2 : {{ child_switch_2 }}"
     - "interface_2a : {{ interface_2a }}"

- name: SETUP.1 - MSD QUERY - [dcnm_rest.GET] Verify parent fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: result

- assert:
    that:
    - result.response.DATA != None

- name: SETUP.2 - MSD QUERY - [deleted] Clean slate - delete all VRFs
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: deleted
  register: result_setup_2

- name: SETUP.2a - MSD QUERY - [wait_for] Wait 60 seconds for controller and switch to sync
  wait_for:
    timeout: 60
  when: result_setup_2.changed == true

- name: SETUP.3 - MSD QUERY - [merged] Create VRFs for query testing
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: merged
    config:
    - vrf_name: ansible-msd-query-basic
      vrf_id: 9008201
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2201
      vrf_description: "Basic MSD query test VRF"
      attach:
      - ip_address: "{{ child_switch_1 }}"
      deploy: true
    - vrf_name: ansible-msd-query-child
      vrf_id: 9008202
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2202
      vrf_description: "MSD query test VRF with Child config"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_1 }}"
      deploy: true
    - vrf_name: ansible-msd-query-lite
      vrf_id: 9008203
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2203
      vrf_description: "MSD query test VRF with VRF-Lite"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_2 }}"
        vrf_lite:
        - interface: "{{ interface_2a }}"
          ipv4_addr: 10.10.1.2/30
          neighbor_ipv4: 10.10.1.1
          peer_vrf: external_query_vrf
          dot1q: 600
      deploy: true
    - vrf_name: ansible-msd-query-multiple-1
      vrf_id: 9008221
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2221
      vrf_description: "Query test VRF 1 for multiple query tests"
      attach:
      - ip_address: "{{ child_switch_1 }}"
      deploy: true
    - vrf_name: ansible-msd-query-multiple-2
      vrf_id: 9008222
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 2222
      vrf_description: "Query test VRF 2 for multiple query tests"
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
        adv_default_routes: true
        adv_host_routes: false
        static_default_route: true
      attach:
      - ip_address: "{{ child_switch_2 }}"
      deploy: true
  register: result_setup_3

- name: SETUP.3a - MSD QUERY - [wait_for] Wait for VRFs to be deployed
  wait_for:
    timeout: 60

- name: SETUP.3b - MSD QUERY - [debug] print setup result
  ansible.builtin.debug:
    var: result_setup_3

###############################################
###            MSD QUERY TESTS              ##
###############################################

- name: TEST.1 - MSD QUERY - [query] Basic VRF query without Child config
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
    config:
    - vrf_name: ansible-msd-query-basic
  register: result_1

- name: TEST.1a - MSD QUERY - [debug] print result_1
  ansible.builtin.debug:
    var: result_1

- assert:
    that:
    - result_1.changed == false
    - result_1.workflow == "Multisite Parent without Child Fabric Processing"
    - result_1.response | length == 1
    - result_1.response[0].parent.vrfName == "ansible-msd-query-basic"
    - result_1.response[0].parent.vrfId == 9008201
    - result_1.response[0].parent.fabric == "{{ parent_fabric }}"
    - (result_1.response[0].parent.vrfTemplateConfig | from_json).vrfVlanId == "2201"
    - result_1.response[0].attach | length >= 1
    - result_1.response[0].attach[0].vrfName == "ansible-msd-query-basic"

- name: TEST.2 - MSD QUERY - [query] VRF query with Child config
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
    config:
    - vrf_name: ansible-msd-query-child
  register: result_2

- name: TEST.2a - MSD QUERY - [debug] print result_2
  ansible.builtin.debug:
    var: result_2

- assert:
    that:
    - result_2.changed == false
    - result_2.workflow == "Multisite Parent without Child Fabric Processing"
    - result_2.response | length == 1
    - result_2.response[0].parent.vrfName == "ansible-msd-query-child"
    - result_2.response[0].parent.vrfId == 9008202
    - result_2.response[0].parent.fabric == "{{ parent_fabric }}"
    - (result_2.response[0].parent.vrfTemplateConfig | from_json).vrfVlanId == "2202"
    - result_2.response[0].attach | length >= 1

- name: TEST.3 - MSD QUERY - [query] Query multiple specific VRFs
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
    config:
    - vrf_name: ansible-msd-query-basic
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
    - vrf_name: ansible-msd-query-child
      child_fabric_config:
      - fabric: "{{ child_fabric }}"
    - vrf_name: ansible-msd-query-lite
  register: result_3

- name: TEST.3a - MSD QUERY - [debug] print result_3
  ansible.builtin.debug:
    var: result_3

- assert:
    that:
    - result_3.changed == false
    - result_3.workflow == "Multisite Parent with Child Fabric Processing"
    - result_3.parent_fabric.fabric == "{{ parent_fabric }}"
    - result_3.parent_fabric.response | length == 3
    - result_3.parent_fabric.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-basic') | list | length == 1
    - result_3.parent_fabric.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-child') | list | length == 1
    - result_3.parent_fabric.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-lite') | list | length == 1
    - result_3.parent_fabric.response | selectattr('parent.vrfId', 'equalto', 9008201) | list | length == 1
    - result_3.parent_fabric.response | selectattr('parent.vrfId', 'equalto', 9008202) | list | length == 1
    - result_3.parent_fabric.response | selectattr('parent.vrfId', 'equalto', 9008203) | list | length == 1
    - result_3.child_fabrics | length == 1
    - result_3.child_fabrics[0].fabric == "{{ child_fabric }}"
    - result_3.child_fabrics[0].response | length == 2

- name: TEST.4 - MSD QUERY - [query] Query all VRFs (no config specified - MSD Parent)
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
  register: result_4

- name: TEST.4a - MSD QUERY - [debug] print result_4
  ansible.builtin.debug:
    var: result_4

- assert:
    that:
    - result_4.changed == false
    - result_4.workflow == "Multisite Parent without Child Fabric Processing"
    - result_4.response | length == 5  # Should return all 5 VRFs created
    - result_4.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-basic') | list | length == 1
    - result_4.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-child') | list | length == 1
    - result_4.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-lite') | list | length == 1
    - result_4.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-multiple-1') | list | length == 1
    - result_4.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-multiple-2') | list | length == 1
    - result_4.response[0].parent.vrfId == 9008221
    - (result_4.response[0].parent.vrfTemplateConfig | from_json).vrfVlanId == "2221"
    - result_4.diff | length == 0

- name: TEST.5 - MSD QUERY - [query] Query all VRFs (no config specified - MSD Parent)
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
  register: result_5

- name: TEST.5a - MSD QUERY - [debug] print result_5
  ansible.builtin.debug:
    var: result_5

- assert:
    that:
    - result_5.changed == false
    - result_5.workflow == "Multisite Parent without Child Fabric Processing"
    - result_5.response | length == 5  # Should return all 5 VRFs created
    - result_5.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-basic') | list | length == 1
    - result_5.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-child') | list | length == 1
    - result_5.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-lite') | list | length == 1
    - result_5.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-multiple-1') | list | length == 1
    - result_5.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-multiple-2') | list | length == 1
    - result_5.diff | length == 0

- name: TEST.6 - MSD QUERY - [query] Query all VRFs (no config specified - MSD Child)
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ child_fabric }}"
    state: query
  register: result_6

- name: TEST.6a - MSD QUERY - [debug] print result_6
  ansible.builtin.debug:
    var: result_6

- assert:
    that:
    - result_6.changed == false
    - result_6.workflow == "Multisite Child VRF Processing"
    - result_6.response | length == 5
    - result_6.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-basic') | list | length == 1
    - result_6.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-child') | list | length == 1
    - result_6.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-lite') | list | length == 1
    - result_6.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-multiple-1') | list | length == 1
    - result_6.response | selectattr('parent.vrfName', 'equalto', 'ansible-msd-query-multiple-2') | list | length == 1
    - result_6.diff | length == 0

- name: TEST.7 - MSD QUERY - [query] Query non-existent VRF (MSD Parent)
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
    config:
    - vrf_name: ansible-msd-nonexistent
  register: result_7

- name: TEST.7a - MSD QUERY - [debug] print result_7
  ansible.builtin.debug:
    var: result_7

- assert:
    that:
    - result_7.changed == false
    - result_7.workflow == "Multisite Parent without Child Fabric Processing"
    - result_7.response | length == 0  # Should return no VRFs
    - result_7.diff | length == 0

- name: TEST.8 - MSD QUERY - [query] Query non-existent VRF (MSD Child)
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ child_fabric }}"
    state: query
    config:
    - vrf_name: ansible-msd-nonexistent
  register: result_8

- name: TEST.8a - MSD QUERY - [debug] print result_8
  ansible.builtin.debug:
    var: result_8

- assert:
    that:
    - result_8.changed == false
    - result_8.workflow == "Multisite Child VRF Processing"
    - result_8.response | length == 0  # Should return no VRFs
    - result_8.diff | length == 0

###############################################
###              CLEANUP                    ##
###############################################

- name: CLEANUP.1 - MSD QUERY - [deleted] Delete all VRFs from Parent MSD fabric
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: deleted
  register: result_cleanup_1

- name: CLEANUP.1a - MSD QUERY - [debug] print cleanup result
  ansible.builtin.debug:
    var: result_cleanup_1

- assert:
    that:
    - result_cleanup_1.changed == true  # Should delete the 5 VRFs we created
    - result_cleanup_1.workflow == "Multisite Parent without Child Fabric Processing"
    - result_cleanup_1.diff | length >= 5

- name: CLEANUP.2 - MSD QUERY - [wait_for] Wait 60 seconds for cleanup to complete
  wait_for:
    timeout: 60

- name: CLEANUP.3 - MSD QUERY - [query] Verify all VRFs were deleted
  cisco.dcnm.dcnm_vrf:
    fabric: "{{ parent_fabric }}"
    state: query
  register: result_cleanup_3

- name: CLEANUP.3a - MSD QUERY - [debug] print final query result
  ansible.builtin.debug:
    var: result_cleanup_3

- assert:
    that:
    - result_cleanup_3.changed == false
    - result_cleanup_3.workflow == "Multisite Parent without Child Fabric Processing"
    - result_cleanup_3.response | length == 0  # No VRFs should remain
    - result_cleanup_3.diff | length == 0

###############################################
###              FINAL NOTES               ##
###############################################

- name: FINAL - MSD QUERY - Summary of tests completed
  ansible.builtin.debug:
    msg:
    - "MSD Query tests completed successfully!"
    - "Tests covered:"
    - "  1. Basic VRF query (Parent-only)"
    - "  2. VRF query with Child fabric config"
    - "  3. VRF query with VRF-Lite configuration"
    - "  4. Multiple specific VRF queries"
    - "  5. Query all VRFs (no config specified)"
    - "  6. Query non-existent VRF"
    - "  7. Query mixed VRFs (existing and non-existing)"
    - "  8. Query multiple VRFs for bulk query tests"
    - "  9. Idempotence verification for all query operations"
    - "All MSD fabric query workflows validated successfully!"