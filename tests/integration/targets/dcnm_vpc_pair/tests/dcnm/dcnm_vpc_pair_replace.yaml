##############################################
##                 SETUP                    ##
##############################################

- name: REPLACED - Test Entry Point - [dcnm_vpc_pair]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+              Executing Tests - [dcnm_vpc_pair]               +"
      - "----------------------------------------------------------------"
  tags: replaced

##############################################
##      Create Dictionary of Test Data      ##
##############################################
- name: REPLACED - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    # some cases are for a specific deploy state
    deploy_local: true
    
    test_data_replaced:
      #----------------------------------  
      # config templates and auto generated file location for test cases
      #----------------------------------
      # TC1 - Initial VPC Pair Configuration for replacement
      vpc_pair_initial_template: "replaced/dcnm_vpc_pair_replaced_initial_conf.j2"
      vpc_pair_initial_file: "{{ role_path }}/files/dcnm_vpc_pair_replaced_initial_conf.yaml"
      #----------------------------------
      # TC2 - Replaced VPC Pair Configuration  
      vpc_pair_replaced_template: "replaced/dcnm_vpc_pair_replaced_conf.j2"
      vpc_pair_replaced_file: "{{ role_path }}/files/dcnm_vpc_pair_replaced_conf.yaml"
  delegate_to: localhost
  tags: replaced

##############################################
## Create Module Payloads using J2 Template ##
##############################################

- name: REPLACED - Create Config file from j2 for initial config
  ansible.builtin.template:
    src: "{{ test_data_replaced.vpc_pair_initial_template }}"
    dest: "{{ test_data_replaced.vpc_pair_initial_file }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - Create Config file from j2 for replaced config
  ansible.builtin.template:
    src: "{{ test_data_replaced.vpc_pair_replaced_template }}"
    dest: "{{ test_data_replaced.vpc_pair_replaced_file }}"
  delegate_to: localhost
  tags: replaced

##############################################
##                REPLACED                  ##
##############################################

# TC1 - Create Initial VPC Pair using replaced state
- name: REPLACED - TC1 - DELETED - Clean up any existing VPC pairs
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: replaced

- name: REPLACED - TC1 - Load VPC Pair Initial Config File
  ansible.builtin.set_fact:
    dcnm_vpc_pair_initial_conf: "{{ lookup('file', '{{ test_data_replaced.vpc_pair_initial_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC1 - REPLACED - Create VPC Pair using replaced state
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: replaced
    config: "{{ dcnm_vpc_pair_initial_conf }}"
  register: result
  tags: replaced

- name: REPLACED - TC1 - ASSERT - Check if changed flag is true
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 1'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 1'
  tags: replaced

- name: REPLACED - TC1 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: replaced

- name: REPLACED - TC1 - VALIDITY CHECK - Verify VPC pair state in NDFC
  cisco.dcnm.tests.integration.ndfc_vpc_pair_validate:
    config_path: "{{ test_data_replaced.vpc_pair_initial_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: replaced

# - name: REPLACED - TC1 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   tags: replaced

# TC2 - Replace VPC Pair configuration
- name: REPLACED - TC2 - Load VPC Pair Replaced Config File
  ansible.builtin.set_fact:
    dcnm_vpc_pair_replaced_conf: "{{ lookup('file', '{{ test_data_replaced.vpc_pair_replaced_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC2 - REPLACED - Replace VPC Pair configuration
  cisco.dcnm.dcnm_vpc_pair: &conf_replaced
    src_fabric: "{{ test_data_common.fabric }}"
    state: replaced
    config: "{{ dcnm_vpc_pair_replaced_conf }}"
  register: result
  tags: replaced

- name: REPLACED - TC2 - ASSERT - Check if changed flag is true for LANClassic
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 1'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 1'
  when: (fabric_type == "LANClassic")
  tags: replaced

- name: REPLACED - TC2 - ASSERT - Check if changed flag is false for VXLANFabric
  assert:
    that:
      - result.changed == false
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  when: (fabric_type == "VXLANFabric")
  tags: replaced

- name: REPLACED - TC2 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: replaced

- name: REPLACED - TC2 - VALIDITY CHECK - Verify VPC pair state in NDFC
  cisco.dcnm.tests.integration.ndfc_vpc_pair_validate:
    config_path: "{{ test_data_replaced.vpc_pair_replaced_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  when: (fabric_type == "LANClassic")
  tags: replaced

# - name: REPLACED - TC2 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   tags: replaced

# TC3 - Idempotence test
- name: REPLACED - TC3 - conf - Idempotence
  cisco.dcnm.dcnm_vpc_pair: *conf_replaced
  register: result
  tags: replaced

- name: REPLACED - TC3 - ASSERT - Check if changed flag is false
  assert:
    that:
      - result.changed == false
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: replaced

##############################################
##                 CLEAN-UP                 ##
##############################################

- name: REPLACED - END - remove VPC pairs
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
  when: IT_CONTEXT is not defined
  tags: replaced
