##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f dcnm_vpc_pair.log

- block:

##############################################
##            INITIALIZE                    ##
##############################################

    - name: Put fabric to default state
      cisco.dcnm.dcnm_vpc_pair: &dcnm_vpc_pair_delete
        src_fabric: "{{ ansible_it_fabric }}"
        deploy: true                                                # Flag indicating whether changes are to be deployed, Mandatory: False, Type: bool, default: True
        state: deleted                                              # only choose form [merged, replaced, deleted, overridden, query. fetch]
      register: result

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##                MERGE                     ##
##############################################

    - name: Create VPC switch pair using replaced state
      cisco.dcnm.dcnm_vpc_pair:
        src_fabric: "{{ ansible_it_fabric }}"
        deploy: true                                                # Flag indicating whether changes are to be deployed, Mandatory: False, Type: bool, default: True
        state: replaced                                             # only choose form [merged, replaced, deleted, overridden, query. fetch]
        config:
          - peerOneId: "{{ ansible_switch1 }}"                      # IP Address/Host Name of Peer1 of VPC switch pair, Mandatory: True, Type: str
            peerTwoId: "{{ ansible_switch2 }}"                      # IP Address/Host Name of Peer2 of VPC switch pair, Mandatory: True, Type: str
            templateName: "vpc_pair"                                # Template to be applied to this VPC switch pair
            profile:
              ADMIN_STATE: True                                     # Uncheck to disable the vPC Peerlink port-channel, Mandatory: True, Type: bool, Default: true"
              ALLOWED_VLANS: "all"                                  # Allowed values: 'none', 'all', or vlan ranges (ex: 1-200,500-2000,3000), Mandatory: True, Type: str, Default: all"
              DOMAIN_ID: "{{ ansible_vxlan_vpc_domain_id | int }}"  # vPC Domain ID, Mandatory: True, Min: 1, Max: 1000, Type: int, Default: ''"
              FABRIC_NAME: "{{ ansible_it_fabric }}"                # Fabric Name, Mandatory: True, Type: str, Default: ''"
              KEEP_ALIVE_HOLD_TIMEOUT: 3                            # Hold timeout to ignore stale peer alive messages, default is 3 if not specified, Mandatory: False, Min: 3, Max: 10, Type: int, Default: 3"
              KEEP_ALIVE_VRF: management                            # Name of VRF used for keep-alive, enter 'default' for default VRF, Mandatory: True, Type: str, Default: ''"
              PC_MODE: active                                       # Channel mode options: on, active and passive, Mandatory: False, ValidValues: ['on', 'active', 'passive'], Type: str, Default: active"
              PEER1_DOMAIN_CONF: "fast-convergence"                 # Additional CLI for Peer-1 vPC Domain, Mandatory: False, Type: str, Default: ''"
              PEER1_KEEP_ALIVE_LOCAL_IP: "{{ ansible_peer1_ip }}"   # IP address of a L3 interface in non-default VRF on Peer 1, Mandatory: True, Type: str, Default: ''"
              PEER1_MEMBER_INTERFACES: e1/20                        # A list of member interfaces for Peer-1 [e.g. e1/5,eth1/7-9], Mandatory: False, Type: list, Default: []"
              PEER1_PCID: 101                                       # Peer-1 Peerlink port-channel number (Min:1, Max:4096), Mandatory: False, Min: 1, Max: 4096, Type: int, Default: ''"
              PEER1_PO_CONF: "bandwidth inherit"                    # Additional CLI for Peer-1 vPC Peerlink port-channel, Mandatory: False, Type: str, Default: ''"
              PEER1_PO_DESC: "This is peer1 PC"                     # Add description to the port-channel (Max Size 254), Mandatory: False, MinLen: 1, MaxLen: 254, Type: str, Default: ''"
              PEER2_DOMAIN_CONF: "fast-convergence"                 # Additional CLI for Peer-2 vPC Domain, Mandatory: False, Type: str, Default: ''"
              PEER2_KEEP_ALIVE_LOCAL_IP: "{{ ansible_peer2_ip }}"   # IP address of a L3 interface in non-default VRF on Peer 2, Mandatory: True, Type: str, Default: ''"
              PEER2_MEMBER_INTERFACES: e1/20                        # A list of member interfaces for Peer-2 [e.g. e1/5,eth1/7-9], Mandatory: False, Type: list, Default: []"
              PEER2_PCID: 102                                       # Peer-2 Peerlink port-channel number (Min:1, Max:4096), Mandatory: False, Min: 1, Max: 4096, Type: int, Default: ''"
              PEER2_PO_CONF: "bandwidth inherit"                    # Additional CLI for Peer-1 vPC Peerlink port-channel, Mandatory: False, Type: str, Default: ''"
              PEER2_PO_DESC: "This is peer2 PC"                     # Add description to the port-channel (Max Size 254), Mandatory: False, MinLen: 1, MaxLen: 254, Type: str, Default: ''"
        templates:                                                  # List of templates to be fetched, Mandatory: 'state==fetch', Type: list, default: []
          - vpc_pair                                                # Name of the template to be fetched, Mandatory: 'state==fetch', Type: str
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 1'
          - '(result["diff"][0]["modified"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##               REPLACE                    ##
##############################################

    - name: Replace VPC switch pair paremeters
      cisco.dcnm.dcnm_vpc_pair: &dcnm_vpc_pair_replace
        src_fabric: "{{ ansible_it_fabric }}"
        deploy: true                                                # Flag indicating whether changes are to be deployed, Mandatory: False, Type: bool, default: True
        state: replaced                                             # only choose form [merged, replaced, deleted, overridden, query. fetch]
        config:
          - peerOneId: "{{ ansible_switch1 }}"                      # IP Address/Host Name of Peer1 of VPC switch pair, Mandatory: True, Type: str
            peerTwoId: "{{ ansible_switch2 }}"                      # IP Address/Host Name of Peer2 of VPC switch pair, Mandatory: True, Type: str
            templateName: "vpc_pair"                                # Template to be applied to this VPC switch pair
            profile:
              ADMIN_STATE: false                                    # Uncheck to disable the vPC Peerlink port-channel, Mandatory: True, Type: bool, Default: true"
              ALLOWED_VLANS: "none"                                  # Allowed values: 'none', 'all', or vlan ranges (ex: 1-200,500-2000,3000), Mandatory: True, Type: str, Default: all"
              DOMAIN_ID: "{{ ansible_vxlan_vpc_domain_id | int }}"  # vPC Domain ID, Mandatory: True, Min: 1, Max: 1000, Type: int, Default: ''"
              FABRIC_NAME: "{{ ansible_it_fabric }}"                # Fabric Name, Mandatory: True, Type: str, Default: ''"
              KEEP_ALIVE_HOLD_TIMEOUT: 9                            # Hold timeout to ignore stale peer alive messages, default is 3 if not specified, Mandatory: False, Min: 3, Max: 10, Type: int, Default: 3"
              KEEP_ALIVE_VRF: management                            # Name of VRF used for keep-alive, enter 'default' for default VRF, Mandatory: True, Type: str, Default: ''"
              PC_MODE: 'on'                                         # Channel mode options: on, active and passive, Mandatory: False, ValidValues: ['on', 'active', 'passive'], Type: str, Default: active"
              PEER1_DOMAIN_CONF: "graceful consistency-check"       # Additional CLI for Peer-1 vPC Domain, Mandatory: False, Type: str, Default: ''"
              PEER1_KEEP_ALIVE_LOCAL_IP: "{{ ansible_peer1_ip }}"   # IP address of a L3 interface in non-default VRF on Peer 1, Mandatory: True, Type: str, Default: ''"
              PEER1_MEMBER_INTERFACES: e1/21,e1/22-23               # A list of member interfaces for Peer-1 [e.g. e1/5,eth1/7-9], Mandatory: False, Type: list, Default: []"
              PEER1_PCID: 111                                       # Peer-1 Peerlink port-channel number (Min:1, Max:4096), Mandatory: False, Min: 1, Max: 4096, Type: int, Default: ''"
              PEER1_PO_CONF: "buffer-boost"                         # Additional CLI for Peer-1 vPC Peerlink port-channel, Mandatory: False, Type: str, Default: ''"
              PEER1_PO_DESC: "This is peer1 PC - Replaced"          # Add description to the port-channel (Max Size 254), Mandatory: False, MinLen: 1, MaxLen: 254, Type: str, Default: ''"
              PEER2_DOMAIN_CONF: "graceful consistency-check"       # Additional CLI for Peer-2 vPC Domain, Mandatory: False, Type: str, Default: ''"
              PEER2_KEEP_ALIVE_LOCAL_IP: "{{ ansible_peer2_ip }}"   # IP address of a L3 interface in non-default VRF on Peer 2, Mandatory: True, Type: str, Default: ''"
              PEER2_MEMBER_INTERFACES: e1/21,e1/22-23               # A list of member interfaces for Peer-2 [e.g. e1/5,eth1/7-9], Mandatory: False, Type: list, Default: []"
              PEER2_PCID: 112                                       # Peer-2 Peerlink port-channel number (Min:1, Max:4096), Mandatory: False, Min: 1, Max: 4096, Type: int, Default: ''"
              PEER2_PO_CONF: "buffer-boost"                         # Additional CLI for Peer-1 vPC Peerlink port-channel, Mandatory: False, Type: str, Default: ''"
              PEER2_PO_DESC: "This is peer2 PC - Replaced"          # Add description to the port-channel (Max Size 254), Mandatory: False, MinLen: 1, MaxLen: 254, Type: str, Default: ''"
        templates:                                                  # List of templates to be fetched, Mandatory: 'state==fetch', Type: list, default: []
          - vpc_pair                                                # Name of the template to be fetched, Mandatory: 'state==fetch', Type: str
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 1'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 1'
      when: (fabric_type == "LANClassic")

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'
      when: (fabric_type == "VXLANFabric")

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##              IDEMPOTENCE                 ##
##############################################

    - name: Replace VPC switch pair - Idempotence
      cisco.dcnm.dcnm_vpc_pair: *dcnm_vpc_pair_replace
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##            CLEANUP                       ##
##############################################

    - name: Delete all VPC switch pairs
      cisco.dcnm.dcnm_vpc_pair: *dcnm_vpc_pair_delete
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined
