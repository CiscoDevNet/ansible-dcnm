##############################################
##                 SETUP                    ##
##############################################

- name: QUERY - Test Entry Point - [dcnm_vpc_pair]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+              Executing Tests - [dcnm_vpc_pair]               +"
      - "----------------------------------------------------------------"
  tags: query

##############################################
##      Create Dictionary of Test Data      ##
##############################################
- name: QUERY - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    # some cases are for a specific deploy state
    deploy_local: true
    
    test_data_query:
      #----------------------------------  
      # config templates and auto generated file location for test cases
      #----------------------------------
      # TC1 - VPC Pair Configuration for query tests
      vpc_pair_setup_template: "merged/dcnm_vpc_pair_merged_full_conf.j2"
      vpc_pair_setup_file: "{{ role_path }}/files/dcnm_vpc_pair_query_setup_conf.yaml"
  delegate_to: localhost
  tags: query

##############################################
## Create Module Payloads using J2 Template ##
##############################################

- name: QUERY - Create Config file from j2 for setup
  ansible.builtin.template:
    src: "{{ test_data_query.vpc_pair_setup_template }}"
    dest: "{{ test_data_query.vpc_pair_setup_file }}"
  delegate_to: localhost
  tags: query

##############################################
##                QUERY                     ##
##############################################

# TC1 - Setup: Create VPC Pair for query tests
- name: QUERY - TC1 - DELETED - Clean up any existing VPC pairs
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: query

- name: QUERY - TC1 - Load VPC Pair Setup Config File
  ansible.builtin.set_fact:
    dcnm_vpc_pair_setup_conf: "{{ lookup('file', '{{ test_data_query.vpc_pair_setup_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: query

- name: QUERY - TC1 - MERGED - Create VPC Pair for testing
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_vpc_pair_setup_conf }}"
  register: result
  tags: query

- name: QUERY - TC1 - ASSERT - Check if creation successful
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 1'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 1'
  tags: query

- name: QUERY - TC1 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: query

# - name: QUERY - TC1 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   tags: query

# TC2 - Query with no filters
- name: QUERY - TC2 - QUERY - Query all VPC pairs with no filters
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: query
  register: result
  tags: query

- name: QUERY - TC2 - ASSERT - Check query results
  assert:
    that:
      - result.changed == false
      - '(result["response"] | length) == 1'
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: query

# TC3 - Query with both peers specified
- name: QUERY - TC3 - QUERY - Query VPC pair with both peers specified
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - peerOneId: "{{ test_data_common.sw1 }}"
        peerTwoId: "{{ test_data_common.sw2 }}"
  register: result
  tags: query

- name: QUERY - TC3 - ASSERT - Check query results with both peers
  assert:
    that:
      - result.changed == false
      - '(result["response"] | length) == 1'
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: query

# TC4 - Query with one peer specified
- name: QUERY - TC4 - QUERY - Query VPC pair with one peer specified
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - peerOneId: "{{ test_data_common.sw1 }}"
  register: result
  tags: query

- name: QUERY - TC4 - ASSERT - Check query results with one peer
  assert:
    that:
      - result.changed == false
      - '(result["response"] | length) == 1'
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: query

# TC5 - Query with second peer specified
- name: QUERY - TC5 - QUERY - Query VPC pair with second peer specified
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - peerTwoId: "{{ test_data_common.sw2 }}"
  register: result
  tags: query

- name: QUERY - TC5 - ASSERT - Check query results with second peer
  assert:
    that:
      - result.changed == false
      - '(result["response"] | length) == 1'
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: query

# TC6 - Query with non-existent peer
- name: QUERY - TC6 - QUERY - Query VPC pair with non-existent peer
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - peerOneId: "1.1.1.1"
  register: result
  tags: query
  ignore_errors: true

- name: QUERY - TC6 - ASSERT - Check query results with non-existent peer
  assert:
    that:
      - result.msg is search("not a valid one") or result.msg is search("Error")
  tags: query

##############################################
##                 CLEAN-UP                 ##
##############################################

- name: QUERY - END - remove VPC pairs
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
  when: IT_CONTEXT is not defined
  tags: query
