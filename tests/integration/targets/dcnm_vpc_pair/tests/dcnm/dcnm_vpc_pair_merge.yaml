##############################################
##                 SETUP                    ##
##############################################

- name: MERGED - Test Entry Point - [dcnm_vpc_pair]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+              Executing Tests - [dcnm_vpc_pair]               +"
      - "----------------------------------------------------------------"
  tags: merged

##############################################
##      Create Dictionary of Test Data      ##
##############################################
- name: MERGED - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    # some cases are for a specific deploy state
    deploy_local: false
    
    test_data_merged:
      #----------------------------------  
      # config templates and auto generated file location for test cases
      #----------------------------------
      # TC1 - Full VPC Pair Configuration
      vpc_pair_full_template: "merged/dcnm_vpc_pair_merged_full_conf.j2"
      vpc_pair_full_file: "{{ role_path }}/files/dcnm_vpc_pair_merged_full_conf.yaml"
      vpc_pair_full_deployed_file: "{{ role_path }}/files/dcnm_vpc_pair_merged_full_conf_deployed.yaml"
      #----------------------------------
      # TC2 - Modified VPC Pair Configuration  
      vpc_pair_modified_template: "merged/dcnm_vpc_pair_merged_modified_conf.j2"
      vpc_pair_modified_file: "{{ role_path }}/files/dcnm_vpc_pair_merged_modified_conf.yaml"
      #----------------------------------
      # TC3 - Minimal VPC Pair Configuration
      vpc_pair_minimal_template: "merged/dcnm_vpc_pair_merged_minimal_conf.j2"
      vpc_pair_minimal_file: "{{ role_path }}/files/dcnm_vpc_pair_merged_minimal_conf.yaml"
      #----------------------------------
      # TC4 - VPC Pair without deploy flag
      vpc_pair_no_deploy_template: "merged/dcnm_vpc_pair_merged_no_deploy_conf.j2"
      vpc_pair_no_deploy_file: "{{ role_path }}/files/dcnm_vpc_pair_merged_no_deploy_conf.yaml"
  delegate_to: localhost
  tags: merged

##############################################
## Create Module Payloads using J2 Template ##
##############################################

- name: MERGED - Create Config file from j2 without Deploy
  ansible.builtin.template:
    src: "{{ test_data_merged.vpc_pair_full_template }}"
    dest: "{{ test_data_merged.vpc_pair_full_file }}"
  delegate_to: localhost
  tags: merged

- name: MERGED - Create Config file from j2 for modified config
  ansible.builtin.template:
    src: "{{ test_data_merged.vpc_pair_modified_template }}"
    dest: "{{ test_data_merged.vpc_pair_modified_file }}"
  delegate_to: localhost
  tags: merged

- name: MERGED - Create Config file from j2 for minimal config
  ansible.builtin.template:
    src: "{{ test_data_merged.vpc_pair_minimal_template }}"
    dest: "{{ test_data_merged.vpc_pair_minimal_file }}"
  delegate_to: localhost
  tags: merged

- name: MERGED - Create Config file from j2 for no deploy config
  ansible.builtin.template:
    src: "{{ test_data_merged.vpc_pair_no_deploy_template }}"
    dest: "{{ test_data_merged.vpc_pair_no_deploy_file }}"
  delegate_to: localhost
  tags: merged

# flip deploy
- name: MERGED - change deploy to true
  ansible.builtin.set_fact:
    deploy_local: true
  delegate_to: localhost
  tags: merged

- name: MERGED - Create Config file from j2 with Deploy
  ansible.builtin.template:
    src: "{{ test_data_merged.vpc_pair_full_template }}"
    dest: "{{ test_data_merged.vpc_pair_full_deployed_file}}"
  delegate_to: localhost
  tags: merged

##############################################
##                MERGED                    ##
##############################################

# TC1 - Create VPC Pair with full configuration
- name: MERGED - TC1 - DELETED - Clean up any existing VPC pairs
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: merged

- name: MERGED - TC1 - Load VPC Pair Config File
  ansible.builtin.set_fact:
    dcnm_vpc_pair_full_conf: "{{ lookup('file', '{{ test_data_merged.vpc_pair_full_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: merged

- name: MERGED - TC1 - MERGED - Create VPC Pair with Full Configuration
  cisco.dcnm.dcnm_vpc_pair: &conf_full
    src_fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_vpc_pair_full_conf }}"
  register: result
  tags: merged

- name: MERGED - TC1 - ASSERT - Check if changed flag is true
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 1'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 1'
  tags: merged

- name: MERGED - TC1 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: merged

# - name: MERGED - TC1 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   tags: merged

- name: MERGED - TC1 - conf - Idempotence
  cisco.dcnm.dcnm_vpc_pair: *conf_full
  register: result
  tags: merged

- name: MERGED - TC1 - ASSERT - Check if changed flag is false
  assert:
    that:
      - result.changed == false
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: merged

# - name: MERGED - TC1 - ASSERT - Check response codes for idempotence
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   tags: merged

# TC2 - Modify existing VPC Pair configuration
- name: MERGED - TC2 - Load VPC Pair Modified Config File
  ansible.builtin.set_fact:
    dcnm_vpc_pair_modified_conf: "{{ lookup('file', '{{ test_data_merged.vpc_pair_modified_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: merged

- name: MERGED - TC2 - MERGED - Modify VPC Pair Configuration
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_vpc_pair_modified_conf }}"
  register: result
  when: (fabric_type == "LANClassic")
  tags: merged

- name: MERGED - TC2 - ASSERT - Check if changed flag is true
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 1'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 1'
  when: (fabric_type == "LANClassic")
  tags: merged

- name: MERGED - TC2 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  when: (fabric_type == "LANClassic")
  tags: merged

# - name: MERGED - TC2 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   when: (fabric_type == "LANClassic")
#   tags: merged

# TC2b - VXLANFabric specific test
- name: MERGED - TC2b - MERGED - Merge VPC pair for VXLAN Fabric
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: merged
    config:
      - peerOneId: "{{ test_data_common.sw1 }}"
        peerTwoId: "{{ test_data_common.sw2 }}"
  register: result
  when: (fabric_type == "VXLANFabric")
  tags: merged

- name: MERGED - TC2b - ASSERT - Check if changed flag is false for VXLAN
  assert:
    that:
      - result.changed == false
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  when: (fabric_type == "VXLANFabric")
  tags: merged

- name: MERGED - TC2b - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  when: (fabric_type == "VXLANFabric")
  tags: merged

# - name: MERGED - TC2b - ASSERT - Check response codes for VXLAN
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   when: (fabric_type == "VXLANFabric")
#   tags: merged

# TC3 - Delete VPC Pair
- name: MERGED - TC3 - DELETED - Delete VPC Pair
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config:
      - peerOneId: "{{ test_data_common.sw1 }}"
        peerTwoId: "{{ test_data_common.sw2 }}"
  register: result
  tags: merged

- name: MERGED - TC3 - ASSERT - Check if deleted successfully
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 1'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: merged

- name: MERGED - TC3 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: merged

# - name: MERGED - TC3 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   tags: merged

# TC4 - Create VPC Pair with minimal configuration
- name: MERGED - TC4 - Load VPC Pair Minimal Config File
  ansible.builtin.set_fact:
    dcnm_vpc_pair_minimal_conf: "{{ lookup('file', '{{ test_data_merged.vpc_pair_minimal_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: merged

- name: MERGED - TC4 - MERGED - Create VPC Pair with Minimal Configuration
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_vpc_pair_minimal_conf }}"
  register: result
  when: (fabric_type == "LANClassic")
  tags: merged

- name: MERGED - TC4 - ASSERT - Check if changed flag is true
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 1'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 1'
  when: (fabric_type == "LANClassic")
  tags: merged

- name: MERGED - TC4 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  when: (fabric_type == "LANClassic")
  tags: merged

# - name: MERGED - TC4 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   when: (fabric_type == "LANClassic")
#   tags: merged

# TC4b - Delete VPC Pair after minimal test
- name: MERGED - TC4b - DELETED - Delete VPC Pair after minimal test
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config:
      - peerOneId: "{{ test_data_common.sw1 }}"
        peerTwoId: "{{ test_data_common.sw2 }}"
  register: result
  when: (fabric_type == "LANClassic")
  tags: merged

- name: MERGED - TC4b - ASSERT - Check if deleted successfully
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 1'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  when: (fabric_type == "LANClassic")
  tags: merged

# TC5 - Create VPC Pair without state and deploy flag (defaults)
- name: MERGED - TC5 - MERGED - Create VPC Pair with defaults
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    config: "{{ dcnm_vpc_pair_minimal_conf }}"
  register: result
  tags: merged

- name: MERGED - TC5 - ASSERT - Check if changed flag is true
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 1'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 1'
  tags: merged

- name: MERGED - TC5 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: merged

# - name: MERGED - TC5 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   tags: merged

# TC5b - Delete VPC Pair after defaults test
- name: MERGED - TC5b - DELETED - Delete VPC Pair after defaults test
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config:
      - peerOneId: "{{ test_data_common.sw1 }}"
        peerTwoId: "{{ test_data_common.sw2 }}"
  register: result
  tags: merged

- name: MERGED - TC5b - ASSERT - Check if deleted successfully
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 0'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 1'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: merged

# TC6 - Create VPC Pair with deploy flag as False
- name: MERGED - TC6 - Load VPC Pair No Deploy Config File
  ansible.builtin.set_fact:
    dcnm_vpc_pair_no_deploy_conf: "{{ lookup('file', '{{ test_data_merged.vpc_pair_no_deploy_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: merged

- name: MERGED - TC6 - MERGED - Create VPC Pair with deploy false
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: merged
    deploy: false
    config: "{{ dcnm_vpc_pair_no_deploy_conf }}"
  register: result
  tags: merged

- name: MERGED - TC6 - ASSERT - Check if changed flag is true and no deploy
  assert:
    that:
      - result.changed == true
      - '(result["diff"][0]["merged"] | length) == 1'
      - '(result["diff"][0]["modified"] | length) == 0'
      - '(result["diff"][0]["deleted"] | length) == 0'
      - '(result["diff"][0]["query"] | length) == 0'
      - '(result["diff"][0]["deploy"] | length) == 0'
  tags: merged

- name: MERGED - TC6 - QUERY - Get VPC pair state in NDFC
  cisco.dcnm.dcnm_vpc_pair:
    state: query
    src_fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: merged

# - name: MERGED - TC6 - ASSERT - Check response codes
#   assert:
#     that:
#       - 'item["RETURN_CODE"] == 200'
#   loop: '{{ result.response }}'
#   tags: merged

# TC7 - Test invalid configurations
- name: MERGED - TC7 - Create VPC Pair with invalid peer IP
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: merged
    config:
      - peerOneId: "invalid_ip"
        peerTwoId: "{{ test_data_common.sw2 }}"
        templateName: "vpc_pair"
        profile:
          ADMIN_STATE: true
          ALLOWED_VLANS: "all"
          DOMAIN_ID: "{{ test_data_common.vpc_domain_id | int }}"
          FABRIC_NAME: "{{ test_data_common.fabric }}"
          KEEP_ALIVE_VRF: management
          PEER1_KEEP_ALIVE_LOCAL_IP: "{{ test_data_common.peer1_ip }}"
          PEER2_KEEP_ALIVE_LOCAL_IP: "{{ test_data_common.peer2_ip }}"
  register: result
  ignore_errors: yes
  tags: merged

- name: MERGED - TC7 - ASSERT - Check invalid peer IP error
  assert:
    that:
      - result.changed == false
  tags: merged

##############################################
##                 CLEAN-UP                 ##
##############################################

- name: MERGED - END - remove VPC pairs
  cisco.dcnm.dcnm_vpc_pair:
    src_fabric: "{{ test_data_common.fabric }}"
    state: deleted
  when: IT_CONTEXT is not defined
  tags: merged
