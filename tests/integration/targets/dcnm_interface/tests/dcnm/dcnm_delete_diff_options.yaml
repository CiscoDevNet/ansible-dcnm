##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Put the fabric to default state
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
  register: result  

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'  
  loop: '{{ result.response }}'

- block:

##############################################
##             SETUP VARS                   ##
##############################################

    - name: Setup Internal TestCase Variables
      ansible.builtin.set_fact:
        test_data_interfaces:
          diff_options_merge1_conf_template: "templates/dcnm_delete/diff_options_merge1_conf.j2"
          diff_options_merge1_conf_file: "{{ role_path }}/files/dcnm_interface_delete_diff_options_merge1_conf.yaml"
          diff_options_merge2_conf_template: "templates/dcnm_delete/diff_options_merge2_conf.j2"
          diff_options_merge2_conf_file: "{{ role_path }}/files/dcnm_interface_delete_diff_options_merge2_conf.yaml"
          diff_options_merge3_conf_template: "templates/dcnm_delete/diff_options_merge3_conf.j2"
          diff_options_merge3_conf_file: "{{ role_path }}/files/dcnm_interface_delete_diff_options_merge3_conf.yaml"
          diff_options_delete2_conf_template: "templates/dcnm_delete/diff_options_delete2_conf.j2"
          diff_options_delete2_conf_file: "{{ role_path }}/files/dcnm_interface_delete_diff_options_delete2_conf.yaml"
          diff_options_delete3_conf_template: "templates/dcnm_delete/diff_options_delete3_conf.j2"
          diff_options_delete3_conf_file: "{{ role_path }}/files/dcnm_interface_delete_diff_options_delete3_conf.yaml"
      delegate_to: localhost

    - name: Create Interface Config Files using J2 Templates
      ansible.builtin.template:
        src: "{{ test_data_interfaces[item ~ '_conf_template'] }}"
        dest: "{{ test_data_interfaces[item ~ '_conf_file'] }}"
      with_items:
        - diff_options_merge1
        - diff_options_merge2
        - diff_options_merge3
        - diff_options_delete2
        - diff_options_delete3
      delegate_to: localhost

##############################################
##                MERGE 1                   ##
##############################################

    - name: Load Interface Config File - Merge 1
      ansible.builtin.set_fact:
        dcnm_interface_diff_options_merge1_conf: "{{ lookup('file', test_data_interfaces.diff_options_merge1_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Put Parent Interface for Sub-Interface into routed mode
      cisco.dcnm.dcnm_interface:
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: "{{ test_data_common.parent_intf1 }}"
            type: eth
            switch:
              - "{{ test_data_common.switch1 }}"
            deploy: false
            profile:
              admin_state: true
              mode: routed
              description: "Parent Interface for Sub-Interface test"

    - name: Create interfaces to check various delete form 1
      cisco.dcnm.dcnm_interface: &delete_diff_merge1
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_diff_options_merge1_conf }}"
      register: result

    - name: QUERY - Get interface state in NDFC (diff options merge 1)
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_diff_options_merge1_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify interface state in NDFC (diff options merge 1)
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.diff_options_merge1_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
      delegate_to: localhost

##############################################
##              DELETE 1                    ##
##############################################

    - name: Delete all interfaces form 1
      cisco.dcnm.dcnm_interface:
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: deleted                        # only choose form [merged, replaced, deleted, overridden,query]
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 4'
          - '(result["diff"][0]["replaced"] | length) != 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) != 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##                MERGE 2                   ##
##############################################

    - name: Load Interface Config File - Merge 2
      ansible.builtin.set_fact:
        dcnm_interface_diff_options_merge2_conf: "{{ lookup('file', test_data_interfaces.diff_options_merge2_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Put Parent Interface for Sub-Interface into routed mode
      cisco.dcnm.dcnm_interface:
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: "{{ test_data_common.parent_intf1 }}"
            type: eth
            switch:
              - "{{ test_data_common.switch1 }}"
            deploy: false
            profile:
              admin_state: true
              mode: routed
              description: "Parent Interface for Sub-Interface test"

    - name: Create all interfaces to check delete form 2
      cisco.dcnm.dcnm_interface: &delete_diff_merge2
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_diff_options_merge2_conf }}"
      register: result

    - name: QUERY - Get interface state in NDFC (diff options merge 2)
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_diff_options_merge2_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify interface state in NDFC (diff options merge 2)
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.diff_options_merge2_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
      delegate_to: localhost

##############################################
##              DELETE 2                    ##
##############################################

    - name: Load Interface Config File - Delete 2
      ansible.builtin.set_fact:
        dcnm_interface_diff_options_delete2_conf: "{{ lookup('file', test_data_interfaces.diff_options_delete2_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Delete all interfaces form 2
      cisco.dcnm.dcnm_interface:
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: deleted                        # only choose form [merged, replaced, deleted, overridden,query]
        config: "{{ dcnm_interface_diff_options_delete2_conf }}"
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 4'
          - '(result["diff"][0]["replaced"] | length) != 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##                MERGE 3                   ##
##############################################

    - name: Load Interface Config File - Merge 3
      ansible.builtin.set_fact:
        dcnm_interface_diff_options_merge3_conf: "{{ lookup('file', test_data_interfaces.diff_options_merge3_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Put Parent Interface for Sub-Interface into routed mode
      cisco.dcnm.dcnm_interface:
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: "{{ test_data_common.parent_intf1 }}"
            type: eth
            switch:
              - "{{ test_data_common.switch1 }}"
            deploy: false
            profile:
              admin_state: true
              mode: routed
              description: "Parent Interface for Sub-Interface test"

    - name: Create all interfaces to check delete form 3
      cisco.dcnm.dcnm_interface: &delete_diff_merge3
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_diff_options_merge3_conf }}"
      register: result

    - name: QUERY - Get interface state in NDFC (diff options merge 3)
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_diff_options_merge3_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify interface state in NDFC (diff options merge 3)
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.diff_options_merge3_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
      delegate_to: localhost

##############################################
##              DELETE 3                    ##
##############################################

    - name: Load Interface Config File - Delete 3
      ansible.builtin.set_fact:
        dcnm_interface_diff_options_delete3_conf: "{{ lookup('file', test_data_interfaces.diff_options_delete3_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Delete all interfaces form 3
      cisco.dcnm.dcnm_interface:
        check_deploy: false
        fabric: "{{ test_data_common.fabric }}"
        state: deleted                        # only choose form [merged, replaced, deleted, overridden,query]
        config: "{{ dcnm_interface_diff_options_delete3_conf }}"
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 4'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##             CLEANUP                      ##
##############################################

  always:

    - name: Put fabric to default state
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined
