##############################################
##               SETUP                      ##
##############################################

# This test file specfically validates fabric loopback
# interfaces that are created at fabric creation time
# for VXLAN-EVPN to SR-MPLS and MPLS LDP interconnection

# By default they are loopback101 as defined in the fabric
# settings and use the ndfc profile 'int_mpls_loopback'

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Save Data For Loopback101
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - name: lo101
        switch:
          - "{{ test_data_common.switch1 }}"
  register: lpk101_data

- name: Set Test Control Flag
  ansible.builtin.set_fact:
    run_test: True

- name: Test will not be run since Loopback101 does not appear to exist
  ansible.builtin.set_fact:
    run_test: False
  when: lpk101_data.response == []

- name: Access Policy Data If Loopack101 Data Is Available
  ansible.builtin.set_fact:
    loopback_policy: "{{ lpk101_data.response[0]['policy'] }}"
  when: lpk101_data.response != []

- name: Test will not be run since Loopback101 is not an MPLS Fabric Loopback
  ansible.builtin.set_fact:
    run_test: False
  when: (loopback_policy is defined) and (loopback_policy != 'int_mpls_loopback')

- debug: msg="Loopback 101 Data - {{ lpk101_data.response[0]['interfaces'][0]['nvPairs'] }}"
  when: run_test

- block:

##############################################
##                REPLACE                   ##
##############################################

    # Note: MPLS fabric loopback interfaces are created at fabric creation time
    # This test validates that we can modify them with the replace state

    - name: Replace MPLS fabric loopback interface (loopback101)
      cisco.dcnm.dcnm_interface: &lo_replace_lo101
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: replaced
        config:
          - name: lo101
            type: lo
            switch:
              - "{{ test_data_common.switch1 }}"
            deploy: "{{ test_data_common.deploy | bool }}"
            profile:
              admin_state: true
              mode: lo
              int_vrf: ""
              ipv4_addr: "{{ lpk101_data.response[0]['interfaces'][0]['nvPairs']['INTF_IP'] }}"
              route_tag: ""
              cmds:
                - no shutdown
              description: "MPLS Fabric loopback interface lo101 - replaced by test"
      register: result

    # - assert:
    #     that:
    #       - 'result.changed == true'
    #       - '(result["diff"][0]["merged"] | length) == 0'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 1'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

    - name: Replace MPLS fabric loopback interface (loopback101) - Idempotence
      cisco.dcnm.dcnm_interface: *lo_replace_lo101
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##                MERGE                     ##
##############################################

    # Test that we can also create new MPLS loopback interfaces

    - name: Create new MPLS loopback interface (loopback201)
      cisco.dcnm.dcnm_interface: &lo_merge_lo201
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: merged
        config:
          - name: lo201
            type: lo
            switch:
              - "{{ test_data_common.switch1 }}"
            deploy: "{{ test_data_common.deploy | bool }}"
            profile:
              admin_state: true
              mode: lo
              int_vrf: ""
              ipv4_addr: 192.168.201.1
              route_tag: ""
              cmds:
                - no shutdown
              description: "MPLS loopback interface lo201 - created by test"
      register: result

    # - assert:
    #     that:
    #       - 'result.changed == true'
    #       - '(result["diff"][0]["merged"] | length) == 1'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 0'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

    - name: Create new MPLS loopback interface (loopback201) - Idempotence
      cisco.dcnm.dcnm_interface: *lo_merge_lo201
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##             DELETE                       ##
##############################################

    - name: Delete MPLS loopback interface (loopback201)
      cisco.dcnm.dcnm_interface: &lo_delete_lo201
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: deleted
        config:
          - name: lo201
            switch:
              - "{{ test_data_common.switch1 }}"
      register: result

    # - assert:
    #     that:
    #       - 'result.changed == true'
    #       - '(result["diff"][0]["merged"] | length) == 0'
    #       - '(result["diff"][0]["deleted"] | length) == 1'
    #       - '(result["diff"][0]["replaced"] | length) == 0'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

    - name: Delete MPLS loopback interface (loopback201) - Idempotence
      cisco.dcnm.dcnm_interface: *lo_delete_lo201
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##             CLEANUP                      ##
##############################################

  when: run_test

  always:

    - name: Put fabric to default state
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: overridden
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined
