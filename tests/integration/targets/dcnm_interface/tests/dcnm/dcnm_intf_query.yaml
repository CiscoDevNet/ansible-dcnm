##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Put the fabric to default state
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
  register: result  

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'  
  loop: '{{ result.response }}'

- block:

##############################################
##             SETUP VARS                   ##
##############################################

    - name: Setup Internal TestCase Variables
      ansible.builtin.set_fact:
        test_data_interfaces:
          merge_conf_template: "templates/dcnm_intf/merge_conf.j2"
          merge_conf_file: "{{ role_path }}/files/dcnm_interface_intf_merge_conf.yaml"
          query_existing_conf_template: "templates/dcnm_intf/query_existing_conf.j2"
          query_existing_conf_file: "{{ role_path }}/files/dcnm_interface_intf_query_existing_conf.yaml"
          query_non_existing_conf_template: "templates/dcnm_intf/query_non_existing_conf.j2"
          query_non_existing_conf_file: "{{ role_path }}/files/dcnm_interface_intf_query_non_existing_conf.yaml"
      delegate_to: localhost

    - name: Create Interface Config Files using J2 Templates
      ansible.builtin.template:
        src: "{{ test_data_interfaces[item ~ '_conf_template'] }}"
        dest: "{{ test_data_interfaces[item ~ '_conf_file'] }}"
      with_items:
        - merge
        - query_existing
        - query_non_existing
      delegate_to: localhost

##############################################
##               MERGE                      ##
##############################################

    - name: Load Interface Config File
      ansible.builtin.set_fact:
        dcnm_interface_merge_conf: "{{ lookup('file', test_data_interfaces.merge_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Create a mixture of interfaces
      cisco.dcnm.dcnm_interface: &intf_merge
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_merge_conf }}"
      register: result

    # - assert:
    #     that:
    #       - 'result.changed == true'
    #       - '(result["diff"][0]["merged"] | length) == 4'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 0'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 4'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##               QUERY                      ##
##############################################

    - name: Load Query Existing Interface Config File
      ansible.builtin.set_fact:
        dcnm_interface_query_existing_conf: "{{ lookup('file', test_data_interfaces.query_existing_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Query interface details - Existing
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: query                        # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_query_existing_conf }}"
      register: result

    # - assert:
    #     that:
    #       - 'result.changed == false'
    #       - '(result["diff"][0]["merged"] | length) == 0'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 0'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 0'
    #       - '(result["diff"][0]["query"] | length) == 5'

    # - assert:
    #     that:
    #       - '(result["response"] | length) != 0'

##############################################
##               QUERY                      ##
##############################################

    - name: Load Query Non-Existing Interface Config File
      ansible.builtin.set_fact:
        dcnm_interface_query_non_existing_conf: "{{ lookup('file', test_data_interfaces.query_non_existing_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Query interface details - Non-Existing
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: query                        # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_query_non_existing_conf }}"
      register: result

    # - assert:
    #     that:
    #       - 'result.changed == false'
    #       - '(result["diff"][0]["merged"] | length) == 0'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 0'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 0'
    #       - '(result["diff"][0]["query"] | length) == 0'

    # - assert:
    #     that:
    #       - '(result["response"] | length) == 0'

##############################################
##             CLEANUP                      ##
##############################################

  always:

    - name: Put fabric to default state
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined
