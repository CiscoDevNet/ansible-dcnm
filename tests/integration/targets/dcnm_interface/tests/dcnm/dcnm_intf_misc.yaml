##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Put the fabric to default state
  cisco.dcnm.dcnm_interface:
    check_deploy: True
    fabric: "{{ ansible_it_fabric }}" 
    state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
  register: result  

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'  
  loop: '{{ result.response }}'

- block:

##############################################
##                MERGE                     ##
##############################################

    - name: Create interfaces to check delete with deploy and no deploy
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "{{ ansible_it_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: po300                       # should be of the form po<port-id>
            type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile:
              mode: trunk                     # choose from [trunk, access, l3, monitor]
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 1'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 1'
          - '(result["diff"][0]["delete_deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##                DELETE                    ##
##############################################

    - name: Delete interface with deploy set to False
      cisco.dcnm.dcnm_interface:
        fabric: "{{ ansible_it_fabric }}"
        state: deleted                        # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: po300                       # should be of the form po<port-id>
            deploy: false
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 1'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'
          - '(result["diff"][0]["delete_deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##                DELETE                    ##
##############################################

    - name: Delete interface (already marked deleted) with deploy set to True
      cisco.dcnm.dcnm_interface:
        fabric: "{{ ansible_it_fabric }}"
        check_deploy: True
        state: deleted                        # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: po300                       # should be of the form po<port-id>
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'
          - '(result["diff"][0]["delete_deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##                DELETE                    ##
##############################################

    - name: Delete interface again (already deployed) with deploy set to True
      cisco.dcnm.dcnm_interface:
        fabric: "{{ ansible_it_fabric }}"
        check_deploy: True
        state: deleted                        # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: po300                       # should be of the form po<port-id>
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'
          - '(result["diff"][0]["delete_deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##                MERGE                     ##
##############################################

    - name: Create interfaces with src fabric in monitoring mode
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "{{ ansible_ext_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: po300                       # should be of the form po<port-id>
            type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile:
              mode: trunk                     # choose from [trunk, access, l3, monitor]
      register: result
      ignore_errors: yes

    - assert:
        that:
          - '("Monitoring mode" in result["msg"])'
          - '("No changes are allowed on the fabric" in result["msg"])'
          - '("{{ ansible_ext_fabric }}" in result["msg"])'

##############################################
##                MERGE                     ##
##############################################

    - name: Create interface on a switch that is not 'managable'.
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "mmudigon-unnumbered" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: po300                       # should be of the form po<port-id>
            type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "n9kv-test-sw2"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile:
              mode: trunk                     # choose from [trunk, access, l3, monitor]
      register: result
      ignore_errors: yes

    - assert:
        that:
          - '("are not managable in Fabric" in result["msg"])'
          - '("No changes are allowed on these switches" in result["msg"])'
          - '("n9kv-test-sw2" in result["msg"])'
