##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Put the fabric to default state
  cisco.dcnm.dcnm_interface:
    check_deploy: True
    fabric: "{{ ansible_it_fabric }}" 
    state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
  register: result  

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'  
  loop: '{{ result.response }}'

- block:

##############################################
##               MERGE                      ##
##############################################

    - name: Create PC interface with profile name wrong
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "{{ ansible_it_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: po300                       # should be of the form po<port-id>
            type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile_dummy:
              mode: trunk                     # choose from [trunk, access, l3, monitor]
      register: result

    - assert:
        that:
          - 'result.failed == false'
          - 'result.changed == true'

    - name: Create PC interface with profile name in old format
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "{{ ansible_it_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: po301                       # should be of the form po<port-id>
            type: pc                          # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile_pc:
              mode: trunk                     # choose from [trunk, access, l3, monitor]
      register: result

    - assert:
        that:
          - 'result.failed == false'
          - 'result.changed == true'

    - name: Create ETH interface with profile name old format
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "{{ ansible_it_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: "{{ ansible_eth_intf2 }}"   # should be of the form eth<port-id>
            type: eth                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile_eth:
              mode: trunk                     # choose from [trunk, access, routed, monitor, epl_routed]
      register: result

    - assert:
        that:
          - 'result.failed == false'
          - 'result.changed == true'

    - name: Create sub-interface with profile name in old format
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "{{ ansible_it_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: "{{ ansible_sub_intf1 }}"   # should be of the form eth<port-id>
            type: sub_int                     # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile_sub:
              mode: subint                    # choose from [subint]
              vlan: 100                       # vlan ID [min:2, max:3967]
              ipv4_addr: 192.168.1.1          # ipv4 address for the sub-interface
              ipv4_mask_len: 24               # choose between [min:8, max:31]
      register: result

    - assert:
        that:
          - 'result.failed == false'
          - 'result.changed == true'

    - name: Create Loopback interfaces with profile name in old format
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "{{ ansible_it_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: lo100                       # should be of the form lo<port-id>
            type: lo                          # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ ansible_switch1 }}"       # provide the switch where to deploy the config
            deploy: true                      # choose from [true, false]
            profile_lo:
              mode: lo                        # choose from [lo]
              ipv4_addr: 193.168.2.1          # ipv4 address for the loopback interface
      register: result

    - assert:
        that:
          - 'result.failed == false'
          - 'result.changed == true'

    - name: Create vPC interface with profile name in old format
      cisco.dcnm.dcnm_interface:
        check_deploy: True
        fabric: "{{ ansible_it_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: vpc750                      # should be of the form vpc<port-id>
            type: vpc                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:                           # provide switches of vPC pair
              - "{{ ansible_switch1 }}"
              - "{{ ansible_switch2 }}"
            deploy: true                      # choose from [true, false]
            profile_vpc:
              mode: trunk                     # choose from [trunk, access]
      register: result

    - assert:
        that:
          - 'result.failed == false'
          - 'result.changed == true'

    - name: Create vPC interface with switch elements in old format
      cisco.dcnm.dcnm_interface: 
        check_deploy: True
        fabric: "{{ ansible_it_fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: vpc751                      # should be of the form vpc<port-id>
            type: vpc                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:                           # provide switches of vPC pair
              - ["{{ ansible_switch1 }}",
                 "{{ ansible_switch2 }}"]
            deploy: true                      # choose from [true, false]
            profile:
              mode: trunk                     # choose from [trunk, access]
      register: result

    - assert:
        that:
          - 'result.failed == false'
          - 'result.changed == true'
