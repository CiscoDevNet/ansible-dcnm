##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Put the fabric to default state
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}" 
    state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
  register: result  

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'  
  loop: '{{ result.response }}'

- block:

##############################################
##             SETUP VARS                   ##
##############################################

    - name: Setup Internal TestCase Variables
      ansible.builtin.set_fact:
        test_data_interfaces:
          merged_conf_template: "templates/dcnm_eth/merged_conf.j2"
          merged_conf_file: "{{ role_path }}/files/dcnm_interface_merged_conf.yaml"
      delegate_to: localhost

    - name: Create Interface Config Files using J2 Templates
      ansible.builtin.template:
        src: "{{ test_data_interfaces[item ~ '_conf_template'] }}"
        dest: "{{ test_data_interfaces[item ~ '_conf_file'] }}"
      with_items:
        - merged
      delegate_to: localhost

##############################################
##                MERGE                     ##
##############################################

    - name: Load Interface Config File
      ansible.builtin.set_fact:
        dcnm_interface_merged_conf: "{{ lookup('file', test_data_interfaces.merged_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Create ethernet interfaces
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}" 
        state: merged
        config: "{{ dcnm_interface_merged_conf }}"
      register: result

    - name: Get interface state from ndfc
      cisco.dcnm.dcnm_interface:
        fabric: "{{ test_data_common.fabric }}"
        state: query
        config: "{{ dcnm_interface_merged_conf }}"
      register: result
    
    - name: print
      debug:
        var: result

    - meta: end_play

    # - assert:
    #     that:
    #       - 'result.changed == true'
    #       - '(result["diff"][0]["merged"] | length) == 5'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 0'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 4'

    # - assert:
    #     that:
    #       - 'item["RETURN_CODE"] == 200'  
      # loop: '{{ result.response }}'

##############################################
##              DELETE                      ##
##############################################

    - name: Delete ethernet interfaces
      cisco.dcnm.dcnm_interface: &eth_delete
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}" 
        state: deleted                        # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_merged_conf }}"
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 5'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

    - name: Delete ethernet interfaces - Idempotence
      cisco.dcnm.dcnm_interface: *eth_delete
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##                MERGE                     ##
##############################################

    - name: Create ethernet interfaces
      cisco.dcnm.dcnm_interface: 
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}" 
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: "{{ test_data_common.eth_intf7 }}"   # should be of the form eth<port-id>
            type: eth                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ test_data_common.switch1 }}"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile:
              admin_state: true               # choose from [true, false]
              mode: trunk                     # choose from [trunk, access, routed, monitor, epl_routed]
              speed: 'Auto'                   # choose from ['Auto', '100Mb', '1Gb', '10Gb', '25Gb', '40Gb', '100Gb' ]
              bpdu_guard: true                # choose from [true, false, 'no']
              port_type_fast: true            # choose from [true, false]
              mtu: jumbo                      # choose from [default, jumbo]
              allowed_vlans: none             # choose from [none, all, vlan range] 
              cmds:                           # Freeform config
                - no shutdown
              description: "eth interface  acting as trunk"
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 1'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##              DELETE                      ##
##############################################

    - name: Delete a single ethernet interface
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}" 
        state: deleted                        # only choose form [merged, replaced, deleted, overridden, query]
        config:
          - name: "{{ test_data_common.eth_intf7 }}"   # should be of the form eth<port-id>
            type: eth                         # choose from this list [pc, vpc, sub_int, lo, eth, svi]
            switch:
              - "{{ test_data_common.switch1 }}"       # provide the switch information where the config is to be deployed
            deploy: true                      # choose from [true, false]
            profile:
              admin_state: true               # choose from [true, false]
              mode: trunk                     # choose from [trunk, access, routed, monitor, epl_routed]
              speed: 'Auto'                   # choose from ['Auto', '100Mb', '1Gb', '10Gb', '25Gb', '40Gb', '100Gb' ]
              bpdu_guard: true                # choose from [true, false, no]
              port_type_fast: true            # choose from [true, false]
              mtu: jumbo                      # choose from [default, jumbo]
              allowed_vlans: none             # choose from [none, all, vlan range] 
              cmds:                           # Freeform config
                - no shutdown
              description: "eth interface  acting as trunk"
      register: result



    # - assert:
    #     that:
    #       - 'result.changed == true'
    #       - '(result["diff"][0]["merged"] | length) == 0'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 1'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 0'

    # - assert:
    #     that:
    #       - 'item["RETURN_CODE"] == 200'  
    #   loop: '{{ result.response }}'

##############################################
##             CLEANUP                      ##
##############################################

  always:

    - name: Put fabric to default state
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}" 
        state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined
