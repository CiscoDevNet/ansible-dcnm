##############################################
##               SETUP                      ##
##############################################

# This test file specfically validates fabric loopback
# interfaces that are created at fabric creation time.
# Typically they are loopback0 or loopback1 and use
# the ndfc profile 'int_fabric_loopback_11_1'

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Put the fabric to default state
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: overridden
  register: result  

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'  
  loop: '{{ result.response }}'

- name: Save Data For Loopback0
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - name: lo0
        switch:
          - "{{ test_data_common.switch2 }}"
  register: lpk0_data

- name: Save Data For Loopback1
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - name: lo1
        switch:
          - "{{ test_data_common.switch2 }}"
  register: lpk1_data

- debug: msg="Loopback 0 Data - {{ lpk0_data.response[0]['interfaces'][0]['nvPairs'] }}"
- debug: msg="Loopback 1 Data - {{ lpk1_data.response[0]['interfaces'][0]['nvPairs'] }}"

- block:

##############################################
##             SETUP VARS                   ##
##############################################

    - name: Setup Internal TestCase Variables
      ansible.builtin.set_fact:
        test_data_interfaces:
          lo0_replace_conf_template: "templates/dcnm_lo/fabric_lo0_replace_conf.j2"
          lo0_replace_conf_file: "{{ role_path }}/files/dcnm_interface_lo_fabric_lo0_replace_conf.yaml"
          lo1_replace_conf_template: "templates/dcnm_lo/fabric_lo1_replace_conf.j2"
          lo1_replace_conf_file: "{{ role_path }}/files/dcnm_interface_lo_fabric_lo1_replace_conf.yaml"
      delegate_to: localhost

    - name: Create Interface Config Files using J2 Templates
      ansible.builtin.template:
        src: "{{ test_data_interfaces[item ~ '_conf_template'] }}"
        dest: "{{ test_data_interfaces[item ~ '_conf_file'] }}"
      with_items:
        - lo0_replace
        - lo1_replace
      delegate_to: localhost

##############################################
##                REPLACE                   ##
##############################################

    # Note: Fabric loopback interfaces are created at fabric creation time
    # This test validates that we can modify them with the replace state

    - name: Load Loopback0 Replace Interface Config File
      ansible.builtin.set_fact:
        dcnm_interface_lo0_replace_conf: "{{ lookup('file', test_data_interfaces.lo0_replace_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Replace fabric loopback interface (loopback0)
      cisco.dcnm.dcnm_interface: &lo_replace_lo0
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: replaced
        config: "{{ dcnm_interface_lo0_replace_conf }}"
      register: result

    - name: ASSERT - Verify fabric loopback interface (loopback0) replace results
      assert:
        that:
          - 'result.changed == true'
          - 'item["RETURN_CODE"] == 200'
        fail_msg: "Replace operation for loopback0 failed - {{ result }}"
        success_msg: "Replace operation for loopback0 succeeded"
      loop: '{{ result.response }}'

    - name: QUERY - Get fabric loopback interface (loopback0) state in NDFC
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_lo0_replace_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify fabric loopback interface (loopback0) state in NDFC
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.lo0_replace_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
        switch_ip_sn_mapping: "{{ test_data_common.sw_sn }}"
      delegate_to: localhost

    - name: Load Loopback1 Replace Interface Config File
      ansible.builtin.set_fact:
        dcnm_interface_lo1_replace_conf: "{{ lookup('file', test_data_interfaces.lo1_replace_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Replace fabric loopback interface (loopback1)
      cisco.dcnm.dcnm_interface: &lo_replace_lo1
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: replaced
        config: "{{ dcnm_interface_lo1_replace_conf }}"
      register: result

    - name: ASSERT - Verify fabric loopback interface (loopback1) replace results
      assert:
        that:
          - 'result.changed == true'
          - 'item["RETURN_CODE"] == 200'
        fail_msg: "Replace operation for loopback1 failed - {{ result }}"
        success_msg: "Replace operation for loopback1 succeeded"
      loop: '{{ result.response }}'

    - name: QUERY - Get fabric loopback interface (loopback1) state in NDFC
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_lo1_replace_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify fabric loopback interface (loopback1) state in NDFC
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.lo1_replace_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
        switch_ip_sn_mapping: "{{ test_data_common.sw_sn }}"
      delegate_to: localhost

    - name: Replace fabric loopback interface (loopback0) - Idempotence
      cisco.dcnm.dcnm_interface: *lo_replace_lo0
      register: result

    - name: ASSERT - Verify fabric loopback interface (loopback0) idempotence results
      assert:
        that:
          - 'result.changed == false'
          - 'result.response is defined'
          - 'result.response | length >= 0'  # Allow empty response for idempotence
        fail_msg: "Idempotence check for loopback0 failed - {{ result }}"
        success_msg: "Idempotence check for loopback0 succeeded"
      # Don't loop over response items for idempotence check as they may be empty

    - name: Replace fabric loopback interface (loopback1) - Idempotence
      cisco.dcnm.dcnm_interface: *lo_replace_lo1
      register: result

    - name: ASSERT - Verify fabric loopback interface (loopback1) idempotence results
      assert:
        that:
          - 'result.changed == false'
          - 'result.response is defined'
          - 'result.response | length >= 0'  # Allow empty response for idempotence
        fail_msg: "Idempotence check for loopback1 failed - {{ result }}"
        success_msg: "Idempotence check for loopback1 succeeded"
      # Don't loop over response items for idempotence check as they may be empty

##############################################
##             CLEANUP                      ##
##############################################

  always:

    - name: Put fabric to default state
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: overridden
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined
