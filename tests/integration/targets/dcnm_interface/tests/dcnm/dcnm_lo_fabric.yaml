##############################################
##               SETUP                      ##
##############################################

# This test file specfically validates fabric loopback
# interfaces that are created at fabric creation time.
# Typically they are loopback0 or loopback1 and use
# the ndfc profile 'int_fabric_loopback_11_1'

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Put the fabric to default state
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: overridden
  register: result  

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'  
  loop: '{{ result.response }}'

- name: Save Data For Loopback0
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - name: lo0
        switch:
          - "{{ test_data_common.switch2 }}"
  register: lpk0_data

- name: Save Data For Loopback1
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: query
    config:
      - name: lo1
        switch:
          - "{{ test_data_common.switch2 }}"
  register: lpk1_data

- debug: msg="Loopback 0 Data - {{ lpk0_data.response[0]['interfaces'][0]['nvPairs'] }}"
- debug: msg="Loopback 1 Data - {{ lpk1_data.response[0]['interfaces'][0]['nvPairs'] }}"

- block:

##############################################
##                REPLACE                   ##
##############################################

    # Note: Fabric loopback interfaces are created at fabric creation time
    # This test validates that we can modify them with the replace state

    - name: Replace fabric loopback interface (loopback0)
      cisco.dcnm.dcnm_interface: &lo_replace_lo0
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: replaced
        config:
          - name: lo0
            type: lo
            switch:
              - "{{ test_data_common.switch2 }}"
            deploy: "{{ test_data_common.deploy | bool }}"
            profile:
              admin_state: true
              mode: lo
              int_vrf: ""
              ipv4_addr: "{{ lpk0_data.response[0]['interfaces'][0]['nvPairs']['INTF_IP'] }}"
              route_tag: ""
              cmds:
                - no shutdown
              description: "Fabric loopback interface lo0 - replaced by test"
      register: result

    # - assert:
    #     that:
    #       - 'result.changed == true'
    #       - '(result["diff"][0]["merged"] | length) == 0'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 1'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

    - name: Replace fabric loopback interface (loopback1)
      cisco.dcnm.dcnm_interface: &lo_replace_lo1
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: replaced
        config:
          - name: lo1
            type: lo
            switch:
              - "{{ test_data_common.switch2 }}"
            deploy: "{{ test_data_common.deploy | bool }}"
            profile:
              admin_state: true
              mode: lo
              int_vrf: ""
              ipv4_addr: "{{ lpk1_data.response[0]['interfaces'][0]['nvPairs']['INTF_IP'] }}"
              route_tag: ""
              cmds:
                - no shutdown
              description: "Fabric loopback interface lo1 - replaced by test"
      register: result

    # - assert:
    #     that:
    #       - 'result.changed == true'
    #       - '(result["diff"][0]["merged"] | length) == 0'
    #       - '(result["diff"][0]["deleted"] | length) == 0'
    #       - '(result["diff"][0]["replaced"] | length) == 1'
    #       - '(result["diff"][0]["overridden"] | length) == 0'
    #       - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

    - name: Replace fabric loopback interface (loopback0) - Idempotence
      cisco.dcnm.dcnm_interface: *lo_replace_lo0
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

    - name: Replace fabric loopback interface (loopback1) - Idempotence
      cisco.dcnm.dcnm_interface: *lo_replace_lo1
      register: result

    - assert:
        that:
          - 'result.changed == false'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["replaced"] | length) == 0'
          - '(result["diff"][0]["overridden"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 0'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'

##############################################
##             CLEANUP                      ##
##############################################

  always:

    - name: Put fabric to default state
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: overridden
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined
