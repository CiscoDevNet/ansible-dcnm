##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f dcnm_intf.log

- name: Delete any existing ST FEX interfaces (cleanup)
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config:
      - name: po150
        switch:
          - "{{ test_data_common.switch1 }}"
      - name: po151
        switch:
          - "{{ test_data_common.switch1 }}"
      - name: po152
        switch:
          - "{{ test_data_common.switch1 }}"
      - name: po155
        switch:
          - "{{ test_data_common.switch1 }}"
          - "{{ test_data_common.switch2 }}"
  register: result
  ignore_errors: true

- name: Put the fabric to default state
  cisco.dcnm.dcnm_interface:
    check_deploy: "{{ test_data_common.check_deploy | bool }}"
    fabric: "{{ test_data_common.fabric }}"
    state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
  register: result  

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'  
  loop: '{{ result.response }}'

- block:

##############################################
##             SETUP VARS                   ##
##############################################

    - name: Setup Internal TestCase Variables
      ansible.builtin.set_fact:
        test_data_interfaces:
          merge_conf_template: "templates/dcnm_st_fex/merge_conf.j2"
          merge_conf_file: "{{ role_path }}/files/dcnm_interface_st_fex_merge_conf.yaml"
          merge_po150_conf_template: "templates/dcnm_st_fex/merge_po150_conf.j2"
          merge_po150_conf_file: "{{ role_path }}/files/dcnm_interface_st_fex_merge_po150_conf.yaml"
          merge_po151_conf_template: "templates/dcnm_st_fex/merge_po151_conf.j2"
          merge_po151_conf_file: "{{ role_path }}/files/dcnm_interface_st_fex_merge_po151_conf.yaml"
          merge_po155_conf_template: "templates/dcnm_st_fex/merge_po155_conf.j2"
          merge_po155_conf_file: "{{ role_path }}/files/dcnm_interface_st_fex_merge_po155_conf.yaml"
          merge_po151_update_conf_template: "templates/dcnm_st_fex/merge_po151_update_conf.j2"
          merge_po151_update_conf_file: "{{ role_path }}/files/dcnm_interface_st_fex_merge_po151_update_conf.yaml"
      delegate_to: localhost

    - name: Create Interface Config Files using J2 Templates
      ansible.builtin.template:
        src: "{{ test_data_interfaces[item ~ '_conf_template'] }}"
        dest: "{{ test_data_interfaces[item ~ '_conf_file'] }}"
      with_items:
        - merge
        - merge_po150
        - merge_po151
        - merge_po155
        - merge_po151_update
      delegate_to: localhost

##############################################
##                MERGE                     ##
##############################################

    - name: Load Interface Config Files
      ansible.builtin.set_fact:
        dcnm_interface_merge_conf: "{{ lookup('file', test_data_interfaces.merge_conf_file) | from_yaml }}"
        dcnm_interface_merge_po150_conf: "{{ lookup('file', test_data_interfaces.merge_po150_conf_file) | from_yaml }}"
        dcnm_interface_merge_po151_conf: "{{ lookup('file', test_data_interfaces.merge_po151_conf_file) | from_yaml }}"
        dcnm_interface_merge_po155_conf: "{{ lookup('file', test_data_interfaces.merge_po155_conf_file) | from_yaml }}"
        dcnm_interface_merge_po151_update_conf: "{{ lookup('file', test_data_interfaces.merge_po151_update_conf_file) | from_yaml }}"
      delegate_to: localhost

    - name: Create ST FEX interfaces w/o optional parameters
      cisco.dcnm.dcnm_interface: &fex_merge
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_merge_po150_conf }}"

      register: result

    - name: ASSERT - Verify ST FEX interface creation results (po150)
      assert:
        that:
          - 'result.changed == true'
          - 'item["RETURN_CODE"] == 200'
        fail_msg: "Creation of ST FEX interface po150 failed - {{ result }}"
        success_msg: "Creation of ST FEX interface po150 succeeded"
      loop: '{{ result.response }}'

    - name: QUERY - Get ST FEX interface state in NDFC (po150)
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_merge_po150_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify ST FEX interface state in NDFC (po150)
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.merge_po150_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
      delegate_to: localhost

    - name: Create ST FEX interfaces w/o optional parameters - Idempotence
      cisco.dcnm.dcnm_interface: *fex_merge
      register: result

    - name: ASSERT - Check changed flag is false and return codes for idempotence
      assert:
        that:
          - 'result.changed == false'
          - 'result.response is defined'
          - 'result.response | length >= 0'  # Allow empty response for idempotence
      # Don't loop over response items for idempotence check as they may be empty

##############################################
##                MERGE                     ##
##############################################

    - name: Create ST FEX interfaces including optional parameters
      cisco.dcnm.dcnm_interface: &fex_merge2
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_merge_po151_conf }}"
      register: result

    - name: ASSERT - Verify ST FEX interface creation results (po151)
      assert:
        that:
          - 'result.changed == true'
          - 'item["RETURN_CODE"] == 200'
        fail_msg: "Creation of ST FEX interface po151 failed - {{ result }}"
        success_msg: "Creation of ST FEX interface po151 succeeded"
      loop: '{{ result.response }}'

    - name: QUERY - Get ST FEX interface state in NDFC (po151)
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_merge_po151_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify ST FEX interface state in NDFC (po151)
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.merge_po151_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
      delegate_to: localhost

    - name: Create ST FEX interfaces including optional parameters - Idempotence
      cisco.dcnm.dcnm_interface: *fex_merge2
      register: result

    - name: ASSERT - Check changed flag is false and return codes for idempotence
      assert:
        that:
          - 'result.changed == false'
          - 'result.response is defined'
          - 'result.response | length >= 0'  # Allow empty response for idempotence
      # Don't loop over response items for idempotence check as they may be empty

##############################################
##                MERGE                     ##
##############################################

    - name: Merge ST FEX interface
      cisco.dcnm.dcnm_interface: &fex_merge3
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_merge_po151_update_conf }}"
      register: result

    - name: ASSERT - Verify ST FEX interface merge results (po151 update)
      assert:
        that:
          - 'result.changed == true'
          - 'item["RETURN_CODE"] == 200'
        fail_msg: "Merge of ST FEX interface po151 failed - {{ result }}"
        success_msg: "Merge of ST FEX interface po151 succeeded"
      loop: '{{ result.response }}'

    - name: QUERY - Get ST FEX interface state in NDFC (po151 update)
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_merge_po151_update_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify ST FEX interface state in NDFC (po151 update)
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.merge_po151_update_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
      delegate_to: localhost

##############################################
##                MERGE                     ##
##############################################

    - name: Create ST FEX interfaces - multiple switches
      cisco.dcnm.dcnm_interface: &fex_merge4
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: merged                         # only choose form [merged, replaced, deleted, overridden, query]
        config: "{{ dcnm_interface_merge_po155_conf }}"
      register: result

    - name: ASSERT - Verify ST FEX interface creation results (po155)
      assert:
        that:
          - 'result.changed == true'
          - 'item["RETURN_CODE"] == 200'
        fail_msg: "Creation of ST FEX interface po155 failed - {{ result }}"
        success_msg: "Creation of ST FEX interface po155 succeeded"
      loop: '{{ result.response }}'

    - name: QUERY - Get ST FEX interface state in NDFC (po155)
      cisco.dcnm.dcnm_interface:
        state: query
        fabric: "{{ test_data_common.fabric }}"
        config: "{{ dcnm_interface_merge_po155_conf }}"
      register: verify_result

    - name: VALIDITY CHECK - Verify ST FEX interface state in NDFC (po155)
      cisco.dcnm.tests.integration.ndfc_interface_validate:
        config_path: "{{ test_data_interfaces.merge_po155_conf_file }}"
        ndfc_data: "{{ verify_result }}"
        test_data: "{{ test_data_common }}"
      delegate_to: localhost

##############################################
##             CLEANUP                      ##
##############################################

  always:

    - name: Put fabric to default state
      cisco.dcnm.dcnm_interface:
        check_deploy: "{{ test_data_common.check_deploy | bool }}"
        fabric: "{{ test_data_common.fabric }}"
        state: overridden                     # only choose form [merged, replaced, deleted, overridden, query]
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'  
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined
