##############################################
##                 SETUP                    ##
##############################################

- name: DELETED - Verify if fabric - Fabric1 is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ test_fabric }}"
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: DELETED - setup - Clean up any existing networks
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: deleted

- name: DELETED - Create, Attach and Deploy Single Network with multiple switch Attach
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - net_name: ansible-net13
      vrf_name: Tenant-1
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.30.1/24'
          vlanId: 1504
          tag: 14345
          mtu: 1500
          attach:
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw1_serial }}"
              switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
              torPorts: []
              untagged: false
              vlan: 1504
              deploy: true
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw2_serial }}"
              switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
              untagged: false
              vlan: 1504
              deploy: true
  register: result

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[1].value == "SUCCESS"'

###############################################
###                DELETED                   ##
###############################################

- name: DELETED - Delete Single Network with deleted state
  cisco.dcnm.dcnm_networkv2: &conf
    fabric: "{{ test_fabric }}"
    state: deleted
    config:
    - net_name: ansible-net13
      net_id: 7005
      vrf_name: Tenant-1
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.30.1/24'
          vlanId: 1504
          tag: 14345
          mtu: 1500
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[1].MESSAGE == "OK"'
    - 'result.response[2].MESSAGE == "OK"'
    - 'result.response[2].METHOD == "DELETE"'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[1].value == "SUCCESS"'

- name: DELETED - conf - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - Create, Attach and Deploy Multiple Network with single switch Attach
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - net_name: ansible-net13
      vrf_name: Tenant-1
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.30.1/24'
          vlanId: 1503
          tag: 14345
          mtu: 1500
          attach:
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw1_serial }}"
              switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
              torPorts: []
              untagged: false
              vlan: 1503
              deploy: true
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7002
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.40.1/24'
          vlanId: 151
          tag: 14346
          mtu: 1500
          attach:
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw2_serial }}"
              switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
              untagged: false
              vlan: 151
              deploy: true
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[1].value == "SUCCESS"'

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
    - "query_result.response[1].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- name: DELETED - Delete Single Network with deleted state and verify other network is still there
  cisco.dcnm.dcnm_networkv2: &conf1
    fabric: "{{ test_fabric }}"
    state: deleted
    config:
    - net_name: ansible-net12
      net_id: 7002
      vrf_name: Tenant-2
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.40.1/24'
          vlanId: 151
          tag: 14346
          mtu: 1500
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[1].MESSAGE == "OK"'
    - 'result.response[2].MESSAGE == "OK"'
    - 'result.response[2].METHOD == "DELETE"'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'


- name: DELETED - conf - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf1
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - Delete the other Single Network with deleted state and verify no network is present now
  cisco.dcnm.dcnm_networkv2: &conf2
    fabric: "{{ test_fabric }}"
    state: deleted
    config:
    - net_name: ansible-net13
      net_id: 7005
      vrf_name: Tenant-1
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.30.1/24'
          vlanId: 1503
          tag: 14345
          mtu: 1500
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[1].MESSAGE == "OK"'
    - 'result.response[2].MESSAGE == "OK"'
    - 'result.response[2].METHOD == "DELETE"'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'

- name: DELETED - conf - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf2
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - Create, Attach and Deploy Multiple Network with single switch Attach
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - net_name: ansible-net13
      vrf_name: Tenant-1
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.30.1/24'
          vlanId: 1503
          tag: 14345
          mtu: 1500
          attach:
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw1_serial }}"
              switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
              torPorts: []
              untagged: false
              vlan: 1503
              deploy: true
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7002
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.40.1/24'
          vlanId: 151
          tag: 14346
          mtu: 1500
          attach:
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw2_serial }}"
              switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
              untagged: false
              vlan: 151
              deploy: true
  register: result

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
    - "query_result.response[1].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[1].value == "SUCCESS"'

- name: DELETED - Delete all the networks
  cisco.dcnm.dcnm_networkv2: &conf3
    fabric: "{{ test_fabric }}"
    state: deleted
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - 'result.response[3].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[1].MESSAGE == "OK"'
    - 'result.response[2].MESSAGE == "OK"'
    - 'result.response[3].MESSAGE == "OK"'
    - 'result.response[3].METHOD == "DELETE"'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[1].value == "SUCCESS"'

- name: DELETED - conf3 - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf3
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - Create L2 only networks along with all dhcp, arp options
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - net_name: ansible-net13
      net_id: 7009
      vrf_name: NA
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.30.1/24'
          tag: 14345
          mtu: 2500
          vlanId: 3509
          isLayer2Only: True
          suppressArp: True
          intfDescription: "test interface"
          vlanName: "testvlan"
          dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}
          attach:
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw1_serial }}"
              switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
              torPorts: []
              untagged: false
              deploy: true
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw2_serial }}"
              switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
              torPorts: []
              untagged: false
              deploy: true
  register: result

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[1].value == "SUCCESS"'

- name: DELETED - setup - Clean up l2_only existing network
  cisco.dcnm.dcnm_networkv2: &conf4
    fabric: "{{ test_fabric }}"
    state: deleted
    config:
    - net_name: ansible-net13
      net_id: 7009
      vrf_name: NA
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.30.1/24'
          tag: 14345
          mtu: 2500
          vlanId: 3509
          isLayer2Only: True
          suppressArp: True
          intfDescription: "test interface"
          vlanName: "testvlan"
          dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}   
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[1].MESSAGE == "OK"'
    - 'result.response[2].MESSAGE == "OK"'
    - 'result.response[2].METHOD == "DELETE"'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'

- name: DELETED - conf4 - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf4
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - Create a L2 only and L3 networks along with all dhcp, arp options
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - net_name: ansible-net13
      net_id: 7009
      vrf_name: NA
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.30.1/24'
          tag: 14345
          mtu: 2500
          vlanId: 3509
          isLayer2Only: True
          suppressArp: True
          intfDescription: "test interface"
          vlanName: "testvlan"
          dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}
          attach:
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw1_serial }}"
              switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
              torPorts: []
              untagged: false
              deploy: true
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7010
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.40.1/24'
          vlanId: 151
          tag: 14346
          mtu: 1500
          attach:
            - deployment: true
              dot1QVlan: 1
              fabric: "{{ test_fabric }}"
              instanceValues: ""
              serialNumber: "{{ sw2_serial }}"
              switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
              untagged: false
              vlan: 151
              deploy: true
  register: result

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
    - "query_result.response[1].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[1].value == "SUCCESS"'

- name: DELETED - Delete all the networks
  cisco.dcnm.dcnm_networkv2: &conf5
    fabric: "{{ test_fabric }}"
    state: deleted
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - 'result.response[3].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[1].MESSAGE == "OK"'
    - 'result.response[2].MESSAGE == "OK"'
    - 'result.response[3].MESSAGE == "OK"'
    - 'result.response[3].METHOD == "DELETE"'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[1].value == "SUCCESS"'

- name: DELETED - conf5 - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf5
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

- name: DELETED - Delete Single Network with no network name
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: deleted
    config:
    - net_name:
      net_id: 7005
      vrf_name: Tenant-2
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.40.1/24'
          vlanId: 151
  register: result
  ignore_errors: yes

- assert:
    that:
    - 'result.changed == false'
    - '"Invalid parameters in playbook: net_name : Required parameter not found" in result.msg'

- name: DELETED - Delete Single Network with invalid network name which is not configured
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: deleted
    config:
    - net_name: network
      net_id: 7005
      vrf_name: Tenant-2
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        - gatewayIpAddress: '192.168.40.1/24'
          vlanId: 151
  register: result
  ignore_errors: yes

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'

###############################################
###                 CLEAN-UP                 ##
###############################################

- name: DELETED - setup - remove any networks
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: deleted
