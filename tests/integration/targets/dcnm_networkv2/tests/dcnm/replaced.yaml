##############################################
##                 SETUP                    ##
##############################################

- name: REPLACED - Verify if fabric - Fabric1 is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ test_fabric }}"
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: REPLACED - setup - Clean up any existing networks
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: deleted

- name: REPLACED - Create, Attach and Deploy Multiple Network with Switch Attach
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - net_name: ansible-net13
      vrf_name: Tenant-1
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.30.1/24'
        vlanId: 1503
        tag: 14345
        mtu: 1500
        attach:
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw1_ipaddr }}"
            switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
            torPorts: []
            untagged: false
            vlan: 1503
            deploy: true
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw2_ipaddr }}"
            switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
            untagged: false
            vlan: 1504
            deploy: true
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7002
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.40.1/24'
        vlanId: 151
        tag: 14346
        mtu: 1500
        attach:
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw2_ipaddr }}"
            switchPorts: ["{{ ansible_sw2_int3 }}", "{{ ansible_sw2_int4 }}"]
            untagged: false
            vlan: 151
            deploy: true
  register: result

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
    - "query_result.response[1].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[1].value == "SUCCESS"'

##############################################
##                REPLACED                  ##
##############################################

- name: REPLACED - Update Network using replace - Delete Attachments
  cisco.dcnm.dcnm_networkv2: &conf1
    fabric: "{{ test_fabric }}"
    state: replaced
    config:
    - net_name: ansible-net13
      vrf_name: Tenant-1
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.30.1/24'
        tag: 14345
        vlanId: 1503
        mtu: 1500
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7002
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.40.1/24'
        vlanId: 151
        tag: 14346
        mtu: 1500
  register: result

- name: Query fabric state until networkStatus transitions to NA state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('NA')"
    - "query_result.response[1].parent.networkStatus is search('NA')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[1].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[2].value == "SUCCESS"'

- name: REPLACED - conf1 - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf1
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'

- name: REPLACED - Update Network using replace - Create Attachments
  cisco.dcnm.dcnm_networkv2: &conf2
    fabric: "{{ test_fabric }}"
    state: replaced
    config:
    - net_name: ansible-net13
      vrf_name: Tenant-1
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.30.1/24'
        vlanId: 1503
        tag: 14345
        mtu: 1500
        attach:
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw1_ipaddr }}"
            switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
            torPorts: []
            untagged: false
            vlan: 1503
            deploy: true
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw2_ipaddr }}"
            switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
            untagged: false
            vlan: 1504
            deploy: true
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7002
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.40.1/24'
        vlanId: 151
        tag: 14346
        mtu: 1500
        attach:
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw2_ipaddr }}"
            switchPorts: ["{{ ansible_sw2_int3 }}", "{{ ansible_sw2_int4 }}"]
            untagged: false
            vlan: 151
            deploy: true
  register: result

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
    - "query_result.response[1].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[1].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[2].value == "SUCCESS"'

- name: REPLACED - conf2 - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf2
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'

- name: REPLACED - setup - remove any networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: deleted

- name: REPLACED - Create, Attach and Deploy L2, L3 Network with Switch Attach
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - net_name: ansible-net13
      vrf_name: NA
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.30.1/24'
        tag: 14345
        mtu: 2500
        vlanId: 150
        isLayer2Only: True
        suppressArp: True
        intfDescription: "test interface"
        vlanName: "testvlan"
        dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}
        attach:
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw1_ipaddr }}"
            switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
            torPorts: []
            untagged: false
            deploy: true
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw2_ipaddr }}"
            switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
            torPorts: []
            untagged: false
            deploy: true
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7002
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.40.1/24'
        vlanId: 151
        tag: 14346
        mtu: 1500
        dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}
        attach:
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw2_ipaddr }}"
            switchPorts: ["{{ ansible_sw2_int3 }}", "{{ ansible_sw2_int4 }}"]
            untagged: false
            vlan: 151
            deploy: true
  register: result

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
    - "query_result.response[1].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[1].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[2].value == "SUCCESS"'

- name: REPLACED - Update L2, L3 Networks using replace - Delete Attachments
  cisco.dcnm.dcnm_networkv2: &conf3
    fabric: "{{ test_fabric }}"
    state: replaced
    config:
    - net_name: ansible-net13
      vrf_name: NA
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.30.1/24'
        tag: 14345
        mtu: 2500
        vlanId: 150
        isLayer2Only: True
        suppressArp: True
        intfDescription: "test interface"
        vlanName: "testvlan"
        dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7002
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.40.1/24'
        vlanId: 151
        tag: 14346
        mtu: 1500
        dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}
  register: result

- name: Query fabric state until networkStatus transitions to NA state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('NA')"
    - "query_result.response[1].parent.networkStatus is search('NA')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[1].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[2].value == "SUCCESS"'

- name: REPLACED - conf3 - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf3
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'

- name: REPLACED - Update L2, L3 Networks using replace - Create Attachments
  cisco.dcnm.dcnm_networkv2: &conf4
    fabric: "{{ test_fabric }}"
    state: replaced
    config:
    - net_name: ansible-net13
      vrf_name: NA
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.30.1/24'
        tag: 14345
        mtu: 2500
        vlanId: 150
        isLayer2Only: True
        suppressArp: True
        intfDescription: "test interface"
        vlanName: "testvlan"
        dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}
        attach:
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw1_ipaddr }}"
            switchPorts: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
            torPorts: []
            untagged: false
            deploy: true
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw2_ipaddr }}"
            switchPorts: ["{{ ansible_sw2_int1 }}", "{{ ansible_sw2_int2 }}"]
            torPorts: []
            untagged: false
            deploy: true
    - net_name: ansible-net12
      vrf_name: Tenant-2
      net_id: 7002
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      network_template_config:
        gatewayIpAddress: '192.168.40.1/24'
        vlanId: 151
        tag: 14346
        mtu: 1500
        dhcpServers: {"dhcpServers":[{"srvrAddr":"1.1.1.1","srvrVrf":"vrf1"},{"srvrAddr":"2.2.2.2","srvrVrf":"vrf2"}]}
        attach:
          - deployment: true
            dot1QVlan: 1
            fabric: "{{ test_fabric }}"
            instanceValues: ""
            ipAddress: "{{ sw2_ipaddr }}"
            switchPorts: ["{{ ansible_sw2_int3 }}", "{{ ansible_sw2_int4 }}"]
            untagged: false
            vlan: 151
            deploy: true
  register: result

- name: Query fabric state until networkStatus transitions to DEPLOYED state
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED')"
    - "query_result.response[1].parent.networkStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[1].value == "SUCCESS"'
    - '(result.response[0].DATA|dict2items)[2].value == "SUCCESS"'

- name: REPLACED - conf4 - Idempotence
  cisco.dcnm.dcnm_networkv2: *conf4
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'

##############################################
##                 CLEAN-UP                 ##
##############################################

- name: REPLACED - setup - remove any networks
  cisco.dcnm.dcnm_networkv2:
    fabric: "{{ test_fabric }}"
    state: deleted
