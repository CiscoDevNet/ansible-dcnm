################################################################################
# TESTCASE:
#
# merged_global_config
#
# Description:
#
# This test case verifies Ansible merged state for dcnm_image_upgrade.
# All switches use the same image policy and the configuration specifics
# are all specified in the global config stanza.
#
# To minimize runtime, we use preserve_config: True during SETUP
################################################################################
#
################################################################################
# RUNTIME
################################################################################
#
# Recent run times (MM:SS.ms):
# 13:07.88
# 14:02.90
# 13:12.97
#
################################################################################
# STEPS
################################################################################
#
# SETUP (these should be run prior to running this playbook)
#  1. Run 00_setup_create_fabric.yaml
#  2. Run 01_setup_add_switches_to_fabric 
#  3. Run 02_setup_replace_image_policies
# PRE_TEST (this playbook)
#  4. MERGED - PRE_TEST - Upgrade all switches using global config.
#  5. MERGED - PRE_TEST - Wait for controller response for all three switches.
# TEST (this playbook)
#  6. MERGED - TEST - global_config - test idempotence.
# CLEANUP
#  7. Run 03_cleanup_remove_devices_from_fabric.yaml
#  8. Run 04_cleanup_delete_image_policies.yaml
#  9. Run 05_cleanup_delete_fabric.yaml
#
################################################################################
# REQUIREMENTS
################################################################################
#
# Example vars for dcnm_image_upgrade integration tests
# Add to cisco/dcnm/playbooks/dcnm_tests.yaml)
#
# vars:
#   # This testcase field can run any test in the tests directory for the role
#   testcase: merged_global_config
#    fabric_name: LAN_Classic_Fabric
#    switch_username: admin
#    switch_password: "Cisco!2345"
#    leaf1: 192.168.1.2
#    leaf2: 192.168.1.3
#    spine1: 192.168.1.4
#    # for dcnm_image_policy and dcnm_image_upgrade roles
#    image_policy_1: "KR5M"
#    image_policy_2: "NR3F"
#    # for dcnm_image_policy role
#    epld_image_1: n9000-epld.10.2.5.M.img
#    epld_image_2: n9000-epld.10.3.1.F.img
#    nxos_image_1: n9000-dk9.10.2.5.M.bin
#    nxos_image_2: n9000-dk9.10.3.1.F.bin
#    nxos_release_1: 10.2.5_nxos64-cs_64bit
#    nxos_release_2: 10.3.1_nxos64-cs_64bit
#    # for dcnm_image_upgrade role
#    fabric_name_1: "{{ fabric_name }}"
#    ansible_switch_1: "{{ leaf1 }}"
#    ansible_switch_2: "{{ leaf2 }}"
#    ansible_switch_3: "{{ spine1 }}"
#
################################################################################
# MERGED - PRE_TEST - Detach image policies from all switches.
# NOTES:
#   1. Depending on whether the switches have policies attached, the
#      detach operation may not be performed.  Hence, we simply print the 
#      result and do not verify it.
################################################################################

- name: MERGED - PRE_TEST - Detach image policies from all switches.
  cisco.dcnm.dcnm_image_upgrade:
    state: deleted
    config:
      policy: "{{ image_policy_1 }}"
      switches:
        - ip_address: "{{ ansible_switch_1 }}"
        - ip_address: "{{ ansible_switch_2 }}"
        - ip_address: "{{ ansible_switch_3 }}"
  register: result
- debug:
    var: result

################################################################################
# MERGED - TEST - Upgrade all switches using global config.
# NOTES:
#   1. Images may or may not be staged depending on the current state of the
#      switches.  Test only that the upgrade operation is successful.
#   2. Since we detached the image policies, image validation will be
#      performed, so we do test for this. 
################################################################################

- name: MERGED - TEST - Upgrade all switches using global config.
  cisco.dcnm.dcnm_image_upgrade:
    state: merged
    config:
      policy: "{{ image_policy_1 }}"
      reboot: false
      stage: true
      validate: true
      upgrade:
        nxos: true
        epld: false
      options:
        nxos:
          mode: disruptive
          bios_force: false
        epld:
          module: ALL
          golden: false
        reboot:
          config_reload: false
          write_erase: false
        package:
          install: false
          uninstall: false
      switches:
        - ip_address: "{{ ansible_switch_1 }}"
        - ip_address: "{{ ansible_switch_2 }}"
        - ip_address: "{{ ansible_switch_3 }}"
  register: result

- debug:
    var: result

################################################################################
# MERGED - TEST - Wait for controller response for all three switches.
################################################################################

- name: MERGED - TEST - Wait for controller response for all three switches.
  cisco.dcnm.dcnm_image_upgrade:
    state: query
    config:
      switches:
        - ip_address: "{{ ansible_switch_1 }}"
        - ip_address: "{{ ansible_switch_2 }}"
        - ip_address: "{{ ansible_switch_3 }}"
  register: result
  until:
    - ansible_switch_1 in result.diff[0]
    - ansible_switch_2 in result.diff[0]
    - ansible_switch_3 in result.diff[0]
  retries: 60
  delay: 5
  ignore_errors: yes

################################################################################
# MERGED - TEST - global_config - test idempotence.
################################################################################
# Expected result
# ok: [172.22.150.244] => {
#     "result": {
#         "changed": false,
#         "diff": [
#             {
#                 "sequence_number": 1
#             },
#             {
#                 "sequence_number": 2
#             },
#             {
#                 "sequence_number": 3
#             }
#         ],
#         "failed": false,
#         "metadata": [
#             {
#                 "action": "image_stage",
#                 "check_mode": false,
#                 "sequence_number": 1,
#                 "state": "merged"
#             },
#             {
#                 "action": "image_validate",
#                 "check_mode": false,
#                 "sequence_number": 2,
#                 "state": "merged"
#             },
#             {
#                 "action": "image_upgrade",
#                 "check_mode": false,
#                 "sequence_number": 3,
#                 "state": "merged"
#             }
#         ],
#         "response": [
#             {
#                 "DATA": [
#                     {
#                         "key": "ALL",
#                         "value": "No images to stage."
#                     }
#                 ],
#                 "sequence_number": 1
#             },
#             {
#                 "response": "No images to validate.",
#                 "sequence_number": 2
#             },
#             {
#                 "sequence_number": 3
#             }
#         ],
#         "result": [
#             {
#                 "changed": false,
#                 "sequence_number": 1,
#                 "success": true
#             },
#             {
#                 "changed": false,
#                 "sequence_number": 2,
#                 "success": true
#             },
#             {
#                 "sequence_number": 3
#             }
#         ]
#     }
# }
################################################################################

- name: MERGED - TEST - global_config - test idempotence.
  cisco.dcnm.dcnm_image_upgrade:
    state: merged
    config:
      policy: "{{ image_policy_1}}"
      reboot: false
      stage: true
      validate: true
      upgrade:
        nxos: true
        epld: false
      options:
        nxos:
          mode: disruptive
          bios_force: false
        epld:
          module: ALL
          golden: false
        reboot:
          config_reload: false
          write_erase: false
        package:
          install: false
          uninstall: false
      switches:
        - ip_address: "{{ ansible_switch_1 }}"
        - ip_address: "{{ ansible_switch_2 }}"
        - ip_address: "{{ ansible_switch_3 }}"
  register: result
- debug:
    var: result
- assert:
    that:
      - result.changed == false
      - result.failed == false

################################################################################
# CLEANUP
################################################################################
# Run 03_cleanup_remove_devices_from_fabric.yaml
# Run 04_cleanup_delete_image_policies.yaml
# Run 05_cleanup_delete_fabric.yaml
################################################################################
