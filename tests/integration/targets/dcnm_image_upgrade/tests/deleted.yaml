################################################################################
# RUNTIME
################################################################################

# Recent run times (MM:SS.ms):
# 32:06.27
# 29:10.63
# 30:39.32
# 32:36.36
# 28:58.81

################################################################################
# STEPS
################################################################################

# SETUP
# 1. Create a fabric
# 2. Merge switches into fabric
# 3. Upgrade switches using global config
# 4. Wait for all switches to complete ISSU
# TEST
# 5. Detach policies from two switches and verify
# 6. Detach policy from remaining switch and verify
# CLEANUP
# 7. Delete devices from fabric

################################################################################
# REQUIREMENTS
################################################################################

# 1. image policies are already configured on the controller:
#   - KR5M (Kerry release maintenance 5)
#   - NR3F (Niles release maintenance 3)
#   The above include both NX-OS and EPLD images.
#
# TODO: Once dcnm_image_policy module is accepted, use that to
#       configure the above policies.
#
# Example vars for dcnm_image_upgrade integration tests
# Add to cisco/dcnm/playbooks/dcnm_tests.yaml)
#
# vars:
#   # This testcase field can run any test in the tests directory for the role
#   testcase: deleted
#   fabric_name: f1
#   username: admin
#   password: "foobar"
#   switch_username: admin
#   switch_password: "foobar"
#   spine1: 172.22.150.114
#   spine2: 172.22.150.115
#   leaf1: 172.22.150.106
#   leaf2: 172.22.150.107
#   leaf3: 172.22.150.108
#   leaf4: 172.22.150.109
#   # for dcnm_image_upgrade role
#   test_fabric: "{{ fabric_name }}"
#   ansible_switch_1: "{{ leaf1 }}"
#   ansible_switch_2: "{{ leaf2 }}"
#   ansible_switch_3: "{{ spine1 }}"
#   image_policy_1: "KR5M"
#   image_policy_2: "NR3F"

################################################################################
# SETUP
################################################################################

- set_fact:
    rest_fabric_create: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ fabric_name }}"

- name: DELETED - SETUP - Verify if fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_fabric_create }}"
  register: result

- debug:
    var: result

- assert:
    that:
    - result.response.DATA != None

- name: DELETED - SETUP - Clean up any existing devices
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ fabric_name }}"
    state: deleted

- name: DELETED - SETUP - Merge switches
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ fabric_name }}"
    state: merged
    config:
      - seed_ip: "{{ ansible_switch_1 }}"
        auth_proto: MD5
        user_name: "{{ switch_username }}"
        password: "{{ switch_password }}"
        max_hops: 0
        role: leaf
        preserve_config: False
      - seed_ip: "{{ ansible_switch_2 }}"
        auth_proto: MD5
        user_name: "{{ switch_username }}"
        password: "{{ switch_password }}"
        max_hops: 0
        role: leaf
        preserve_config: False
      - seed_ip: "{{ ansible_switch_3 }}"
        auth_proto: MD5
        user_name: "{{ switch_username }}"
        password: "{{ switch_password }}"
        max_hops: 0
        role: spine
        preserve_config: False
  register: result

- assert:
    that:
    - result.changed == true

- assert:
    that:
    - item["RETURN_CODE"] == 200
  loop: '{{ result.response }}'

################################################################################
# DELETED - SETUP - Upgrade all switches using global_config
################################################################################
# Expected result
# ok: [dcnm] => {
#     "result": {
#         "changed": true,
#         "diff": [
#             {
#                 "action": "attach",
#                 "ip_address": "172.22.150.106",
#                 "logical_name": "cvd-2311-leaf",
#                 "policy_name": "KR5M",
#                 "serial_number": "FDO211218HB"
#             },
#             {
#                 "action": "attach",
#                 "ip_address": "172.22.150.107",
#                 "logical_name": "cvd-2312-leaf",
#                 "policy_name": "KR5M",
#                 "serial_number": "FDO211218AX"
#             },
#             {
#                 "action": "attach",
#                 "ip_address": "172.22.150.114",
#                 "logical_name": "cvd-2211-spine",
#                 "policy_name": "KR5M",
#                 "serial_number": "FOX2109PHDD"
#             },
#             {
#                 "action": "stage",
#                 "ip_address": "172.22.150.106",
#                 "logical_name": "cvd-2311-leaf",
#                 "policy": "KR5M",
#                 "serial_number": "FDO211218HB"
#             },
#             {
#                 "action": "stage",
#                 "ip_address": "172.22.150.114",
#                 "logical_name": "cvd-2211-spine",
#                 "policy": "KR5M",
#                 "serial_number": "FOX2109PHDD"
#             },
#             {
#                 "action": "stage",
#                 "ip_address": "172.22.150.107",
#                 "logical_name": "cvd-2312-leaf",
#                 "policy": "KR5M",
#                 "serial_number": "FDO211218AX"
#             },
#             {
#                 "action": "validate",
#                 "ip_address": "172.22.150.106",
#                 "logical_name": "cvd-2311-leaf",
#                 "policy": "KR5M",
#                 "serial_number": "FDO211218HB"
#             },
#             {
#                 "action": "validate",
#                 "ip_address": "172.22.150.114",
#                 "logical_name": "cvd-2211-spine",
#                 "policy": "KR5M",
#                 "serial_number": "FOX2109PHDD"
#             },
#             {
#                 "action": "validate",
#                 "ip_address": "172.22.150.107",
#                 "logical_name": "cvd-2312-leaf",
#                 "policy": "KR5M",
#                 "serial_number": "FDO211218AX"
#             },
#             {
#                 "devices": [
#                     {
#                         "policyName": "KR5M",
#                         "serialNumber": "FDO211218HB"
#                     }
#                 ],
#                 "epldOptions": {
#                     "golden": false,
#                     "moduleNumber": "ALL"
#                 },
#                 "epldUpgrade": false,
#                 "issuUpgrade": true,
#                 "issuUpgradeOptions1": {
#                     "disruptive": true,
#                     "forceNonDisruptive": false,
#                     "nonDisruptive": false
#                 },
#                 "issuUpgradeOptions2": {
#                     "biosForce": false
#                 },
#                 "pacakgeInstall": false,
#                 "pacakgeUnInstall": false,
#                 "reboot": false,
#                 "rebootOptions": {
#                     "configReload": false,
#                     "writeErase": false
#                 }
#             },
#             {
#                 "devices": [
#                     {
#                         "policyName": "KR5M",
#                         "serialNumber": "FDO211218AX"
#                     }
#                 ],
#                 "epldOptions": {
#                     "golden": false,
#                     "moduleNumber": "ALL"
#                 },
#                 "epldUpgrade": false,
#                 "issuUpgrade": true,
#                 "issuUpgradeOptions1": {
#                     "disruptive": true,
#                     "forceNonDisruptive": false,
#                     "nonDisruptive": false
#                 },
#                 "issuUpgradeOptions2": {
#                     "biosForce": false
#                 },
#                 "pacakgeInstall": false,
#                 "pacakgeUnInstall": false,
#                 "reboot": false,
#                 "rebootOptions": {
#                     "configReload": false,
#                     "writeErase": false
#                 }
#             },
#             {
#                 "devices": [
#                     {
#                         "policyName": "KR5M",
#                         "serialNumber": "FOX2109PHDD"
#                     }
#                 ],
#                 "epldOptions": {
#                     "golden": false,
#                     "moduleNumber": "ALL"
#                 },
#                 "epldUpgrade": false,
#                 "issuUpgrade": true,
#                 "issuUpgradeOptions1": {
#                     "disruptive": true,
#                     "forceNonDisruptive": false,
#                     "nonDisruptive": false
#                 },
#                 "issuUpgradeOptions2": {
#                     "biosForce": false
#                 },
#                 "pacakgeInstall": false,
#                 "pacakgeUnInstall": false,
#                 "reboot": false,
#                 "rebootOptions": {
#                     "configReload": false,
#                     "writeErase": false
#                 }
#             }
#         ],
#         "failed": false,
#         "response": [
#             {
#                 "DATA": "[cvd-2311-leaf:Success] [cvd-2312-leaf:Success] [cvd-2211-spine:Success] ",
#                 "MESSAGE": "OK",
#                 "METHOD": "POST",
#                 "REQUEST_PATH": "https://172.22.150.244:443/appcenter/cisco/ndfc/api/v1/imagemanagement/rest/policymgnt/attach-policy",
#                 "RETURN_CODE": 200
#             },
#             {
#                 "DATA": [
#                     {
#                         "key": "FDO211218AX",
#                         "value": "No files to stage"
#                     },
#                     {
#                         "key": "FDO211218HB",
#                         "value": "No files to stage"
#                     },
#                     {
#                         "key": "FOX2109PHDD",
#                         "value": "No files to stage"
#                     }
#                 ],
#                 "MESSAGE": "OK",
#                 "METHOD": "POST",
#                 "REQUEST_PATH": "https://172.22.150.244:443/appcenter/cisco/ndfc/api/v1/imagemanagement/rest/stagingmanagement/stage-image",
#                 "RETURN_CODE": 200
#             },
#             {
#                 "DATA": "[StageResponse [key=success, value=]]",
#                 "MESSAGE": "OK",
#                 "METHOD": "POST",
#                 "REQUEST_PATH": "https://172.22.150.244:443/appcenter/cisco/ndfc/api/v1/imagemanagement/rest/stagingmanagement/validate-image",
#                 "RETURN_CODE": 200
#             },
#             {
#                 "DATA": 63,
#                 "MESSAGE": "OK",
#                 "METHOD": "POST",
#                 "REQUEST_PATH": "https://172.22.150.244:443/appcenter/cisco/ndfc/api/v1/imagemanagement/rest/imageupgrade/upgrade-image",
#                 "RETURN_CODE": 200
#             },
#             {
#                 "DATA": 64,
#                 "MESSAGE": "OK",
#                 "METHOD": "POST",
#                 "REQUEST_PATH": "https://172.22.150.244:443/appcenter/cisco/ndfc/api/v1/imagemanagement/rest/imageupgrade/upgrade-image",
#                 "RETURN_CODE": 200
#             },
#             {
#                 "DATA": 65,
#                 "MESSAGE": "OK",
#                 "METHOD": "POST",
#                 "REQUEST_PATH": "https://172.22.150.244:443/appcenter/cisco/ndfc/api/v1/imagemanagement/rest/imageupgrade/upgrade-image",
#                 "RETURN_CODE": 200
#             }
#         ]
#     }
# }
################################################################################
- name: DELETED - SETUP - Upgrade all switches using global config
  cisco.dcnm.dcnm_image_upgrade: &global_config
    state: merged
    config:
        policy: "{{ image_policy_1 }}"
        reboot: false
        stage: true
        validate: true
        upgrade:
            nxos: true
            epld: false
        options:
            nxos:
                mode: disruptive
                bios_force: false
            epld:
                module: ALL
                golden: false
            reboot:
                config_reload: false
                write_erase: false
            package:
                install: false
                uninstall: false
        switches:
          - ip_address: "{{ ansible_switch_1 }}"
          - ip_address: "{{ ansible_switch_2 }}"
          - ip_address: "{{ ansible_switch_3 }}"
  register: result

- debug:
    var: result

- assert:
    that:
    - result.changed == true
    - result.failed == false
    - result.diff[0].action == "attach"
    - result.diff[1].action == "attach"
    - result.diff[2].action == "attach"
    - result.diff[0].policy_name == image_policy_1
    - result.diff[1].policy_name == image_policy_1
    - result.diff[2].policy_name == image_policy_1
    - result.diff[3].action == "stage"
    - result.diff[4].action == "stage"
    - result.diff[5].action == "stage"
    - result.diff[3].policy == image_policy_1
    - result.diff[4].policy == image_policy_1
    - result.diff[5].policy == image_policy_1
    - result.diff[6].action == "validate"
    - result.diff[7].action == "validate"
    - result.diff[8].action == "validate"
    - result.diff[6].policy == image_policy_1
    - result.diff[7].policy == image_policy_1
    - result.diff[8].policy == image_policy_1
    - result.diff[9].devices[0].policyName == image_policy_1
    - result.diff[10].devices[0].policyName == image_policy_1
    - result.diff[11].devices[0].policyName == image_policy_1
    - result.response[0].RETURN_CODE == 200
    - result.response[1].RETURN_CODE == 200
    - result.response[3].RETURN_CODE == 200
    - result.response[4].RETURN_CODE == 200
    - result.response[5].RETURN_CODE == 200

- name: DELETED - SETUP - Wait for controller response for all three switches
  cisco.dcnm.dcnm_image_upgrade:
    state: query
    config:
        switches:
        - ip_address: "{{ ansible_switch_1 }}"
        - ip_address: "{{ ansible_switch_2 }}"
        - ip_address: "{{ ansible_switch_3 }}"
  register: result
  until:
    - result.diff[0].ipAddress == ansible_switch_1
    - result.diff[1].ipAddress == ansible_switch_2
    - result.diff[2].ipAddress == ansible_switch_3
  retries: 60
  delay: 5
  ignore_errors: yes

################################################################################
# DELETED - TEST - Detach policies from two switches and verify
################################################################################
# Expected result
# ok: [dcnm] => {
#     "result": {
#         "changed": true,
#         "diff": [
#             {
#                 "action": "detach",
#                 "ip_address": "172.22.150.106",
#                 "logical_name": "cvd-2311-leaf",
#                 "policy_name": "KR5M",
#                 "serial_number": "FDO211218HB"
#             },
#             {
#                 "action": "detach",
#                 "ip_address": "172.22.150.107",
#                 "logical_name": "cvd-2312-leaf",
#                 "policy_name": "KR5M",
#                 "serial_number": "FDO211218AX"
#             }
#         ],
#         "failed": false,
#         "response": [
#             {
#                 "DATA": "Successfully detach the policy from device.",
#                 "MESSAGE": "OK",
#                 "METHOD": "DELETE",
#                 "REQUEST_PATH": "https://172.22.150.244:443/appcenter/cisco/ndfc/api/v1/imagemanagement/rest/policymgnt/detach-policy?serialNumber=FDO211218HB,FDO211218AX",
#                 "RETURN_CODE": 200
#             }
#         ]
#     }
# }
################################################################################
- name: DELETED - TEST - Detach policies from two switches
  cisco.dcnm.dcnm_image_upgrade:
        state: deleted
        config:
            policy: "{{ image_policy_1 }}"
            switches:
            - ip_address: "{{ ansible_switch_1 }}"
            - ip_address: "{{ ansible_switch_2 }}"
  register: result

- debug:
    var: result

- assert:
    that:
    - result.changed == true
    - result.failed == false
    - (result.diff | length) == 2
    - (result.response | length) == 1
    - result.diff[0]["action"] == "detach"
    - result.diff[1]["action"] == "detach"
    - response[0].RETURN_CODE == 200
    - response[0].DATA == "Successfully detach the policy from device."
    - response[0].METHOD == "DELETE"

################################################################################
# DELETED - TEST - Detach policies from remaining switch and verify
################################################################################
# Expected result
# ok: [dcnm] => {
#     "result": {
#         "changed": true,
#         "diff": [
#             {
#                 "action": "detach",
#                 "ip_address": "172.22.150.114",
#                 "logical_name": "cvd-2211-spine",
#                 "policy_name": "KR5M",
#                 "serial_number": "FOX2109PHDD"
#             }
#         ],
#         "failed": false,
#         "response": [
#             {
#                 "DATA": "Successfully detach the policy from device.",
#                 "MESSAGE": "OK",
#                 "METHOD": "DELETE",
#                 "REQUEST_PATH": "https://172.22.150.244:443/appcenter/cisco/ndfc/api/v1/imagemanagement/rest/policymgnt/detach-policy?serialNumber=FOX2109PHDD",
#                 "RETURN_CODE": 200
#             }
#         ]
#     }
# }
################################################################################
- name: DELETED - TEST - Detach policy from remaining switch
  cisco.dcnm.dcnm_image_upgrade:
        state: deleted
        config:
            policy: "{{ image_policy_1 }}"
            switches:
            - ip_address: "{{ ansible_switch_3 }}"
  register: result

- debug:
    var: result

- assert:
    that:
    - result.changed == true
    - result.failed == false
    - (result.diff | length) == 1
    - (result.response | length) == 1
    - result.diff[0]["action"] == "detach"
    - result.diff[0]["policy_name"] == image_policy_1
    - response[0].RETURN_CODE == 200

################################################################################
# CLEAN-UP
################################################################################

- name: DELETED - CLEANUP - Remove devices from fabric
  cisco.dcnm.dcnm_inventory:
    fabric: "{{ fabric_name }}"
    state: deleted
