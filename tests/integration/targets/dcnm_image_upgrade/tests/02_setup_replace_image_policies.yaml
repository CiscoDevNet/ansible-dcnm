################################################################################
# TESTCASE:
#
# 02_setup_create_image_policies
#
# Description:
#
# Replace image policies.
#
# This will replace all image policies on the controller.
#
################################################################################
#
################################################################################
# RUNTIME
################################################################################
#
# Recent run times (MM:SS.ms):
# 00:07.565
# 00:07.552
#
################################################################################
# STEPS
################################################################################
#
- name: SETUP - Replace image policies.
  cisco.dcnm.dcnm_image_policy:
    state: replaced
    config:
    - name: "{{ image_policy_1 }}"
      agnostic: false
      description: "{{ image_policy_1 }}"
      epld_image: "{{ epld_image_1 }}"
      platform: N9K
      release: "{{ nxos_release_1 }}"
      type: PLATFORM
    - name: "{{ image_policy_2 }}"
      description: "{{ image_policy_2 }}"
      epld_image: "{{ epld_image_2 }}"
      platform: N9K
      release: "{{ nxos_release_2 }}"
  register: result

- debug:
    var: result

- assert:
    that:
    - result.changed == true
    - result.failed == false
    - (result.diff | length) == 2
    - result.diff[0].policyName == image_policy_1
    - result.diff[1].policyName == image_policy_2
    - result.diff[0].policyDescr == image_policy_1
    - result.diff[1].policyDescr == image_policy_2
    - result.diff[0].agnostic == false
    - result.diff[1].agnostic == false
    - result.diff[0].epldImgName == epld_image_1
    - result.diff[1].epldImgName == epld_image_2
    - result.diff[0].nxosVersion == nxos_release_1
    - result.diff[1].nxosVersion == nxos_release_2
    - result.diff[0].platform == "N9K"
    - result.diff[1].platform == "N9K"
    - result.diff[0].policyType == "PLATFORM"
    - result.diff[1].policyType == "PLATFORM"
    - (result.metadata | length) == 2
    - result.metadata[0].action == "replace"
    - result.metadata[0].check_mode == False
    - result.metadata[0].sequence_number == 1
    - result.metadata[0].state == "replaced"
    - result.metadata[1].action == "replace"
    - result.metadata[1].check_mode == False
    - result.metadata[1].sequence_number == 2
    - result.metadata[1].state == "replaced"
    - (result.response | length) == 2
    - result.response[0].MESSAGE == "OK"
    - result.response[0].METHOD == "POST"
    - result.response[0].RETURN_CODE == 200
    - result.response[0].sequence_number == 1
    - result.response[1].MESSAGE == "OK"
    - result.response[1].METHOD == "POST"
    - result.response[1].RETURN_CODE == 200
    - result.response[1].sequence_number == 2
    - (result.result | length) == 2
    - result.result[0].changed == true
    - result.result[0].sequence_number == 1
    - result.result[0].success == true
    - result.result[1].changed == true
    - result.result[1].sequence_number == 2
    - result.result[1].success == true
