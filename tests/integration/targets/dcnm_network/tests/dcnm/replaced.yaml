##############################################
##                 SETUP                    ##
##############################################

- name: REPLACED - Test Entry Point - [ndfc_network]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+              Executing Tests - [ndfc_network]                +"
      - "----------------------------------------------------------------"
  tags: replaced

##############################################
##      Create Dictionary of Test Data      ##
##############################################
- name: REPLACED - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    test_data_replaced:
      #----------------------------------  
      # config templates and auto generated file location for test cases
      #----------------------------------
      # TC1 
      double_net_conf_template: "replaced/dcnm_network_replaced_double_net_conf.j2"
      double_net_conf_file: "{{ role_path }}/files/dcnm_network_replaced_double_net_conf.yaml"
      #----------------------------------
      double_net_changed_conf_template: "replaced/dcnm_network_replaced_double_net_changed_conf.j2"
      double_net_changed_conf_file: "{{ role_path }}/files/dcnm_network_replaced_double_net_changed_conf.yaml"
      #----------------------------------
      # TC3
      l2_l3_net_conf_template: "replaced/dcnm_network_replaced_l2_l3_net_conf.j2"
      l2_l3_net_conf_file: "{{ role_path }}/files/dcnm_network_replaced_l2_l3_net_conf.yaml"
      #----------------------------------
      l2_l3_net_changed_conf_template: "replaced/dcnm_network_replaced_l2_l3_net_changed_conf.j2"
      l2_l3_net_changed_conf_file: "{{ role_path }}/files/dcnm_network_replaced_l2_l3_net_changed_conf.yaml"
      #----------------------------------
  delegate_to: localhost
  tags: replaced

##############################################
## Create Module Payloads using J2 Template ##
##############################################

- name: REPLACED - TC1 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_replaced.double_net_conf_template }}"
    dest: "{{ test_data_replaced.double_net_conf_file }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC1 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_replaced.double_net_changed_conf_template }}"
    dest: "{{ test_data_replaced.double_net_changed_conf_file }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC3 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_replaced.l2_l3_net_conf_template }}"
    dest: "{{ test_data_replaced.l2_l3_net_conf_file }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC3 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_replaced.l2_l3_net_changed_conf_template }}"
    dest: "{{ test_data_replaced.l2_l3_net_changed_conf_file }}"
  delegate_to: localhost
  tags: replaced

##############################################
##                REPLACED                  ##
##############################################

# TC1
- name: REPLACED - TC1 - DELETED - Clean up any existing networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: replaced

- name: REPLACED - TC1 - Load Network Config File
  ansible.builtin.set_fact:
    dcnm_network_double_net_conf: "{{ lookup('file', '{{ test_data_replaced.double_net_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC1 - merged - Create, Attach and Deploy Multiple Network with Single Switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric}}"
    state: merged
    config: "{{ dcnm_network_double_net_conf }}"
  register: result
  tags: replaced

- name: REPLACED - TC1 - ASSERT - Check if changed flag is true
  assert:
    that:
    - result.changed == true
  tags: replaced

- name: REPLACED - TC1 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: replaced

- name: REPLACED - TC1 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_replaced.double_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: replaced

- name: REPLACED - TC1 - Load Changed Network Config File
  ansible.builtin.set_fact:
    dcnm_network_double_net_changed_conf: "{{ lookup('file', '{{ test_data_replaced.double_net_changed_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC1 - REPLACED - Delete Attachments
  cisco.dcnm.dcnm_network: &conf1
    fabric: "{{ test_data_common.fabric }}"
    state: replaced
    config: "{{ dcnm_network_double_net_changed_conf }}"
  register: result
  tags: replaced

# Possible bug, changed flag is not set to true when deleting attachments
# - name: REPLACED - TC1 - ASSERT - Check if changed flag is true
#   assert:
#     that:
#     - result.changed == true
#   tags: replaced

- name: REPLACED - TC1 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: replaced

- name: REPLACED - TC1 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_replaced.double_net_changed_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: replaced

- name: REPLACED - TC1 - conf1 - Idempotence
  cisco.dcnm.dcnm_network: *conf1
  register: result
  tags: replaced

- name: REPLACED - TC1 - ASSERT - Check if changed flag is false
  assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
  tags: replaced

# TC2
- name: REPLACED - TC2 - REPLACED - Update Network using replace - Create Attachments
  cisco.dcnm.dcnm_network: &conf2
    fabric: "{{ test_data_common.fabric }}"
    state: replaced
    config: "{{ dcnm_network_double_net_conf }}"
  register: result
  tags: replaced

- name: REPLACED - TC2 - ASSERT - Check if changed flag is true
  assert:
    that:
    - result.changed == true
  tags: replaced

- name: REPLACED - TC2 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: replaced

- name: REPLACED - TC2 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_replaced.double_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: replaced

- name: REPLACED - TC2 - conf2 - Idempotence
  cisco.dcnm.dcnm_network: *conf2
  register: result
  tags: replaced

- name: REPLACED - TC2 - ASSERT - Check if changed flag is false
  assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
  tags: replaced

# TC3
- name: REPLACED - TC3 - DELETED - remove all networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: replaced

- name: REPLACED - TC3 - Load L2, L3 Network Config File
  ansible.builtin.set_fact:
    dcnm_network_l2_l3_net_conf: "{{ lookup('file', '{{ test_data_replaced.l2_l3_net_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC3 - MERGED - Create, Attach and Deploy L2, L3 Network with Switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_l2_l3_net_conf }}"
  register: result
  tags: replaced

- name: REPLACED - TC3 - ASSERT - Check if changed flag is true
  assert:
    that:
    - result.changed == true
  tags: replaced

- name: REPLACED - TC3 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: replaced

- name: REPLACED - TC3 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_replaced.l2_l3_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: replaced

- name: REPLACED - TC3 - Load Changed L2, L3 Network Config File
  ansible.builtin.set_fact:
    dcnm_network_l2_l3_net_changed_conf: "{{ lookup('file', '{{ test_data_replaced.l2_l3_net_changed_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: replaced

- name: REPLACED - TC3 - Update L2, L3 Networks using replace - Delete Attachments
  cisco.dcnm.dcnm_network: &conf3
    fabric: "{{ test_data_common.fabric }}"
    state: replaced
    config: "{{ dcnm_network_l2_l3_net_changed_conf }}"
  register: result
  tags: replaced

# - name: REPLACED - TC3 - ASSERT - Check if changed flag is true
#   assert:
#     that:
#     - result.changed == true
#   tags: replaced

- name: REPLACED - TC3 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: replaced

- name: REPLACED - TC3 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_replaced.l2_l3_net_changed_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: replaced

- name: REPLACED - TC3 - conf3 - Idempotence
  cisco.dcnm.dcnm_network: *conf3
  register: result
  tags: replaced

- name: REPLACED - TC3 - ASSERT - Check if changed flag is false
  assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
  tags: replaced

# TC4
- name: REPLACED - TC4 - Update L2, L3 Networks using replace - Create Attachments
  cisco.dcnm.dcnm_network: &conf4
    fabric: "{{ test_data_common.fabric }}"
    state: replaced
    config: "{{ dcnm_network_l2_l3_net_conf }}"
  register: result
  tags: replaced

- name: REPLACED - TC4 - ASSERT - Check if changed flag is true
  assert:
    that:
    - result.changed == true
  tags: replaced

- name: REPLACED - TC4 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: replaced

- name: REPLACED - TC4 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_replaced.l2_l3_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: replaced

- name: REPLACED - TC4 - conf4 - Idempotence
  cisco.dcnm.dcnm_network: *conf4
  register: result
  tags: replaced

- name: REPLACED - TC4 - ASSERT - Check if changed flag is false
  assert:
    that:
    - result.changed == false
    - result.response|length == 0
  tags: replaced

##############################################
##                 CLEAN-UP                 ##
##############################################

- name: REPLACED - END - remove networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: replaced
