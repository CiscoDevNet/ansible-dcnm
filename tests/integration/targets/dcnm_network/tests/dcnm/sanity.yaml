##############################################
##                 SETUP                    ##
##############################################

- name: SANITY - Test Entry Point - [ndfc_network]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+              Executing Tests - [ndfc_network]                +"
      - "----------------------------------------------------------------"
  tags: sanity

##############################################
##      Create Dictionary of Test Data      ##
##############################################
- name: SANITY - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    test_data_sanity:
      #----------------------------------  
      # config templates and auto generated file location for test cases
      #----------------------------------
      # TC1 - MERGED - Create, Attach and Deploy Multiple Network with Single Switch Attach
      merged_conf_template: "sanity/dcnm_network_sanity_merged_conf.j2" 
      merged_conf_file: "{{ role_path }}/files/dcnm_network_sanity_merged_conf.yaml"
      # TC2 - OVERRIDDEN - Create, Attach and Deploy Multiple Network with Single Switch Attach
      overridden_conf_template: "sanity/dcnm_network_sanity_overridden_conf.j2"
      overridden_conf_file: "{{ role_path }}/files/dcnm_network_sanity_overridden_conf.yaml"
      # TC3 - REPLACED - Update Network using replace - Delete Attachments
      replaced_conf_template: "sanity/dcnm_network_sanity_replaced_conf.j2"
      replaced_conf_file: "{{ role_path }}/files/dcnm_network_sanity_replaced_conf.yaml"
      #----------------------------------

  delegate_to: localhost
  tags: sanity

##############################################
## Create Module Payloads using J2 Template ##
##############################################

- name: SANITY - TC1 - Create Network Config File using J2 Template (Merged)
  ansible.builtin.template:
    src: "{{ test_data_sanity.merged_conf_template }}"
    dest: "{{ test_data_sanity.merged_conf_file }}"
  delegate_to: localhost
  tags: sanity

- name: SANITY - TC2 - Create Network Config File using J2 Template (Overridden)
  ansible.builtin.template:
    src: "{{ test_data_sanity.overridden_conf_template }}"
    dest: "{{ test_data_sanity.overridden_conf_file }}"
  delegate_to: localhost
  tags: sanity

- name: SANITY - TC3 - Create Network Config File using J2 Template (Replaced)
  ansible.builtin.template:
    src: "{{ test_data_sanity.replaced_conf_template }}"
    dest: "{{ test_data_sanity.replaced_conf_file }}"
  delegate_to: localhost
  tags: sanity

##############################################
##                  DELETED                 ##
##############################################

- name: SANITY - DELETED - Clean up any existing networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: sanity


##############################################
##                  MERGED                  ##
##############################################

- name: SANITY - TC1 - Load Network Config File
  ansible.builtin.set_fact:
    dcnm_network_sanity_merged_conf: "{{ lookup('file', '{{ test_data_sanity.merged_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: sanity

- name: SANITY - TC1 - MERGED - Create, Attach and Deploy Multiple Network with Single Switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_sanity_merged_conf }}"
  register: result
  tags: sanity

- name: SANITY - TC1 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: sanity

- name: SANITY - TC1 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: sanity

- name: SANITY - TC1 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_sanity.merged_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: sanity

##############################################
##                OVERRIDDEN                ##
##############################################

- name: SANITY - TC2 - Load Network Config File
  ansible.builtin.set_fact:
    dcnm_network_sanity_overridden_conf: "{{ lookup('file', '{{ test_data_sanity.overridden_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: sanity

- name: SANITY - TC2 - OVERRIDDEN - Create, Attach and Deploy Multiple Network with Single Switch Attach
  cisco.dcnm.dcnm_network: &conf1
    fabric: "{{ test_data_common.fabric }}"
    state: overridden
    config: "{{ dcnm_network_sanity_overridden_conf }}"
  register: result
  tags: sanity

- name: SANITY - TC2 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: sanity

- name: SANITY - TC2 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: sanity

- name: SANITY - TC2 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_sanity.overridden_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: sanity

- name: SANITY - TC2 - OVERRIDDEN - conf1 - Idempotence
  cisco.dcnm.dcnm_network: *conf1
  register: result
  tags: sanity

- name: SANITY - TC2 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
    - result.diff|length == 0
    - result.response|length == 0
  tags: sanity

##############################################
##                 REPLACED                 ##
##############################################

- name: SANITY - TC3 - Load Network Config File
  ansible.builtin.set_fact:
    dcnm_network_sanity_replaced_conf: "{{ lookup('file', '{{ test_data_sanity.replaced_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: sanity

- name: SANITY - TC3 - OVERRIDDEN - Create, Attach and Deploy Multiple Network with Single Switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: overridden
    config: "{{ dcnm_network_sanity_merged_conf }}"
  register: result
  tags: sanity

- name: SANITY - TC3 - ASSERT - Check changed flag
  assert:
    that:
    - 'result.changed == true'
  tags: sanity

- name: SANITY - TC3 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: sanity

- name: SANITY - TC3 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_sanity.merged_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: sanity

- name: SANITY - TC3 - REPLACED - Update Network using replace - Delete Attachments
  cisco.dcnm.dcnm_network: &conf2
    fabric: "{{ test_data_common.fabric }}"
    state: replaced
    config: "{{ dcnm_network_sanity_replaced_conf }}"
  register: result
  tags: sanity

# This assert is failing
# This is a bug, the changed flag should be true but is returned as false
# - name: SANITY - TC3 - ASSERT - Check changed flag is true
#   assert:
#     that:
#     - 'result.changed == true'
#   tags: sanity

- name: SANITY - TC3 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: sanity

- name: SANITY - TC3 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_sanity.replaced_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: sanity

- name: SANITY - TC3 - REPLACED - conf1 - Idempotence
  cisco.dcnm.dcnm_network: *conf2
  register: result
  tags: sanity

- name: SANITY - TC3 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
    - result.diff|length == 0
    - result.response|length == 0
  tags: sanity

- name: SANITY - END - Clean up any existing networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: sanity
