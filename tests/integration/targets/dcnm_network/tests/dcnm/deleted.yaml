##############################################
##                 SETUP                    ##
##############################################

- name: DELETED - Test Entry Point - [ndfc_network]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+              Executing Tests - [ndfc_network]                +"
      - "----------------------------------------------------------------"
  tags: deleted

##############################################
##      Create Dictionary of Test Data      ##
##############################################
- name: DELETED - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    test_data_deleted:
      #----------------------------------  
      # config templates and auto generated file location for test cases
      #----------------------------------
      # COMMON - Create, Attach and Deploy Single Network with multiple switch Attach
      net1_conf_template: "deleted/dcnm_network_deleted_net1_conf.j2"
      net1_conf_file: "{{ role_path }}/files/dcnm_network_deleted_net1_conf.yaml"
      # TC1 - Delete Single Network with deleted state
      net2_conf_template: "deleted/dcnm_network_deleted_net2_conf.j2"
      net2_conf_file: "{{ role_path }}/files/dcnm_network_deleted_net2_conf.yaml"
      # TC2 - Delete Single Network with deleted state and verify other network is still there
      double_net_conf_template: "deleted/dcnm_network_deleted_double_net_conf.j2"
      double_net_conf_file: "{{ role_path }}/files/dcnm_network_deleted_double_net_conf.yaml"
      # TC4 - Create L2 only networks along with all dhcp, arp options
      l2only_net_conf_template: "deleted/dcnm_network_deleted_l2only_net_conf.j2"
      l2only_net_conf_file: "{{ role_path }}/files/dcnm_network_deleted_l2only_net_conf.yaml"
      # TC5 - Create a L2 only and L3 networks along with all dhcp, arp options
      l2_l3_net_conf_template: "deleted/dcnm_network_deleted_l2_l3_net_conf.j2"
      l2_l3_net_conf_file: "{{ role_path }}/files/dcnm_network_deleted_l2_l3_net_conf.yaml"
  delegate_to: localhost
  tags: deleted

##############################################
## Create Module Payloads using J2 Template ##
##############################################

- name: DELETED - COMMON - Create Module Payloads using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_deleted.net1_conf_template }}"
    dest: "{{ test_data_deleted.net1_conf_file }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC1 - Create Module Payloads using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_deleted.net2_conf_template }}"
    dest: "{{ test_data_deleted.net2_conf_file }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC2 - Create Module Payloads using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_deleted.double_net_conf_template }}"
    dest: "{{ test_data_deleted.double_net_conf_file }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC4 - Create Module Payloads using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_deleted.l2only_net_conf_template }}"
    dest: "{{ test_data_deleted.l2only_net_conf_file }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC5 - Create Module Payloads using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_deleted.l2_l3_net_conf_template }}"
    dest: "{{ test_data_deleted.l2_l3_net_conf_file }}"
  delegate_to: localhost
  tags: deleted

###############################################
###                DELETED                   ##
###############################################

# TC1
- name: DELETED - TC1 - Load Network 1 Config File
  ansible.builtin.set_fact:
    dcnm_network_deleted_net1_conf: "{{ lookup('file', '{{ test_data_deleted.net1_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC1 - DELETED - Delete all the networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: deleted

- name: DELETED - TC1 - MERGED - Create, Attach and Deploy Single Network with multiple switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_deleted_net1_conf }}"
  register: result
  tags: deleted

- name: DELETED - TC1 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC1 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC1 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.net1_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  delegate_to: localhost
  tags: deleted


- name: DELETED - TC1 - DELETED - Delete Single Network with deleted state
  cisco.dcnm.dcnm_network: &conf
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config: "{{ dcnm_network_deleted_net1_conf }}"
  register: result
  tags: deleted

- name: DELETED - TC1 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC1 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC1 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.net1_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
    check_deleted: true
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC1 - conf - Idempotence
  cisco.dcnm.dcnm_network: *conf
  register: result
  tags: deleted

- name: DELETED - TC1 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
    - result.diff|length == 0
    - result.response|length == 0
  tags: deleted

# TC2
- name: DELETED - TC2 - Load Double Network Config File
  ansible.builtin.set_fact:
    dcnm_network_deleted_double_net_conf: "{{ lookup('file', '{{ test_data_deleted.double_net_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC2 - Load Network 2 Config File
  ansible.builtin.set_fact:
    dcnm_network_deleted_net2_conf: "{{ lookup('file', '{{ test_data_deleted.net2_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC2 - MERGED - Create, Attach and Deploy Multiple Network with single switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_deleted_double_net_conf }}"
  register: result
  tags: deleted

- name: DELETED - TC2 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC2 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC2 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.double_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC2 - DELETED - Delete Single Network with deleted state and verify other network is still there
  cisco.dcnm.dcnm_network: &conf1
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config: "{{ dcnm_network_deleted_net2_conf }}"
  register: result
  tags: deleted

- name: DELETED - TC2 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC2 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC1 - VALIDITY CHECK - Verify network is deleted in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.net2_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
    check_deleted: true
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC2 - VALIDITY CHECK - Verify other network is still present in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.net1_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC2 - conf - Idempotence
  cisco.dcnm.dcnm_network: *conf1
  register: result
  tags: deleted

- name: DELETED - TC2 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
    - result.diff|length == 0
    - result.response|length == 0
  tags: deleted

- name: DELETED - TC2 - Delete the other Single Network with deleted state
  cisco.dcnm.dcnm_network: &conf2
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config: "{{ dcnm_network_deleted_net1_conf }}"
  register: result
  tags: deleted

- name: DELETED - TC2 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC2 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC2 - VALIDITY CHECK - Verify all networks are deleted in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: ""
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
    check_deleted: true
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC2 - conf - Idempotence
  cisco.dcnm.dcnm_network: *conf2
  register: result
  tags: deleted

- name: DELETED - TC2 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
    - result.diff|length == 0
    - result.response|length == 0
  tags: deleted

# TC3

- name: DELETED - TC3 - MERGED - Create, Attach and Deploy Multiple Network with single switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_deleted_double_net_conf }}"
  tags: deleted

- name: DELETED - TC3 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC3 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.double_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: deleted

- name: DELETED - TC3 - DELETED - Delete all the networks
  cisco.dcnm.dcnm_network: &conf3
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  register: result
  tags: deleted

- name: DELETED - TC3 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC3 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC3 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: ""
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
    check_deleted: true
  tags: deleted

- name: DELETED - TC3 - conf3 - Idempotence
  cisco.dcnm.dcnm_network: *conf3
  register: result
  tags: deleted

- name: DELETED - TC3 - ASSERT - Check changed flag is false
  assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'
  tags: deleted


# TC4
- name: DELETED - TC4 - Load L2 only Network Config File
  ansible.builtin.set_fact:
    dcnm_network_deleted_l2only_net_conf: "{{ lookup('file', '{{ test_data_deleted.l2only_net_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC4 - MERGED - Create L2 only networks along with all dhcp, arp options
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_deleted_l2only_net_conf }}"

  register: result
  tags: deleted

- name: DELETED - TC4 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC4 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC4 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.l2only_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC4 - DELETED - Clean up l2_only existing network
  cisco.dcnm.dcnm_network: &conf4
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config: "{{ dcnm_network_deleted_l2only_net_conf }}"
  register: result
  tags: deleted

- name: DELETED - TC4 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC4 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC4 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.l2only_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
    check_deleted: true
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC4 - conf4 - Idempotence
  cisco.dcnm.dcnm_network: *conf4
  register: result
  tags: deleted

- name: DELETED - TC4 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
    - result.diff|length == 0
    - result.response|length == 0
  tags: deleted

# TC5
- name: DELETED - TC5 - Load L2 and L3 Network Config File
  ansible.builtin.set_fact:
    dcnm_network_deleted_l2_l3_net_conf: "{{ lookup('file', '{{ test_data_deleted.l2_l3_net_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC5 - MERGED - Create a L2 only and L3 networks along with all dhcp, arp options
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_deleted_l2_l3_net_conf }}"
  register: result
  tags: deleted

- name: DELETED - TC5 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC5 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC5 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_deleted.l2_l3_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  delegate_to: localhost
  tags: deleted

- name: DELETED - DELETED - Delete all the networks
  cisco.dcnm.dcnm_network: &conf5
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  register: result
  tags: deleted

- name: DELETED - conf5 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: deleted

- name: DELETED - TC5 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: deleted

- name: DELETED - TC5 - VALIDITY CHECK - Verify if everything is deleted
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: ""
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
    check_deleted: true
  delegate_to: localhost
  tags: deleted

- name: DELETED - TC5 - conf5 - Idempotence
  cisco.dcnm.dcnm_network: *conf5
  register: result
  tags: deleted

- name: DELETED - TC5 - conf5 - ASSERT - Check changed flag is false
  assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'
  tags: deleted

# TC6 - invalid configs
- name: DELETED - TC6 -  Delete Single Network with no network name
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config:
    - net_name:
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      vlan_id: 1500
      gw_ip_subnet: '192.168.30.1/24'
  register: result
  ignore_errors: yes
  tags: deleted

- name: DELETED - TC6 - ASSERT - Check changed flag is false
  assert:
    that:
    - '"Invalid parameters in playbook: net_name : Required parameter not found" in result.msg'
    - result.changed == false
  tags: deleted

- name: DELETED - TC6 - Delete Single Network with invalid network name which is not configured
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
    config:
    - net_name: invalid-name
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      vlan_id: 1500
      gw_ip_subnet: '192.168.30.1/24'
  register: result
  ignore_errors: yes
  tags: deleted

- name: DELETED - TC6 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
    - result.response|length == 0
  tags: deleted

###############################################
###                 CLEAN-UP                 ##
###############################################

- name: DELETED - END - remove networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: deleted
