##############################################
##                 SETUP                    ##
##############################################

- name: OVERRIDDEN - Test Entry Point - [ndfc_network]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+              Executing Tests - [ndfc_network]                +"
      - "----------------------------------------------------------------"
  tags: overridden

##############################################
##      Create Dictionary of Test Data      ##
##############################################
- name: OVERRIDDEN - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    test_data_overridden:
      #----------------------------------  
      # config templates and auto generated file location for test cases
      #----------------------------------
      # TC1 - OVERRIDDEN - Create, Attach and Deploy Multiple Network with Single Switch Attach
      double_net_conf_template: "overridden/dcnm_network_overridden_double_net_conf.j2"
      double_net_conf_file: "{{ role_path }}/files/dcnm_network_overridden_double_net_conf.yaml"
      #----------------------------------
      net1_conf_template: "overridden/dcnm_network_overridden_net1_conf.j2"
      net1_conf_file: "{{ role_path }}/files/dcnm_network_overridden_net1_conf.yaml"
      # TC2 - OVERRIDDEN - MERGED - Create, Attach and Deploy L2. L3 Network with Switch Attach
      l2_l3_net_conf_template: "overridden/dcnm_network_overridden_l2_l3_net_conf.j2"
      l2_l3_net_conf_file: "{{ role_path }}/files/dcnm_network_overridden_l2_l3_net_conf.yaml"
      #----------------------------------
      l2_l3_net_changed_conf_template: "overridden/dcnm_network_overridden_l2_l3_net_changed_conf.j2"
      l2_l3_net_changed_conf_file: "{{ role_path }}/files/dcnm_network_overridden_l2_l3_net_changed_conf.yaml"
      #----------------------------------

  delegate_to: localhost
  tags: overridden


##############################################
## Create Module Payloads using J2 Template ##
##############################################
- name: OVERRIDDEN - TC1 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_overridden.double_net_conf_template }}"
    dest: "{{ test_data_overridden.double_net_conf_file }}"
  delegate_to: localhost
  tags: overridden

- name: OVERRIDDEN - TC1 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_overridden.net1_conf_template }}"
    dest: "{{ test_data_overridden.net1_conf_file }}"
  delegate_to: localhost
  tags: overridden

- name: OVERRIDDEN - TC2 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_overridden.l2_l3_net_conf_template }}"
    dest: "{{ test_data_overridden.l2_l3_net_conf_file }}"
  delegate_to: localhost
  tags: overridden

- name: OVERRIDDEN - TC2 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_overridden.l2_l3_net_changed_conf_template }}"
    dest: "{{ test_data_overridden.l2_l3_net_changed_conf_file }}"
  delegate_to: localhost
  tags: overridden

##############################################
##                OVERRIDDEN                ##
##############################################
- name: OVERRIDDEN - TC1 - remove all networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: overridden

- name: OVERRIDDEN - TC1 - Load Network Config File
  ansible.builtin.set_fact:
    dcnm_network_overridden_double_net_conf: "{{ lookup('file', '{{ test_data_overridden.double_net_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: overridden

- name: OVERRIDDEN - TC1 - MERGED - Create, Attach and Deploy Multiple Network with Single Switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_overridden_double_net_conf }}"
  register: result
  tags: overridden

- name: OVERRIDDEN - TC1 - ASSERT - Check changed flag is true
  assert:
    that:
    - result.changed == true
  tags: overridden

- name: OVERRIDDEN - TC1 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: overridden

- name: OVERRIDDEN - TC1 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_overridden.double_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: overridden

- name: OVERRIDDEN - TC1 - Load Network Config File with different connections
  ansible.builtin.set_fact:
    dcnm_network_overridden_net1_conf: "{{ lookup('file', '{{ test_data_overridden.net1_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: overridden

- name: OVERRIDDEN - TC1 - OVERRIDDEN - Create, Attach and Deploy Multiple Network with Single Switch Attach
  cisco.dcnm.dcnm_network: &conf1
    fabric: "{{ test_data_common.fabric }}"
    state: overridden
    config: "{{ dcnm_network_overridden_net1_conf }}"
  register: result
  tags: overridden

- name: OVERRIDDEN - TC1 - ASSERT - Check changed flag is true
  assert:
    that:
    - result.changed == true
  tags: overridden

- name: OVERRIDDEN - TC1 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: overridden

- name: OVERRIDDEN - TC1 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_overridden.net1_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: overridden

- name: OVERRIDDEN - TC1 - conf1 - Idempotence
  cisco.dcnm.dcnm_network: *conf1
  register: result
  tags: overridden

# when deploy is set to false, the other network shows in the diff and changed is true
# - name: OVERRIDDEN - TC1 - ASSERT - Check changed flag is false
#   assert:
#     that:
#     - 'result.changed == false'
#     # TODO: Do we really need this check?
#     #   The length does not come back as 0 with the following message
#     #   "status": "No switches PENDING for deployment."
#     # - 'result.response|length == 0'
#   tags: overridden

# TC2
- name: OVERRIDDEN - TC2 - DELETED - remove all networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: overridden

- name: OVERRIDDEN - TC2 - Load Network Config File
  ansible.builtin.set_fact:
    dcnm_network_overridden_l2_l3_net_conf: "{{ lookup('file', '{{ test_data_overridden.l2_l3_net_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: overridden

- name: OVERRIDDEN - TC2 - MERGED - Create, Attach and Deploy L2. L3 Network with Switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_overridden_l2_l3_net_conf }}"
  register: result
  tags: overridden

- name: OVERRIDDEN - TC2 - ASSERT - Check changed flag is true
  assert:
    that:
    - result.changed == true
  tags: overridden

- name: OVERRIDDEN - TC2 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: overridden

- name: OVERRIDDEN - TC2 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_overridden.l2_l3_net_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: overridden

- name: OVERRIDDEN - TC2 - Load Network Config File with a new L2 network 
  ansible.builtin.set_fact:
    dcnm_network_overridden_l2_l3_net_changed_conf: "{{ lookup('file', '{{ test_data_overridden.l2_l3_net_changed_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: overridden

- name: OVERRIDDEN - Override L2, L3 Networks with a new L2 network 
  cisco.dcnm.dcnm_network: &conf2
    fabric: "{{ test_data_common.fabric }}"
    state: overridden
    config: "{{ dcnm_network_overridden_l2_l3_net_changed_conf }}"
    
  register: result
- name: OVERRIDDEN - TC2 - ASSERT - Check changed flag is true
  assert:
    that:
    - result.changed == true
  tags: overridden

- name: OVERRIDDEN - TC2 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: overridden

- name: OVERRIDDEN - TC2 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_overridden.l2_l3_net_changed_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  tags: overridden

- name: OVERRIDDEN - TC2 - conf2 - Idempotence
  cisco.dcnm.dcnm_network: *conf2
  register: result
  tags: overridden

- name: OVERRIDDEN - TC2 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
  tags: overridden


##############################################
##                 CLEAN-UP                 ##
##############################################

- name: OVERRIDDEN - END - remove networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: overridden
