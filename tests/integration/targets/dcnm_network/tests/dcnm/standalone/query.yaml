##############################################
##                 SETUP                    ##
##############################################

- name: QUERY - Test Entry Point - [ndfc_network]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+              Executing Tests - [ndfc_network]                +"
      - "----------------------------------------------------------------"
  tags: query

##############################################
##      Create Dictionary of Test Data      ##
##############################################
- name: QUERY - Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    test_data_query:
      #----------------------------------  
      # config templates and auto generated file location for test cases
      #----------------------------------
      # TC1 - QUERY
      merged_conf_template: "sanity/dcnm_network_sanity_merged_conf.j2" 
      merged_conf_file: "{{ role_path }}/files/dcnm_network_sanity_merged_conf.yaml"
      # TC5 - L2only and L3 network with dhcp, arp options
      l2_l3_net_conf_template: "deleted/dcnm_network_deleted_l2_l3_net_conf.j2"
      l2_l3_net_conf_file: "{{ role_path }}/files/dcnm_network_deleted_l2_l3_net_conf.yaml"
      #----------------------------------

  delegate_to: localhost
  tags: query

##############################################
## Create Module Payloads using J2 Template ##
##############################################

- name: QUERY - TC1 - Create Network Config File using J2 Template (Merged)
  ansible.builtin.template:
    src: "{{ test_data_query.merged_conf_template }}"
    dest: "{{ test_data_query.merged_conf_file }}"
  delegate_to: localhost
  tags: query

- name: QUERY - TC5 - Create Network Config File using J2 Template
  ansible.builtin.template:
    src: "{{ test_data_query.l2_l3_net_conf_template }}"
    dest: "{{ test_data_query.l2_l3_net_conf_file }}"
  delegate_to: localhost
  tags: query

###############################################
###                QUERY                     ##
###############################################

- name: QUERY - TC1 - DELETED - remove all networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: query

- name: DELETED - TC2 - Load Network Config File
  ansible.builtin.set_fact:
    dcnm_network_merged_conf: "{{ lookup('file', '{{ test_data_query.merged_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: deleted


- name: QUERY - TC1 - MERGED - Create, Attach and Deploy Multiple Network with Single Switch Attach
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_merged_conf }}"
  register: result
  tags: query

- name: QUERY - TC1 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: query

- name: QUERY - TC1 - QUERY - Get network state in NDFC using config
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
    config: "{{ dcnm_network_merged_conf }}"
  register: verify_result
  tags: query

- name: QUERY - TC1 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_query.merged_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  delegate_to: localhost
  tags: query

# TC2
- name: QUERY - TC2 - QUERY - Get network state in NDFC without config
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: query

- name: QUERY - TC2 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_query.merged_conf_file }}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  delegate_to: localhost
  tags: query

# TC3 
- name: QUERY - TC3 - DELETED - Delete all the networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: query

- name: QUERY - TC3 - QUERY - Get network state in NDFC
  cisco.dcnm.dcnm_network:
    state: query
    fabric: "{{ test_data_common.fabric }}"
  register: verify_result
  tags: query

- name: QUERY - TC3 - VALIDITY CHECK - Verify network state in NDFC (all deleted)
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: ""
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
    check_deleted: true
  delegate_to: localhost
  tags: query


# TC4
- name: QUERY - TC4 - Query the non available Network
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: query
    config: "{{ dcnm_network_merged_conf }}"
  register: result
  tags: query

- name: QUERY - TC4 - ASSERT - Check changed flag is false
  assert:
    that:
    - result.changed == false
  tags: query

# TC5
- name: QUERY - TC5 - Load Network Config File
  ansible.builtin.set_fact:
    dcnm_network_l2_l3_net_conf: "{{ lookup('file', '{{ test_data_query.l2_l3_net_conf_file }}') | from_yaml }}"
  delegate_to: localhost
  tags: query

- name: QUERY - TC5 - MERGED - Create a L2 only and L3 networks along with all dhcp, arp options
  cisco.dcnm.dcnm_network: &conf3
    fabric: "{{ test_data_common.fabric }}"
    state: merged
    config: "{{ dcnm_network_l2_l3_net_conf }}"
  register: result
  tags: query

- name: QUERY - TC5 - ASSERT - Check changed flag is true
  assert:
    that:
    - 'result.changed == true'
  tags: query

- name: QUERY - TC5 - Query the L2 and L3 Network with config
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: query
    config: "{{ dcnm_network_l2_l3_net_conf }}"
  register: verify_result
  tags: query

- name: QUERY - TC5 - VALIDITY CHECK - Verify network state in NDFC
  cisco.dcnm.tests.integration.ndfc_network_validate:
    config_path: "{{ test_data_query.l2_l3_net_conf_file}}"
    ndfc_data: "{{ verify_result }}"
    test_data: "{{ test_data_common }}"
  delegate_to: localhost
  tags: query

###############################################
###                 CLEAN-UP                 ##
###############################################

- name: QUERY - END - remove networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_data_common.fabric }}"
    state: deleted
  tags: query
