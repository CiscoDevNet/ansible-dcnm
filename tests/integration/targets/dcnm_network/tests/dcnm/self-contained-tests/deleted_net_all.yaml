##############################################
##                MERGED                    ##
##############################################

- name: DELETED_ALL - Create New Network with many params
  cisco.dcnm.dcnm_network: &conf
    fabric: "{{ test_fabric }}"
    state: merged
    config:
    - net_name: ansible-net13
      vrf_name: Tenant-1
      net_id: 7005
      net_template: Default_Network_Universal
      net_extension_template: Default_Network_Extension_Universal
      vlan_id: 1500
      gw_ip_subnet: '192.168.30.1/24'
      gw_ipv6_subnet: '2001::1/64'
      secondary_ip_gw1: '192.0.2.1/24'
      secondary_ip_gw2: '192.1.2.1/24'
      secondary_ip_gw3: '192.2.2.1/24'
      secondary_ip_gw4: '192.3.2.1/24'
      route_target_both: true
      l3gw_on_border: true
      attach:
      - ip_address: "{{ ansible_switch1 }}"
        ports: ["{{ ansible_sw1_int1 }}", "{{ ansible_sw1_int2 }}"]
        deploy: true
      deploy: true
  register: result

- name: DELETED_ALL - Query fabric for creation of Network Object
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.displayName is search('ansible-net13')"
    - "query_result.response[0].parent.networkId is search('7005')"
    - "query_result.response[0].parent.vrf is search('Tenant-1')"
    - "query_result.response[0].parent.networkStatus is search('DEPLOYED|PENDING')"
  retries: 5
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - 'result.diff[0].attach[0].deploy == true'
    - '"{{ ansible_switch1 }}" in result.diff[0].attach[0].ip_address'
    - 'result.diff[0].net_name == "ansible-net13"'
    - 'result.diff[0].net_id == 7005'
    - 'result.diff[0].vrf_name == "Tenant-1"'

- name: DELETED_ALL - conf - Idempotence
  cisco.dcnm.dcnm_network: *conf
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'

- name: DELETED_ALL - setup - Delete any existing networks
  cisco.dcnm.dcnm_network: &conf1
    fabric: "{{ test_fabric }}"
    state: deleted
  register: result

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - 'result.response[0].MESSAGE == "OK"'
    - 'result.response[1].MESSAGE == "OK"'
    - 'result.response[2].MESSAGE == "OK"'
    - 'result.response[2].METHOD == "DELETE"'
    - '(result.response[0].DATA|dict2items)[0].value == "SUCCESS"'
    - 'result.diff[0].attach[0].deploy == false'
    - '"{{ ansible_switch1 }}" in result.diff[0].attach[0].ip_address'
    - 'result.diff[0].net_name == "ansible-net13"'

- name: DELETED - conf - Idempotence
  cisco.dcnm.dcnm_network: *conf1
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'
    - 'result.diff|length == 0'

##############################################
##                 CLEAN-UP                 ##
##############################################

- name: DELETED_ALL - setup - Clean up any existing networks
  cisco.dcnm.dcnm_network:
    fabric: "{{ test_fabric }}"
    state: deleted
