##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f srp.log

- name: Delete route peerings
  cisco.dcnm.dcnm_service_route_peering:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_it_service_fabric }}"
    state: deleted
  register: result

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'
  loop: '{{ result.response }}'


- block:

##############################################
##                MERGE                     ##
##############################################

    - name: Create Loadbalancer One ARM Static and eBGP peerings
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-ADC-RP4
            node_name: "{{ ansible_snode_2 }}"               # mandatory
            deploy_mode: one_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]
            peering_option: ebgp                             # optional, default is static, choices=[static, ebgp]
            first_arm:
              vrf: "{{ ansible_vrf_41 }}"                    # mandatory
              name: rp4-sn2-first-arm                        # mandatory
              vlan_id: 401                                   # mandatory
              profile:
                ipv4_gw: 192.164.1.1/24                      # mandatory
                ipv6_gw: 2004:db01::1/64                     # optional, default is ''
                vlan_name: rp4-sn2-first-arm                 # optional, default is ''
                int_descr: "RP4 SN2 first arm intf"          # optional, default is ''
                tag: 41111                                   # optional, default is 12345
                ipv4_neighbor: 41.41.41.1                    # mandatory
                ipv4_lo: 41.1.1.2                            # mandatory
                ipv4_vpc_peer_lo: 41.1.1.3                   # optional, default is ''
                ipv6_neighbor: 2004:4141::1                  # optional, default is ''
                ipv6_lo: 2004:0102::1                        # optional, default is ''
                ipv6_vpc_peer_lo: 2004:0103::1               # optional, default is ''
                route_map_tag: 41112                         # optional, default is 12345
                neigh_int_descr: "RP4 SN2 first arm"         # optional, default is ''
                local_asn: 65401                             # optional, default is ''
                adv_host: true                               # optional, default is false
            reverse_next_hop: 192.164.1.100                  # mandatory

          - name: IT-ADC-RP6
            node_name: "{{ ansible_snode_2 }}"               # mandatory
            deploy_mode: one_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]
            peering_option: static                           # optional, default is static, choices=[static, ebgp]
            first_arm:
              vrf: "{{ ansible_vrf_61 }}"                    # mandatory
              name: rp6-sn2-first-arm                        # mandatory
              vlan_id: 601                                   # mandatory
              profile:
                ipv4_gw: 192.166.1.1/24                      # mandatory
                ipv6_gw: 2006:db01::1/64                     # optional, default is ''
                vlan_name: rp6-sn2-first-arm                 # optional, default is ''
                int_descr: "RP6 SN2 first arm intf"          # optional, default is ''
                tag: 61111                                   # optional, default is 12345
                static_route:                                # optional, default is ''
                  - subnet: 61.61.61.1/24
                    next_hop:
                      - 161.161.161.1
                      - 162.162.162.1
                  - subnet: 22.0.0.0/24
                    next_hop:
                      - 163.163.163.1
                      - 164.164.164.1
            reverse_next_hop: 192.166.1.100                  # mandatory

        attach: true
        deploy: true
        state: merged
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 2'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 2'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##                CONVERT                   ##
##############################################

    - name: Convert Loadbalancer One ARM Static to eBGP and eBGP to Static peerings
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-ADC-RP6
            node_name: "{{ ansible_snode_2 }}"               # mandatory
            deploy_mode: one_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]
            peering_option: ebgp                             # optional, default is static, choices=[static, ebgp]
            first_arm:
              vrf: "{{ ansible_vrf_61 }}"                    # mandatory
              name: rp6-sn2-first-arm                        # mandatory
              vlan_id: 601                                   # mandatory
              profile:
                ipv4_gw: 192.166.1.1/24                      # mandatory
                ipv6_gw: 2006:db01::1/64                     # optional, default is ''
                vlan_name: rp6-sn2-first-arm                 # optional, default is ''
                int_descr: "RP6 SN2 first arm intf"          # optional, default is ''
                tag: 61111                                   # optional, default is 12345
                ipv4_neighbor: 61.61.61.1                    # mandatory
                ipv4_lo: 61.1.1.2                            # mandatory
                ipv4_vpc_peer_lo: 61.1.1.3                   # optional, default is ''
                ipv6_neighbor: 2006:6161::1                  # optional, default is ''
                ipv6_lo: 2006:0102::1                        # optional, default is ''
                ipv6_vpc_peer_lo: 2006:0103::1               # optional, default is ''
                route_map_tag: 61112                         # optional, default is 12345
                neigh_int_descr: "RP6 SN2 first arm"         # optional, default is ''
                local_asn: 65601                             # optional, default is ''
                adv_host: true                               # optional, default is false
            reverse_next_hop: 192.166.1.100                  # mandatory

          - name: IT-ADC-RP4
            node_name: "{{ ansible_snode_2 }}"               # mandatory
            deploy_mode: one_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]
            peering_option: static                           # optional, default is static, choices=[static, ebgp]
            first_arm:
              vrf: "{{ ansible_vrf_41 }}"                    # mandatory
              name: rp4-sn2-first-arm                        # mandatory
              vlan_id: 401                                   # mandatory
              profile:
                ipv4_gw: 192.164.1.1/24                      # mandatory
                ipv6_gw: 2004:db01::1/64                     # optional, default is ''
                vlan_name: rp4-sn2-first-arm                 # optional, default is ''
                int_descr: "RP4 SN2 first arm intf"          # optional, default is ''
                tag: 41111                                   # optional, default is 12345
                static_route:                                # optional, default is ''
                  - subnet: 41.41.41.1/24
                    next_hop:
                      - 141.141.141.1
                      - 142.142.142.1
                  - subnet: 42.0.0.0/24
                    next_hop:
                      - 143.143.143.1
                      - 144.144.144.1
            reverse_next_hop: 192.164.1.100                  # mandatory

        attach: true
        deploy: true
        state: merged
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 2'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 2'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##                MERGE                     ##
##############################################

    - name: Create Loadbalancer Two ARM Static and eBGP peerings
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-ADC-RP5
            node_name: "{{ ansible_snode_2 }}"               # mandatory
            deploy_mode: two_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]
            peering_option: ebgp                             # optional, default is static, choices=[static, ebgp]
            first_arm:
              vrf: "{{ ansible_vrf_51 }}"                    # mandatory
              name: rp5-sn2-first-arm                        # mandatory
              vlan_id: 501                                   # mandatory
              profile:
                ipv4_gw: 192.165.1.1/24                      # mandatory
                ipv6_gw: 2005:db01::1/64                     # optional, default is ''
                vlan_name: rp5-sn2-first-arm                 # optional, default is ''
                int_descr: "RP5 SN2 first arm intf"          # optional, default is ''
                tag: 51111                                   # optional, default is 12345
                ipv4_neighbor: 51.51.51.1                    # mandatory
                ipv4_lo: 51.1.1.2                            # mandatory
                ipv4_vpc_peer_lo: 51.1.1.3                   # optional, default is ''
                ipv6_neighbor: 2005:5151::1                  # optional, default is ''
                ipv6_lo: 2005:0102::1                        # optional, default is ''
                ipv6_vpc_peer_lo: 2005:0103::1               # optional, default is ''
                route_map_tag: 51115                         # optional, default is 12345
                neigh_int_descr: "RP5 SN2 first arm"         # optional, default is ''
                local_asn: 65501                             # optional, default is ''
                adv_host: true                               # optional, default is false
            second_arm:
              vrf: "{{ ansible_vrf_51 }}"                    # mandatory
              name: rp5-sn2-second-arm                       # mandatory
              vlan_id: 502                                   # mandatory
              profile:
                ipv4_gw: 192.165.2.1/24                      # mandatory
                ipv6_gw: 2005:db02::1/64                     # optional, default is ''
                vlan_name: rp5-sn2-second-arm                # optional, default is ''
                int_descr: "RP5 SN2 second arm intf"         # optional, default is ''
                tag: 51112                                   # optional, default is 12345
            reverse_next_hop: 192.165.1.100                  # mandatory

          - name: IT-ADC-RP7
            node_name: "{{ ansible_snode_2 }}"               # mandatory
            deploy_mode: two_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]
            peering_option: static                           # optional, default is static, choices=[static, ebgp]
            first_arm:
              vrf: "{{ ansible_vrf_71 }}"                    # mandatory
              name: rp7-sn2-first-arm                        # mandatory
              vlan_id: 701                                   # mandatory
              profile:
                ipv4_gw: 192.167.1.1/24                      # mandatory
                ipv6_gw: 2007:db01::1/64                     # optional, default is ''
                vlan_name: rp7-sn2-first-arm                 # optional, default is ''
                int_descr: "RP6 SN2 first arm  intf"         # optional, default is ''
                tag: 71111                                   # optional, default is 12345
                static_route:                                # optional, default is ''
                  - subnet: 71.71.71.1/24
                    next_hop:
                      - 171.171.171.1
                      - 172.172.172.1
            second_arm:
              vrf: "{{ ansible_vrf_71 }}"                    # mandatory
              name: rp7-sn2-second-arm                       # mandatory
              vlan_id: 702                                   # mandatory
              profile:
                ipv4_gw: 192.167.2.1/24                      # mandatory
                ipv6_gw: 2007:db02::1/64                     # optional, default is ''
                vlan_name: rp7-sn2-second-arm                # optional, default is ''
                int_descr: "RP7 SN2 second arm intf"         # optional, default is ''
                tag: 71112                                   # optional, default is 12345
            reverse_next_hop: 192.167.1.100                  # mandatory
        attach: true
        deploy: true
        state: merged
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 2'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 2'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##                CONVERT                   ##
##############################################

    - name: Convert Loadbalancer Two ARM Static to eBGP and eBGP to Static peerings
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-ADC-RP7
            node_name: "{{ ansible_snode_2 }}"               # mandatory
            deploy_mode: two_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]
            peering_option: ebgp                             # optional, default is static, choices=[static, ebgp]
            first_arm:
              vrf: "{{ ansible_vrf_71 }}"                    # mandatory
              name: rp7-sn2-first-arm                        # mandatory
              vlan_id: 701                                   # mandatory
              profile:
                ipv4_gw: 192.167.1.1/24                      # mandatory
                ipv6_gw: 2007:db01::1/64                     # optional, default is ''
                vlan_name: rp7-sn2-first-arm                 # optional, default is ''
                int_descr: "RP7 SN2 first arm intf"          # optional, default is ''
                tag: 51111                                   # optional, default is 12345
                ipv4_neighbor: 71.71.71.1                    # mandatory
                ipv4_lo: 71.1.1.2                            # mandatory
                ipv4_vpc_peer_lo: 71.1.1.3                   # optional, default is ''
                ipv6_neighbor: 2007:7171::1                  # optional, default is ''
                ipv6_lo: 2007:0102::1                        # optional, default is ''
                ipv6_vpc_peer_lo: 2007:0103::1               # optional, default is ''
                route_map_tag: 71115                         # optional, default is 12345
                neigh_int_descr: "RP7 SN2 first arm"         # optional, default is ''
                local_asn: 65701                             # optional, default is ''
                adv_host: true                               # optional, default is false
            second_arm:
              vrf: "{{ ansible_vrf_71 }}"                    # mandatory
              name: rp7-sn2-second-arm                       # mandatory
              vlan_id: 702                                   # mandatory
              profile:
                ipv4_gw: 192.167.2.1/24                      # mandatory
                ipv6_gw: 2007:db02::1/64                     # optional, default is ''
                vlan_name: rp7-sn2-second-arm                # optional, default is ''
                int_descr: "RP7 SN2 second arm intf"         # optional, default is ''
                tag: 71112                                   # optional, default is 12345
            reverse_next_hop: 192.167.1.100                  # mandatory

          - name: IT-ADC-RP5
            node_name: "{{ ansible_snode_2 }}"               # mandatory
            deploy_mode: two_arm_adc                         # mandatory, choices=[one_arm_adc, two_arm_adc]
            peering_option: static                           # optional, default is static, choices=[static, ebgp]
            first_arm:
              vrf: "{{ ansible_vrf_51 }}"                    # mandatory
              name: rp5-sn2-first-arm                        # mandatory
              vlan_id: 501                                   # mandatory
              profile:
                ipv4_gw: 192.165.1.1/24                      # mandatory
                ipv6_gw: 2005:db01::1/64                     # optional, default is ''
                vlan_name: rp5-sn2-first-arm                 # optional, default is ''
                int_descr: "RP5 SN2 first arm  intf"         # optional, default is ''
                tag: 51111                                   # optional, default is 12345
                static_route:                                # optional, default is ''
                  - subnet: 51.51.51.1/24
                    next_hop:
                      - 151.151.151.1
                      - 152.152.152.1
            second_arm:
              vrf: "{{ ansible_vrf_51 }}"                    # mandatory
              name: rp5-sn2-second-arm                       # mandatory
              vlan_id: 502                                   # mandatory
              profile:
                ipv4_gw: 192.165.2.1/24                      # mandatory
                ipv6_gw: 2005:db02::1/64                     # optional, default is ''
                vlan_name: rp5-sn2-second-arm                # optional, default is ''
                int_descr: "RP5 SN2 second arm intf"         # optional, default is ''
                tag: 51112                                   # optional, default is 12345
            reverse_next_hop: 192.165.1.100                  # mandatory
        attach: true
        deploy: true
        state: merged
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 2'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 2'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##                CLEANUP                   ##
##############################################

  always:


    - name: Delete all created route peerings
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-FW-RP1                                   # mandatory
            node_name: "{{ ansible_snode_1 }}"                # mandatory

          - name: IT-FW-RP2                                   # mandatory
            node_name: "{{ ansible_snode_1 }}"                # mandatory

          - name: IT-FW-RP3                                   # mandatory
            node_name: "{{ ansible_snode_1 }}"                # mandatory

          - name: IT-ADC-RP4                                  # mandatory
            node_name: "{{ ansible_snode_2 }}"                # mandatory

          - name: IT-ADC-RP5                                  # mandatory
            node_name: "{{ ansible_snode_2 }}"                # mandatory

          - name: IT-ADC-RP6                                  # mandatory
            node_name: "{{ ansible_snode_2 }}"                # mandatory

          - name: IT-ADC-RP7                                  # mandatory
            node_name: "{{ ansible_snode_2 }}"                # mandatory

        state: deleted
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined