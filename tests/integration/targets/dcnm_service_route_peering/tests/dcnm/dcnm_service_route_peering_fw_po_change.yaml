##############################################
##               SETUP                      ##
##############################################

- name: Remove local log file
  local_action: command rm -f srp.log

- name: Delete route peerings
  cisco.dcnm.dcnm_service_route_peering:
    fabric: "{{ ansible_it_fabric }}"
    service_fabric: "{{ ansible_it_service_fabric }}"
    state: deleted
  register: result

- assert:
    that:
      - 'item["RETURN_CODE"] == 200'
  loop: '{{ result.response }}'


- block:

##############################################
##                MERGE                     ##
##############################################

    - name: Create Intertenant Firewall SRP with Static Peering
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-FW-RP2                                  # mandatory
            node_name: "{{ ansible_snode_1 }}"               # mandatory
            deploy_mode: inter_tenant_fw                     # mandatory, choices=[intra_tenant_fw, inter_tenant_fw]
            peering_option: static                           # optional, default is static, choices=[static, ebgp]
            inside_network:                                  #
              vrf: "{{ ansible_vrf_21 }}"                    # mandatory
              name: rp2-sn1-inside-net                       # mandatory
              vlan_id: 201                                   # mandatory
              profile:
                ipv4_gw: 192.162.1.1/24                      # mandatory
                ipv6_gw: 2002:db01::1/64                     # optional, default is ''
                vlan_name: rp2-sn1-inside                    # optional, default is ''
                int_descr: "RP2 SN1 inside interface"        # optional, default is ''
                static_route:                                # optional, default is ''
                  - subnet: 20.20.20.0/24
                    next_hop:
                      - 120.120.120.100
                      - 121.121.121.100
                tag: 21111                                   # optional, default is 12345
            outside_network:                                 #
              vrf: "{{ ansible_vrf_22 }}"                    # mandatory
              name: rp2-sn1-outside-net                      # mandatory
              vlan_id: 202                                   # mandatory
              profile:
                ipv4_gw: 192.162.2.1/24                      # mandatory
                ipv6_gw: 2002:db02::1/64                     # optional, default is ''
                vlan_name: rp2-sn1-outside                   # optional, default is ''
                int_descr: "RP2 SN1 outside interface"       # optional, default is ''
                static_route:                                # optional, default is ''
                  - subnet: 21.21.21.0/24
                    next_hop:
                      - 122.122.122.100
                      - 123.123.123.100
                tag: 22222                                   # optional, default is 12345

        attach: true
        deploy: true
        state: merged
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 1'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 0'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##                CONVERT                   ##
##############################################

    - name: Convert Intertenant Firewall SRP with Static Peering to eBGP peering
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-FW-RP2                                  # mandatory
            node_name: "{{ ansible_snode_1 }}"               # mandatory
            deploy_mode: inter_tenant_fw                     # mandatory, choices=[intra_tenant_fw, inter_tenant_fw]
            peering_option: ebgp                             # optional, default is static, choices=[static, ebgp]
            inside_network:
              vrf: "{{ ansible_vrf_21 }}"                    # mandatory
              name: rp2-sn1-inside-net                       # mandatory
              vlan_id: 201                                   # mandatory
              profile:
                ipv4_gw: 192.162.1.1/24                      # mandatory
                ipv6_gw: 2002:db01::1/64                     # optional, default is ''
                vlan_name: rp2-sn1-inside                    # optional, default is ''
                int_descr: "RP2 SN1 inside interface"        # optional, default is ''
                tag: 21111                                   # optional, default is 12345
                ipv4_neighbor: 21.21.21.1                    # mandatory
                ipv4_lo: 21.4.1.2                            # mandatory
                ipv4_vpc_peer_lo: 21.4.1.3                   # optional, default is ''
                ipv6_neighbor: 2002:2121::1                  # optional, default is ''
                ipv6_lo: 2002:0402::1                        # optional, default is ''
                ipv6_vpc_peer_lo: 2002:0403::1               # optional, default is ''
                route_map_tag: 21111                         # optional, default is 12345
                neigh_int_descr: "RP2 SN1 inside interface"  # optional, default is ''
                local_asn: 65201                             # optional, default is ''
                adv_host: true                               # optional, default is false
            outside_network:
              vrf: "{{ ansible_vrf_22 }}"                    # mandatory
              name: rp2-sn1-outside-net                      # mandatory
              vlan_id: 202                                   # mandatory
              profile:
                ipv4_gw: 192.162.2.1/24                      # mandatory
                ipv6_gw: 2002:db02::1/64                     # optional, default is ''
                vlan_name: rp2-sn1-outside                   # optional, default is ''
                int_descr: "RP2 SN1 outside interface"       # optional, default is ''
                tag: 22222                                   # optional, default is 12345
                ipv4_neighbor: 121.121.121.1                 # mandatory
                ipv4_lo: 121.4.1.2                           # mandatory
                ipv4_vpc_peer_lo: 121.4.1.3                  # optional, default is ''
                ipv6_neighbor: 2002:8282::1                  # optional, default is ''
                ipv6_lo: 2002:0404::1                        # optional, default is ''
                ipv6_vpc_peer_lo: 2002:0405::1               # optional, default is ''
                route_map_tag: 21112                         # optional, default is 12345
                neigh_int_descr: "RP2 SN1 outside interface" # optional, default is ''
                local_asn: 65202                             # optional, default is ''
                adv_host: true                               # optional, default is false

        attach: true
        deploy: true
        state: merged
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 1'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##                CONVERT                   ##
##############################################

    - name: Convert Intertenant Firewall SRP with eBGP Peering back to Static Peering
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-FW-RP2                                  # mandatory
            node_name: "{{ ansible_snode_1 }}"               # mandatory
            deploy_mode: inter_tenant_fw                     # mandatory, choices=[intra_tenant_fw, inter_tenant_fw]
            peering_option: static                           # optional, default is static, choices=[static, ebgp]
            inside_network:                                  #
              vrf: "{{ ansible_vrf_21 }}"                    # mandatory
              name: rp2-sn1-inside-net                       # mandatory
              vlan_id: 201                                   # mandatory
              profile:
                ipv4_gw: 192.162.1.1/24                      # mandatory
                ipv6_gw: 2002:db01::1/64                     # optional, default is ''
                vlan_name: rp2-sn1-inside                    # optional, default is ''
                int_descr: "RP2 SN1 inside interface"        # optional, default is ''
                static_route:                                # optional, default is ''
                  - subnet: 20.20.20.0/24
                    next_hop:
                      - 120.120.120.100
                      - 121.121.121.100
                tag: 21111                                   # optional, default is 12345
            outside_network:                                 #
              vrf: "{{ ansible_vrf_22 }}"                    # mandatory
              name: rp2-sn1-outside-net                      # mandatory
              vlan_id: 202                                   # mandatory
              profile:
                ipv4_gw: 192.162.2.1/24                      # mandatory
                ipv6_gw: 2002:db02::1/64                     # optional, default is ''
                vlan_name: rp2-sn1-outside                   # optional, default is ''
                int_descr: "RP2 SN1 outside interface"       # optional, default is ''
                static_route:                                # optional, default is ''
                  - subnet: 21.21.21.0/24
                    next_hop:
                      - 122.122.122.100
                      - 123.123.123.100
                tag: 22222                                   # optional, default is 12345

        attach: true
        deploy: true
        state: merged
      register: result

    - assert:
        that:
          - 'result.changed == true'
          - '(result["diff"][0]["merged"] | length) == 0'
          - '(result["diff"][0]["deleted"] | length) == 0'
          - '(result["diff"][0]["modified"] | length) == 1'
          - '(result["diff"][0]["query"] | length) == 0'
          - '(result["diff"][0]["deploy"] | length) == 1'

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'

##############################################
##                CLEANUP                   ##
##############################################

  always:


    - name: Delete all created route peerings
      cisco.dcnm.dcnm_service_route_peering:
        fabric: "{{ ansible_it_fabric }}"
        service_fabric: "{{ ansible_it_service_fabric }}"
        config:
          - name: IT-FW-RP1                                   # mandatory
            node_name: "{{ ansible_snode_1 }}"                # mandatory

          - name: IT-FW-RP2                                   # mandatory
            node_name: "{{ ansible_snode_1 }}"                # mandatory

          - name: IT-FW-RP3                                   # mandatory
            node_name: "{{ ansible_snode_1 }}"                # mandatory

          - name: IT-ADC-RP4                                  # mandatory
            node_name: "{{ ansible_snode_2 }}"                # mandatory

          - name: IT-ADC-RP5                                  # mandatory
            node_name: "{{ ansible_snode_2 }}"                # mandatory

          - name: IT-ADC-RP6                                  # mandatory
            node_name: "{{ ansible_snode_2 }}"                # mandatory

          - name: IT-ADC-RP7                                  # mandatory
            node_name: "{{ ansible_snode_2 }}"                # mandatory

        state: deleted
      register: result
      when: IT_CONTEXT is not defined

    - assert:
        that:
          - 'item["RETURN_CODE"] == 200'
      loop: '{{ result.response }}'
      when: IT_CONTEXT is not defined