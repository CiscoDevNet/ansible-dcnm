---

- name: Test Entry Point - [dcnm_pc_members]
  ansible.builtin.debug:
    msg:
      - "----------------------------------------------------------------"
      - "+     Executing Tests - [dcnm_pc_members]                      +"
      - "----------------------------------------------------------------"

# --------------------------------
# Create Dictionary of Test Data
# --------------------------------
- name: Setup Internal TestCase Variables
  ansible.builtin.set_fact:
    test_data:
      pc1: "{{ port_channel_1 }}"
      pc2: "{{ port_channel_2 }}"
      pc3: "{{ port_channel_3 }}"
      sw1: "{{ ansible_switch1 }}"
      sw2: "{{ ansible_switch2 }}"
      eth_intf8: "{{ ansible_eth_intf8 }}"
      eth_intf9: "{{ ansible_eth_intf9 }}"
      eth_intf10: "{{ ansible_eth_intf10 }}"
      eth_intf11: "{{ ansible_eth_intf11 }}"
      eth_intf12: "{{ ansible_eth_intf12 }}"
      eth_intf13: "{{ ansible_eth_intf13 }}"
      pc_trunk_desc: "Trunk PC Configured by Ansible"
      pc_access_desc: "Access PC Configured by Ansible"
      pc_l3_desc: "L3 PC Configured by Ansible"
      eth_trunk_desc: "Trunk Member Configured by Ansible"
      eth_access_desc: "Access Member Configured by Ansible"
      eth_l3_desc: "L3 Member Configured by Ansible"
  delegate_to: localhost

# ----------------------------------------------
# Create Module Payloads using Jinja2 Templates
# ----------------------------------------------
- name: Build Interface Reset Data
  ansible.builtin.template:
    src: ndfc_pc_interfaces.j2
    dest: "{{ role_path }}/files/ndfc_pc_interfaces.yaml"
  delegate_to: localhost

- name: Access Interface Reset Data and Save to Local Variable
  ansible.builtin.set_fact:
    ndfc_pc_interfaces_data: "{{ lookup('file', 'ndfc_pc_interfaces.yaml') | from_yaml }}"
  delegate_to: localhost

- name: Build Interface Create Data
  ansible.builtin.template:
    src: ndfc_pc_create.j2
    dest: "{{ role_path }}/files/ndfc_pc_create.yaml"
  delegate_to: localhost

- name: Access Interface Create Data and Save to Local Variable
  ansible.builtin.set_fact:
    ndfc_pc_create_data: "{{ lookup('file', 'ndfc_pc_create.yaml') | from_yaml }}"
  delegate_to: localhost

- name: Build Interface Member Data
  ansible.builtin.template:
    src: ndfc_pc_members.j2
    dest: "{{ role_path }}/files/ndfc_pc_members.yaml"
  delegate_to: localhost

- name: Access Interface Member Data and Save to Local Variable
  ansible.builtin.set_fact:
    ndfc_pc_members_data: "{{ lookup('file', 'ndfc_pc_members.yaml') | from_yaml }}"
  delegate_to: localhost

# ----------------------------------------------
# Run Test Cases
# ----------------------------------------------
- name: Reset Interface State Before Testing
  cisco.dcnm.dcnm_interface:
    fabric: "{{ ansible_it_fabric }}"
    state: deleted
    config: "{{ ndfc_pc_interfaces_data}}"

- name: Create Port Channel and Add Member Interfaces
  cisco.dcnm.dcnm_interface:
    fabric: "{{ ansible_it_fabric }}"
    state: replaced
    config: "{{ ndfc_pc_create_data }}"

- name: Update Port Channel Member Interfaces
  cisco.dcnm.dcnm_interface:
    fabric: "{{ ansible_it_fabric }}"
    state: replaced
    config: "{{ ndfc_pc_members_data }}"

- name: Query Port Channel Interface and Member State
  cisco.dcnm.dcnm_interface:
    fabric: "{{ ansible_it_fabric }}"
    state: query
    config: "{{ ndfc_pc_interfaces_data}}"
  register: pc_state

# ----------------------------------------------
# Validate Test Data
# ----------------------------------------------
- name: Validate Test Data
  cisco.dcnm.tests.unit.ndfc_pc_members_validate:
    ndfc_data: "{{ pc_state }}"
    test_data: "{{ test_data }}"
  register: result

# ----------------------------------------------
# Idempotent Test
# ----------------------------------------------
- name: Create Port Channel and Add Member Interfaces
  cisco.dcnm.dcnm_interface:
    fabric: "{{ ansible_it_fabric }}"
    state: replaced
    config: "{{ ndfc_pc_create_data }}"
  register: create_result

- name: Update Port Channel Member Interfaces
  cisco.dcnm.dcnm_interface:
    fabric: "{{ ansible_it_fabric }}"
    state: replaced
    config: "{{ ndfc_pc_members_data }}"
  register: update_result

- assert:
    that:
      - 'create_result.changed == false'
      - 'update_result.changed == false'